Problem: StackTest

---------------------
PUT_PeekContract
Disjunctive (PexChoose):
Disjunctive (Alternate Semantics):
Disjunctive (Truly):

smt check: Precis

Truly Safe: True

Analysis: (New_ContainsNewRet) holds because the item will still be on the top. 1 == Old_s1Count If there is one element in the pre state there will be on in the post state. If not, the number of elements still won't change.

learned postcondition: (((New_s1Count == Old_s1Count && New_ContainsNewRet && Old_s1Count >= 1)) && ((Old_s1Count >= 2 && New_s1Count >= 2) || (New_s1Count == 1 && Old_s1Count == 1)))

simplified postcondition: ((New_s1Count == Old_s1Count && New_ContainsNewRet && Old_s1Count >= 2) || (New_ContainsNewRet && New_s1Count == 1 && Old_s1Count == 1))

CNF simplified: ((New_ContainsNewRet) && ((New_s1Count == Old_s1Count && Old_s1Count >= 2) || (New_s1Count == 1 && Old_s1Count == 1)))

CNF simplified (smt): (and New_ContainsNewRet (or (and (= New_s1Count Old_s1Count) (>= Old_s1Count 2)) (and (= New_s1Count 1) (= Old_s1Count 1))))

Predicate chosen at root : 1 == Old_s1Count

rounds: 6

pex time: 43.5341682434082

learn time: 9.728874921798706

Samples: 17

---------------------
PUT_CountContract
Disjunctive (PexChoose):
Disjunctive (Alternate Semantics):
Disjunctive (Truly):

smt check: Precis

Truly Safe: True

Analysis: ((New_Top == Old_Top && New_Ret >= 0) || (New_Ret == 0)) holds because the state of the Stack does not change.

learned postcondition: ((New_Ret >= 0) && (New_Top == Old_Top || New_Ret == 0))

simplified postcondition: ((New_Top == Old_Top && New_Ret >= 0) || New_Ret == 0)

CNF simplified: (((New_Top == Old_Top && New_Ret >= 0) || (New_Ret == 0)))

CNF simplified (smt): (or (and (= New_Top Old_Top) (>= New_Ret 0)) (= New_Ret 0))

Predicate chosen at root : New_Top == Old_Top

rounds: 7

pex time: 47.80462431907654

learn time: 52.22892761230469

Samples: 27

---------------------
PUT_ContainsContract
Disjunctive (PexChoose):
Disjunctive (Alternate Semantics):
Disjunctive (Truly):

smt check: Precis

Truly Safe: True

Analysis: (New_s1Count == Old_s1Count) holds because the state does not change. !(New_Ret) If the queried item is not present, there are at least zero elements. If not, there is at least one element.

learned postcondition: (((New_s1Count == Old_s1Count && Old_s1Count >= 0)) && ((!(New_Ret)) || (New_Top == Old_Top && Old_s1Count >= 1 && New_s1Count >= 1)))

simplified postcondition: ((New_s1Count == Old_s1Count && (!(New_Ret)) && Old_s1Count >= 0) || (New_s1Count == Old_s1Count && New_Top == Old_Top && Old_s1Count >= 1))

CNF simplified: ((New_s1Count == Old_s1Count) && (((!(New_Ret)) && Old_s1Count >= 0) || (New_Top == Old_Top && Old_s1Count >= 1)))

CNF simplified (smt): (and (= New_s1Count Old_s1Count) (or (and (not New_Ret) (>= Old_s1Count 0)) (and (= New_Top Old_Top) (>= Old_s1Count 1))))

Predicate chosen at root : Not(New_Ret)

rounds: 5

pex time: 47.6549437046051

learn time: 63.48613929748535

Samples: 21

---------------------
PUT_PopContract
Disjunctive (PexChoose):
Disjunctive (Alternate Semantics):
Disjunctive (Truly):

smt check: Precis

Truly Safe: True

Analysis: (New_Ret == Old_Top && New_s1Count == -1 + Old_s1Count) holds because the returned item will be from the top and the number of elements decreases by one in the post state. !(New_s1ContainsNewRet) If the removed item is no longer in the Stack, there will be at least zero elements in the post state. If not, there will be at least one elements in the post state. If not, it holds that there was at least 1 element in the pre state.

learned postcondition: (((New_Ret == Old_Top && New_s1Count == -1 + Old_s1Count && New_s1Count >= 0)) && ((!(New_ContainsNewRet)) || (New_s1Count >= 1 && Old_s1Count >= 2)))

simplified postcondition: ((New_Ret == Old_Top && New_s1Count == -1 + Old_s1Count && (!(New_ContainsNewRet)) && New_s1Count >= 0) || (New_Ret == Old_Top && New_s1Count == -1 + Old_s1Count && Old_s1Count >= 2))

CNF simplified: ((New_Ret == Old_Top && New_s1Count == -1 + Old_s1Count) && (((!(New_ContainsNewRet)) && New_s1Count >= 0) || (Old_s1Count >= 2)))

CNF simplified (smt): (and (and (= New_Ret Old_Top) (= New_s1Count (+ -1 Old_s1Count))) (or (and (not New_ContainsNewRet) (>= New_s1Count 0)) (>= Old_s1Count 2)))

Predicate chosen at root : Not(New_ContainsNewRet)

rounds: 5

pex time: 45.62761068344116

learn time: 212.9666862487793

Samples: 30

---------------------
PUT_PushContract
Disjunctive (PexChoose):
Disjunctive (Alternate Semantics):
Disjunctive (Truly):

smt check: Precis

Truly Safe: True

Analysis: (Old_x == New_Top && New_s1Count == 1 + Old_s1Count && New_s1ContainsX) holds becuase the new item will be insterted to the top of the Stack. !(Old_s1ContainsX) If the item to push was not present in the pre state, then it holds that there will be at least one element in the post state. If not, then it holds that there will be at least two elemets in the post state.

learned postcondition: (((Old_x == New_Top && New_s1Count == 1 + Old_s1Count && New_s1ContainsX && New_s1Count >= 1)) && ((!(Old_s1ContainsX)) || (Old_s1Count >= 1 && New_s1Count >= 2)))

simplified postcondition: ((Old_x == New_Top && New_s1Count == 1 + Old_s1Count && New_s1ContainsX && (!(Old_s1ContainsX)) && New_s1Count >= 1) || (Old_x == New_Top && New_s1Count == 1 + Old_s1Count && New_s1ContainsX && New_s1Count >= 2))

CNF simplified: ((Old_x == New_Top && New_s1Count == 1 + Old_s1Count && New_s1ContainsX) && (((!(Old_s1ContainsX)) && New_s1Count >= 1) || (New_s1Count >= 2)))

CNF simplified (smt): (and (and (= Old_x New_Top) (= New_s1Count (+ 1 Old_s1Count)) New_s1ContainsX) (or (and (not Old_s1ContainsX) (>= New_s1Count 1)) (>= New_s1Count 2)))

Predicate chosen at root : Not(Old_s1ContainsX)

rounds: 7

pex time: 69.16713547706604

learn time: 300.152508020401

Samples: 32

======================
Average Rounds: 6.0

Average Pex Time: 50.75769648551941

Average Learn Time: 127.7126272201538
