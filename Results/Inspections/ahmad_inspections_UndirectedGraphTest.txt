Problem: UndirectedGraphTest

---------------------
PUT_AddVertexContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (New_ugContainsVertexX && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && (!(New_ugIsVerticesEmpty)))

simplified postcondition: ((New_ugContainsVertexX && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && (!(New_ugIsVerticesEmpty))))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((New_ugContainsVertexX && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && (!(New_ugIsVerticesEmpty))) && (((New_ugVertexCount == Old_ugVertexCount + 1 && New_ugAdjacentDegree == 0 && (!(Old_ugContainsVertexX)) && New_ugVertexCount != Old_ugVertexCount && New_ugAdjacentDegree != New_ugVertexCount) && New_Ret) || ((Old_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && (!(Old_ugIsVerticesEmpty))) && (!(New_Ret)))))

simplified postcondition: ((New_ugContainsVertexX && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && (!(New_ugIsVerticesEmpty)) && New_ugVertexCount == 1 + Old_ugVertexCount && New_ugAdjacentDegree == 0 && (!(Old_ugContainsVertexX)) && (!(New_ugAdjacentDegree == New_ugVertexCount)) && New_Ret) || (New_ugContainsVertexX && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && (!(New_ugIsVerticesEmpty)) && Old_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && (!(Old_ugIsVerticesEmpty)) && (!(New_Ret))))

predicates: New_Ret

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((New_ugContainsVertexX && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && (!(New_ugIsVerticesEmpty))) && ((((New_ugVertexCount ==                   Old_ugVertexCount + 1 && New_ugAdjacentDegree == 0 && (!(Old_ugContainsVertexX)) && New_ugVertexCount != Old_ugVertexCount && New_ugAdjacentDegree != New_ugVertexCount) && (((Old_ugEdgeCount ==                          Old_ugVertexCount &&  Old_ugEdgeCount !=                          New_ugVertexCount &&  New_ugEdgeCount !=                          New_ugVertexCount) && New_ugEdgeCount == Old_ugVertexCount) || (((!(Old_ugIsVerticesEmpty)) &&  Old_ugEdgeCount !=                          Old_ugVertexCount &&  New_ugEdgeCount !=                          Old_ugVertexCount &&  New_ugAdjacentDegree !=                          Old_ugVertexCount) && (!(New_ugEdgeCount ==                          Old_ugVertexCount))))) && New_Ret) || (((Old_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && (!(Old_ugIsVerticesEmpty))) && (((New_ugAdjacentDegree ==                          Old_ugEdgeCount &&  New_x == Old_ugEdgeCount &&  Old_x == Old_ugEdgeCount &&  New_ugAdjacentDegree ==                          New_ugEdgeCount &&  Old_x == New_ugEdgeCount &&  Old_x == New_ugAdjacentDegree &&  New_x == New_ugAdjacentDegree) && New_x == New_ugEdgeCount) || ((Old_x != Old_ugEdgeCount &&  New_x != Old_ugEdgeCount &&  Old_x != New_ugEdgeCount &&  New_x != New_ugEdgeCount) && (!(New_x == New_ugEdgeCount))))) && (!(New_Ret)))))

simplified postcondition: ((New_ugContainsVertexX && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && (!(New_ugIsVerticesEmpty)) && New_ugVertexCount == 1 + Old_ugVertexCount && New_ugAdjacentDegree == 0 && (!(Old_ugContainsVertexX)) && (!(New_ugAdjacentDegree == New_ugVertexCount)) && New_ugEdgeCount == Old_ugVertexCount && New_Ret) || (New_ugContainsVertexX && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && (!(New_ugIsVerticesEmpty)) && New_ugVertexCount == 1 + Old_ugVertexCount && New_ugAdjacentDegree == 0 && (!(Old_ugContainsVertexX)) && (!(New_ugAdjacentDegree == New_ugVertexCount)) && (!(Old_ugIsVerticesEmpty)) && New_Ret && (!(New_ugAdjacentDegree == Old_ugVertexCount))) || (New_ugContainsVertexX && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && (!(New_ugIsVerticesEmpty)) && Old_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && (!(Old_ugIsVerticesEmpty)) && New_x == New_ugAdjacentDegree && (!(New_Ret))) || (New_ugContainsVertexX && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && (!(New_ugIsVerticesEmpty)) && Old_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && (!(Old_ugIsVerticesEmpty)) && (!(New_x == New_ugEdgeCount)) && (!(New_Ret))))

predicates: New_Ret

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_RemoveVertexContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (New_Ret && Old_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount - 1 && New_x == Old_x && (!(New_ugContainsVertexX)) && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && New_ugVertexCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount)

simplified postcondition: ((New_Ret && Old_ugContainsVertexX && New_ugVertexCount == -1 + Old_ugVertexCount && New_x == Old_x && (!(New_ugContainsVertexX)) && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == Old_ugVertexCount))))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((New_Ret && Old_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount - 1 && New_x == Old_x && (!(New_ugContainsVertexX)) && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && New_ugVertexCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount) && (((New_ugEdgeCount == 0) && New_ugIsEdgesEmpty) || (((!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty)))))

simplified postcondition: ((New_Ret && Old_ugContainsVertexX && New_ugVertexCount == -1 + Old_ugVertexCount && New_x == Old_x && (!(New_ugContainsVertexX)) && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == Old_ugVertexCount)) && New_ugEdgeCount == 0 && New_ugIsEdgesEmpty) || (New_Ret && Old_ugContainsVertexX && New_ugVertexCount == -1 + Old_ugVertexCount && New_x == Old_x && (!(New_ugContainsVertexX)) && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == Old_ugVertexCount)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty))))

predicates: New_ugIsEdgesEmpty

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((New_Ret && Old_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount - 1 && New_x == Old_x && (!(New_ugContainsVertexX)) && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && New_ugVertexCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount) && ((((New_ugEdgeCount == Old_ugVertexCount - 1) && (((New_ugVertexCount == Old_x &&  New_ugEdgeCount == Old_x &&  Old_x != Old_ugVertexCount &&  New_x != Old_ugVertexCount &&  Old_x == New_ugVertexCount &&  New_x == New_ugVertexCount &&  Old_x == New_ugEdgeCount) && New_x == New_ugEdgeCount) || ((Old_x != New_ugVertexCount &&  New_x != New_ugVertexCount &&  Old_x != New_ugEdgeCount &&  New_x != New_ugEdgeCount) && (!(New_x == New_ugEdgeCount))))) && New_ugEdgeCount == New_ugVertexCount) || ((((!(New_ugIsVerticesEmpty)) && New_ugEdgeCount != New_ugVertexCount) && (((New_ugEdgeCount == 0) && New_ugIsEdgesEmpty) || ((New_x == 0 &&  (!(Old_ugIsEdgesEmpty)) &&  Old_ugEdgeCount !=                          Old_ugVertexCount &&  Old_x != Old_ugVertexCount &&  New_x != Old_ugVertexCount &&  Old_x != New_ugVertexCount &&  New_x != New_ugVertexCount &&  Old_x != Old_ugEdgeCount &&  New_x != Old_ugEdgeCount &&  Old_x != New_ugEdgeCount &&  New_x != New_ugEdgeCount) && (!(New_ugIsEdgesEmpty))))) && (!(New_ugEdgeCount == New_ugVertexCount)))))

simplified postcondition: ((New_Ret && Old_ugContainsVertexX && New_ugVertexCount == -1 + Old_ugVertexCount && New_x == Old_x && (!(New_ugContainsVertexX)) && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && New_ugEdgeCount == New_ugVertexCount) || (New_Ret && Old_ugContainsVertexX && New_ugVertexCount == -1 + Old_ugVertexCount && New_x == Old_x && (!(New_ugContainsVertexX)) && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == Old_ugVertexCount)) && (!(New_ugIsVerticesEmpty)) && New_ugEdgeCount == 0 && New_ugIsEdgesEmpty) || (New_Ret && Old_ugContainsVertexX && New_ugVertexCount == -1 + Old_ugVertexCount && New_x == Old_x && (!(New_ugContainsVertexX)) && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == Old_ugVertexCount)) && (!(New_ugIsVerticesEmpty)) && New_x == 0 && (!(Old_ugIsEdgesEmpty)) && (!(Old_ugEdgeCount == Old_ugVertexCount)) && (!(New_x == Old_ugVertexCount)) && (!(New_x == New_ugVertexCount)) && (!(New_x == Old_ugEdgeCount)) && (!(New_x == New_ugEdgeCount)) && (!(New_ugIsEdgesEmpty))))

predicates: New_ugEdgeCount == New_ugVertexCount

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_ClearAdjacentEdgesContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount ==    Old_ugEdgeCount - Old_ugAdjacentDegree && New_ugAdjacentDegree == 0 && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_ugEdgeCount != Old_ugVertexCount && New_ugAdjacentDegree != Old_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && New_ugAdjacentDegree != New_ugVertexCount)

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount ==       Old_ugEdgeCount + -1*Old_ugAdjacentDegree && New_ugAdjacentDegree == 0 && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == New_ugVertexCount)) && (!(New_ugAdjacentDegree == New_ugVertexCount))))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount ==        Old_ugEdgeCount - Old_ugAdjacentDegree && New_ugAdjacentDegree == 0 && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_ugEdgeCount != Old_ugVertexCount && New_ugAdjacentDegree != Old_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && New_ugAdjacentDegree != New_ugVertexCount) && (((Old_x == Old_ugAdjacentDegree) && New_x == Old_ugAdjacentDegree) || ((Old_x != Old_ugEdgeCount && New_x != Old_ugEdgeCount && Old_x != Old_ugAdjacentDegree && New_x != Old_ugAdjacentDegree) && (!(New_x == Old_ugAdjacentDegree)))))

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount ==       Old_ugEdgeCount + -1*Old_ugAdjacentDegree && New_ugAdjacentDegree == 0 && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == New_ugVertexCount)) && (!(New_ugAdjacentDegree == New_ugVertexCount)) && New_x == Old_ugAdjacentDegree) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount ==       Old_ugEdgeCount + -1*Old_ugAdjacentDegree && New_ugAdjacentDegree == 0 && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == New_ugVertexCount)) && (!(New_ugAdjacentDegree == New_ugVertexCount)) && (!(New_x == Old_ugEdgeCount))))

predicates: New_x == Old_ugAdjacentDegree

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount ==        Old_ugEdgeCount - Old_ugAdjacentDegree && New_ugAdjacentDegree == 0 && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_ugEdgeCount != Old_ugVertexCount && New_ugAdjacentDegree != Old_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && New_ugAdjacentDegree != New_ugVertexCount) && ((((New_ugEdgeCount == Old_x && Old_x != Old_ugVertexCount && New_x != Old_ugVertexCount && Old_x != New_ugVertexCount && New_x != New_ugVertexCount && Old_x == New_ugEdgeCount) && (((New_ugIsEdgesEmpty &&  New_ugEdgeCount == 0 &&  New_x == 0 &&  Old_ugEdgeCount !=                          Old_ugVertexCount &&  Old_ugAdjacentDegree !=                          Old_ugVertexCount &&  Old_ugEdgeCount !=                          New_ugVertexCount &&  Old_ugAdjacentDegree !=                          New_ugVertexCount &&  New_ugEdgeCount == Old_ugEdgeCount &&  Old_ugAdjacentDegree ==                          Old_ugEdgeCount &&  New_ugAdjacentDegree ==                          Old_ugEdgeCount &&  Old_x == Old_ugEdgeCount &&  New_x == Old_ugEdgeCount &&  Old_ugAdjacentDegree ==                          New_ugEdgeCount &&  New_ugAdjacentDegree ==                          New_ugEdgeCount &&  New_ugAdjacentDegree ==                          Old_ugAdjacentDegree &&  Old_x == Old_ugAdjacentDegree &&  New_x == Old_ugAdjacentDegree &&  Old_x == New_ugAdjacentDegree &&  New_x == New_ugAdjacentDegree) && Old_ugIsEdgesEmpty) || ((New_ugEdgeCount != Old_ugEdgeCount &&  New_ugAdjacentDegree !=                          Old_ugEdgeCount &&  Old_x != Old_ugEdgeCount &&  New_x != Old_ugEdgeCount &&  New_ugAdjacentDegree !=                          Old_ugAdjacentDegree) && (!(Old_ugIsEdgesEmpty))))) && New_x == New_ugEdgeCount) || (((Old_x != Old_ugEdgeCount && New_x != Old_ugEdgeCount && Old_x != New_ugEdgeCount && New_x != New_ugEdgeCount) && (((New_ugEdgeCount ==                          Old_ugAdjacentDegree &&  Old_ugAdjacentDegree !=                          Old_ugVertexCount &&  Old_ugAdjacentDegree !=                          New_ugVertexCount &&  Old_x != Old_ugAdjacentDegree &&  New_x != Old_ugAdjacentDegree) && Old_ugAdjacentDegree ==                      New_ugEdgeCount) || (((!(Old_ugIsEdgesEmpty)) &&  Old_x != Old_ugVertexCount &&  New_x != Old_ugVertexCount &&  Old_x != New_ugVertexCount &&  New_x != New_ugVertexCount &&  New_ugAdjacentDegree !=                          Old_ugEdgeCount &&  Old_ugAdjacentDegree !=                          New_ugEdgeCount) && (!(Old_ugAdjacentDegree ==                          New_ugEdgeCount))))) && (!(New_x == New_ugEdgeCount)))))

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount ==       Old_ugEdgeCount + -1*Old_ugAdjacentDegree && New_ugAdjacentDegree == 0 && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugAdjacentDegree == New_ugVertexCount)) && New_ugIsEdgesEmpty && New_x == New_ugEdgeCount && New_x == Old_ugAdjacentDegree && New_x == New_ugAdjacentDegree && Old_ugIsEdgesEmpty) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount ==       Old_ugEdgeCount + -1*Old_ugAdjacentDegree && New_ugAdjacentDegree == 0 && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == New_ugVertexCount)) && (!(New_ugAdjacentDegree == New_ugVertexCount)) && (!(New_ugAdjacentDegree == Old_ugEdgeCount)) && New_x == New_ugEdgeCount && (!(New_ugAdjacentDegree == Old_ugAdjacentDegree)) && (!(Old_ugIsEdgesEmpty))) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount ==       Old_ugEdgeCount + -1*Old_ugAdjacentDegree && New_ugAdjacentDegree == 0 && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == New_ugVertexCount)) && (!(New_ugAdjacentDegree == New_ugVertexCount)) && (!(New_x == Old_ugEdgeCount)) && Old_ugAdjacentDegree == New_ugEdgeCount && (!(New_x == New_ugEdgeCount))) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount ==       Old_ugEdgeCount + -1*Old_ugAdjacentDegree && New_ugAdjacentDegree == 0 && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == New_ugVertexCount)) && (!(New_ugAdjacentDegree == New_ugVertexCount)) && (!(New_x == Old_ugEdgeCount)) && (!(Old_ugIsEdgesEmpty)) && (!(New_x == New_ugEdgeCount)) && (!(New_x == New_ugVertexCount)) && (!(New_ugAdjacentDegree == Old_ugEdgeCount))))

predicates: New_x == New_ugEdgeCount

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_ContainsEdgeContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource == Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==        Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))) && (((Old_ugContainsVertexTarget && New_ugContainsVertexTarget && New_target == Old_source && Old_target == Old_source && Old_target == New_source) && New_target == New_source) || ((Old_target != Old_source && New_target != Old_source && Old_target != New_source && New_target != New_source) && (!(New_target == New_source)))))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugContainsVertexTarget && New_ugContainsVertexTarget) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_target == New_source))))

predicates: New_target == New_source

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==        Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))) && ((((Old_ugIsEdgesEmpty && New_ugEdgeCount == 0 && New_ugAdjacentDegreeSource == 0 && (!(New_Ret)) && (!(Old_ContainsEdgeSrcTar)) && (!(New_ContainsEdgeSrcTar)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugAdjacentDegreeSource !=                   Old_ugVertexCount && New_ugAdjacentDegreeSource !=                   Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && Old_ugAdjacentDegreeSource !=                   New_ugVertexCount && New_ugAdjacentDegreeSource !=                   New_ugVertexCount && Old_ugAdjacentDegreeSource ==                   Old_ugEdgeCount && New_ugAdjacentDegreeSource ==                   Old_ugEdgeCount && Old_ugAdjacentDegreeSource ==                   New_ugEdgeCount && New_ugAdjacentDegreeSource ==                   New_ugEdgeCount) && (((Old_ugContainsVertexTarget &&  New_ugContainsVertexTarget &&  New_target == Old_source &&  Old_target == Old_source &&  Old_target == New_source) && New_target == New_source) || ((Old_target != Old_source &&  New_target != Old_source &&  Old_target != New_source &&  New_target != New_source) && (!(New_target == New_source))))) && New_ugIsEdgesEmpty) || ((((!(Old_ugIsEdgesEmpty))) && (((Old_ugContainsVertexTarget &&  New_ugContainsVertexTarget &&  New_target == Old_source &&  Old_target == Old_source &&  Old_target == New_source) && New_target == New_source) || ((Old_target != Old_source &&  New_target != Old_source &&  Old_target != New_source &&  New_target != New_source) && (!(New_target == New_source))))) && (!(New_ugIsEdgesEmpty)))))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugIsEdgesEmpty && New_ugAdjacentDegreeSource == 0 && (!(New_Ret)) && (!(Old_ContainsEdgeSrcTar)) && (!(New_ContainsEdgeSrcTar)) && (!(New_ugAdjacentDegreeSource == New_ugVertexCount)) && New_ugAdjacentDegreeSource == New_ugEdgeCount && Old_ugContainsVertexTarget && New_ugIsEdgesEmpty && New_ugContainsVertexTarget) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugIsEdgesEmpty && New_ugAdjacentDegreeSource == 0 && (!(New_Ret)) && (!(Old_ContainsEdgeSrcTar)) && (!(New_ContainsEdgeSrcTar)) && (!(New_ugAdjacentDegreeSource == New_ugVertexCount)) && New_ugAdjacentDegreeSource == New_ugEdgeCount && (!(New_target == New_source)) && New_ugIsEdgesEmpty) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && Old_ugContainsVertexTarget && (!(New_ugIsEdgesEmpty)) && New_ugContainsVertexTarget && Old_target == Old_source && Old_target == New_source && New_target == New_source) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty)) && (!(New_target == New_source))))

predicates: New_ugIsEdgesEmpty

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_ContainsEdgeIntContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource == Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==        Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))) && (((Old_ugIsEdgesEmpty && New_ugEdgeCount == 0 && New_ugAdjacentDegreeSource == 0 && (!(New_Ret)) && (!(Old_ContainsEdgeSrcTar)) && (!(New_ContainsEdgeSrcTar)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugAdjacentDegreeSource !=               Old_ugVertexCount && New_ugAdjacentDegreeSource !=               Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && Old_ugAdjacentDegreeSource !=               New_ugVertexCount && New_ugAdjacentDegreeSource !=               New_ugVertexCount && Old_ugAdjacentDegreeSource == Old_ugEdgeCount && New_ugAdjacentDegreeSource == Old_ugEdgeCount && Old_ugAdjacentDegreeSource == New_ugEdgeCount && New_ugAdjacentDegreeSource == New_ugEdgeCount) && New_ugIsEdgesEmpty) || (((!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty)))))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugIsEdgesEmpty && New_ugAdjacentDegreeSource == 0 && (!(New_Ret)) && (!(Old_ContainsEdgeSrcTar)) && (!(New_ContainsEdgeSrcTar)) && (!(New_ugAdjacentDegreeSource == New_ugVertexCount)) && New_ugAdjacentDegreeSource == New_ugEdgeCount && New_ugIsEdgesEmpty) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty))))

predicates: New_ugIsEdgesEmpty

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==        Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))) && ((((Old_ugIsEdgesEmpty && New_ugEdgeCount == 0 && New_ugAdjacentDegreeSource == 0 && (!(New_Ret)) && (!(Old_ContainsEdgeSrcTar)) && (!(New_ContainsEdgeSrcTar)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugAdjacentDegreeSource !=                   Old_ugVertexCount && New_ugAdjacentDegreeSource !=                   Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && Old_ugAdjacentDegreeSource !=                   New_ugVertexCount && New_ugAdjacentDegreeSource !=                   New_ugVertexCount && Old_ugAdjacentDegreeSource ==                   Old_ugEdgeCount && New_ugAdjacentDegreeSource ==                   Old_ugEdgeCount && Old_ugAdjacentDegreeSource ==                   New_ugEdgeCount && New_ugAdjacentDegreeSource ==                   New_ugEdgeCount) && (((New_source == 0 &&  Old_source != Old_ugVertexCount &&  New_source != Old_ugVertexCount &&  Old_source != New_ugVertexCount &&  New_source != New_ugVertexCount &&  Old_source == Old_ugEdgeCount &&  New_source == Old_ugEdgeCount &&  Old_source == New_ugEdgeCount &&  New_source == New_ugEdgeCount &&  Old_source == Old_ugAdjacentDegreeSource &&  New_source == Old_ugAdjacentDegreeSource &&  Old_source == New_ugAdjacentDegreeSource) && New_source ==                      New_ugAdjacentDegreeSource) || ((Old_source != Old_ugEdgeCount &&  New_source != Old_ugEdgeCount &&  Old_source != New_ugEdgeCount &&  New_source != New_ugEdgeCount &&  Old_source != Old_ugAdjacentDegreeSource &&  New_source != Old_ugAdjacentDegreeSource &&  Old_source != New_ugAdjacentDegreeSource &&  New_source != New_ugAdjacentDegreeSource) && (!(New_source == New_ugAdjacentDegreeSource))))) && New_ugIsEdgesEmpty) || ((((!(Old_ugIsEdgesEmpty))) && (((New_ugAdjacentDegreeSource == Old_ugEdgeCount &&  Old_ugAdjacentDegreeSource == Old_ugEdgeCount &&  Old_ugAdjacentDegreeSource == New_ugEdgeCount) && New_ugAdjacentDegreeSource ==                      New_ugEdgeCount) || ((Old_target != Old_ugVertexCount &&  New_target != Old_ugVertexCount &&  Old_target != New_ugVertexCount &&  New_target != New_ugVertexCount &&  Old_ugAdjacentDegreeSource != Old_ugEdgeCount &&  New_ugAdjacentDegreeSource != Old_ugEdgeCount &&  Old_target != Old_ugEdgeCount &&  New_target != Old_ugEdgeCount &&  Old_ugAdjacentDegreeSource != New_ugEdgeCount &&  New_ugAdjacentDegreeSource != New_ugEdgeCount &&  Old_target != New_ugEdgeCount &&  New_target != New_ugEdgeCount) && (!(New_ugAdjacentDegreeSource == New_ugEdgeCount))))) && (!(New_ugIsEdgesEmpty)))))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugIsEdgesEmpty && New_ugAdjacentDegreeSource == 0 && (!(New_Ret)) && (!(Old_ContainsEdgeSrcTar)) && (!(New_ContainsEdgeSrcTar)) && (!(New_ugAdjacentDegreeSource == New_ugVertexCount)) && New_ugAdjacentDegreeSource == New_ugEdgeCount && New_ugIsEdgesEmpty) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && New_ugAdjacentDegreeSource == New_ugEdgeCount && (!(New_ugIsEdgesEmpty))) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_target == New_ugVertexCount)) && (!(New_ugIsEdgesEmpty)) && (!(New_target == New_ugEdgeCount))))

predicates: New_ugIsEdgesEmpty

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_AdjacentEdgeContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && New_index == Old_index && New_Ret_Target == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty)) && Old_index != Old_ugVertexCount && New_index != Old_ugVertexCount && Old_index != New_ugVertexCount && New_index != New_ugVertexCount && Old_index != Old_ugEdgeCount && New_index != Old_ugEdgeCount && Old_index != New_ugEdgeCount && New_index != New_ugEdgeCount && Old_index != Old_ugAdjacentDegree && New_index != Old_ugAdjacentDegree && Old_index != New_ugAdjacentDegree && New_index != New_ugAdjacentDegree && New_Ret_Target == New_x)

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_index == Old_index && New_Ret_Target == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty)) && (!(New_index == New_ugVertexCount)) && (!(New_index == New_ugEdgeCount)) && (!(New_index == New_ugAdjacentDegree)) && New_Ret_Target == New_x))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && New_index == Old_index && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty)) && Old_index != Old_ugVertexCount && New_index != Old_ugVertexCount && Old_index != New_ugVertexCount && New_index != New_ugVertexCount && Old_index != Old_ugEdgeCount && New_index != Old_ugEdgeCount && Old_index != New_ugEdgeCount && New_index != New_ugEdgeCount && Old_index != Old_ugAdjacentDegree && New_index != Old_ugAdjacentDegree && Old_index != New_ugAdjacentDegree && New_index != New_ugAdjacentDegree) && (((New_Ret_Source == Old_x && New_Ret_Target == Old_x && New_Ret_Source == New_x && New_Ret_Target == New_x) && New_Ret_Target == New_Ret_Source) || ((New_index == 0 && Old_x != Old_ugVertexCount && New_x != Old_ugVertexCount && New_Ret_Source != Old_ugVertexCount && New_Ret_Target != Old_ugVertexCount && Old_x != New_ugVertexCount && New_x != New_ugVertexCount && New_Ret_Source != New_ugVertexCount && New_Ret_Target != New_ugVertexCount && Old_x != Old_ugAdjacentDegree && New_x != Old_ugAdjacentDegree && New_Ret_Source != Old_ugAdjacentDegree && New_Ret_Target != Old_ugAdjacentDegree && Old_x != New_ugAdjacentDegree && New_x != New_ugAdjacentDegree && New_Ret_Source != New_ugAdjacentDegree && New_Ret_Target != New_ugAdjacentDegree && New_Ret_Target != New_Ret_Source) && (!(New_Ret_Target == New_Ret_Source)))))

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && New_index == Old_index && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty)) && (!(New_index == New_ugVertexCount)) && (!(New_index == New_ugEdgeCount)) && (!(New_index == New_ugAdjacentDegree)) && New_Ret_Target == New_x && New_Ret_Target == New_Ret_Source) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && New_index == Old_index && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty)) && (!(New_index == New_ugVertexCount)) && (!(New_index == New_ugEdgeCount)) && (!(New_index == New_ugAdjacentDegree)) && New_index == 0 && (!(New_x == New_ugVertexCount)) && (!(New_Ret_Source == New_ugVertexCount)) && (!(New_Ret_Target == New_ugVertexCount)) && (!(New_x == New_ugAdjacentDegree)) && (!(New_Ret_Source == New_ugAdjacentDegree)) && (!(New_Ret_Target == New_ugAdjacentDegree)) && (!(New_Ret_Target == New_Ret_Source))))

predicates: New_Ret_Target == New_Ret_Source

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && New_index == Old_index && New_Ret_Target == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty)) && Old_index != Old_ugVertexCount && New_index != Old_ugVertexCount && Old_index != New_ugVertexCount && New_index != New_ugVertexCount && Old_index != Old_ugEdgeCount && New_index != Old_ugEdgeCount && Old_index != New_ugEdgeCount && New_index != New_ugEdgeCount && Old_index != Old_ugAdjacentDegree && New_index != Old_ugAdjacentDegree && Old_index != New_ugAdjacentDegree && New_index != New_ugAdjacentDegree && New_Ret_Target == New_x) && ((((New_ugAdjacentDegree == Old_ugVertexCount && New_Ret_Source == Old_x && Old_ugAdjacentDegree == Old_ugVertexCount && Old_ugAdjacentDegree == New_ugVertexCount && New_ugAdjacentDegree == New_ugVertexCount && New_Ret_Source == New_x) && (((New_x == 0 &&  New_index == 0 &&  New_Ret_Source == 0 &&  New_Ret_Target == 0 &&  Old_x != Old_ugVertexCount &&  New_x != Old_ugVertexCount &&  New_Ret_Source != Old_ugVertexCount &&  New_Ret_Target != Old_ugVertexCount &&  Old_x != New_ugVertexCount &&  New_x != New_ugVertexCount &&  New_Ret_Source != New_ugVertexCount &&  New_Ret_Target != New_ugVertexCount &&  Old_x != Old_ugEdgeCount &&  New_x != Old_ugEdgeCount &&  New_Ret_Source != Old_ugEdgeCount &&  New_Ret_Target != Old_ugEdgeCount &&  Old_x != New_ugEdgeCount &&  New_x != New_ugEdgeCount &&  New_Ret_Source != New_ugEdgeCount &&  New_Ret_Target != New_ugEdgeCount &&  Old_x != Old_ugAdjacentDegree &&  New_x != Old_ugAdjacentDegree &&  New_Ret_Source != Old_ugAdjacentDegree &&  New_Ret_Target != Old_ugAdjacentDegree &&  Old_x != New_ugAdjacentDegree &&  New_x != New_ugAdjacentDegree &&  New_Ret_Source != New_ugAdjacentDegree &&  New_Ret_Target != New_ugAdjacentDegree &&  Old_index == Old_x &&  New_index == Old_x &&  Old_index == New_x &&  New_index == New_x &&  New_Ret_Source == Old_index &&  New_Ret_Target == Old_index &&  New_Ret_Source == New_index) && New_Ret_Target == New_index) || ((Old_index != Old_x &&  New_index != Old_x &&  Old_index != New_x &&  New_index != New_x &&  New_Ret_Source != Old_index &&  New_Ret_Target != Old_index &&  New_Ret_Source != New_index &&  New_Ret_Target != New_index) && (!(New_Ret_Target == New_index))))) && New_Ret_Target == New_Ret_Source) || (((New_index == 0 && Old_x != Old_ugVertexCount && New_x != Old_ugVertexCount && New_Ret_Target != Old_ugVertexCount && Old_x != New_ugVertexCount && New_x != New_ugVertexCount && New_Ret_Target != New_ugVertexCount && Old_ugAdjacentDegree != Old_ugEdgeCount && New_ugAdjacentDegree != Old_ugEdgeCount && Old_x != Old_ugEdgeCount && New_x != Old_ugEdgeCount && New_Ret_Target != Old_ugEdgeCount && Old_ugAdjacentDegree != New_ugEdgeCount && New_ugAdjacentDegree != New_ugEdgeCount && Old_x != New_ugEdgeCount && New_x != New_ugEdgeCount && New_Ret_Target != New_ugEdgeCount && Old_x != Old_ugAdjacentDegree && New_x != Old_ugAdjacentDegree && New_Ret_Target != Old_ugAdjacentDegree && Old_x != New_ugAdjacentDegree && New_x != New_ugAdjacentDegree && New_Ret_Target != New_ugAdjacentDegree && New_Ret_Source != Old_x && New_Ret_Source != New_x && New_Ret_Target != New_Ret_Source) && (((New_ugAdjacentDegree == Old_ugVertexCount &&  Old_ugEdgeCount != Old_ugVertexCount &&  New_ugEdgeCount != Old_ugVertexCount &&  Old_ugAdjacentDegree == Old_ugVertexCount &&  Old_ugEdgeCount != New_ugVertexCount &&  New_ugEdgeCount != New_ugVertexCount &&  Old_ugAdjacentDegree == New_ugVertexCount &&  New_Ret_Source != Old_ugEdgeCount &&  New_Ret_Source != New_ugEdgeCount) && New_ugAdjacentDegree ==                      New_ugVertexCount) || ((New_x == 0 &&  New_Ret_Target == 0 &&  Old_ugAdjacentDegree != Old_ugVertexCount &&  New_ugAdjacentDegree != Old_ugVertexCount &&  New_Ret_Source != Old_ugVertexCount &&  Old_ugAdjacentDegree != New_ugVertexCount &&  New_ugAdjacentDegree != New_ugVertexCount &&  New_Ret_Source != New_ugVertexCount &&  New_Ret_Source != Old_ugAdjacentDegree &&  New_Ret_Source != New_ugAdjacentDegree &&  Old_index == Old_x &&  New_index == Old_x &&  Old_index == New_x &&  New_index == New_x &&  New_Ret_Source != Old_index &&  New_Ret_Target == Old_index &&  New_Ret_Source != New_index &&  New_Ret_Target == New_index) && (!(New_ugAdjacentDegree == New_ugVertexCount))))) && (!(New_Ret_Target == New_Ret_Source)))))

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_index == Old_index && New_Ret_Target == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty)) && (!(New_index == New_ugEdgeCount)) && (!(New_index == New_ugAdjacentDegree)) && New_Ret_Target == New_x && New_ugAdjacentDegree == New_ugVertexCount && New_Ret_Target == 0 && New_Ret_Target == New_Ret_Source) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_index == Old_index && New_Ret_Target == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty)) && (!(New_index == New_ugEdgeCount)) && (!(New_index == New_ugAdjacentDegree)) && New_Ret_Target == New_x && New_ugAdjacentDegree == New_ugVertexCount && (!(New_Ret_Target == New_index)) && New_Ret_Target == New_Ret_Source) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugEdgeCount == Old_ugEdgeCount && New_index == Old_index && New_Ret_Target == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty)) && (!(New_index == New_ugEdgeCount)) && (!(New_index == New_ugAdjacentDegree)) && New_Ret_Target == New_x && New_index == 0 && (!(New_ugAdjacentDegree == New_ugEdgeCount)) && (!(New_Ret_Target == New_ugEdgeCount)) && (!(New_Ret_Target == New_ugAdjacentDegree)) && (!(New_Ret_Target == New_Ret_Source)) && Old_ugAdjacentDegree == Old_ugVertexCount && Old_ugAdjacentDegree == New_ugVertexCount && (!(New_Ret_Source == New_ugEdgeCount)) && New_ugAdjacentDegree == New_ugVertexCount) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty)) && (!(New_Ret_Target == New_ugVertexCount)) && (!(New_ugAdjacentDegree == New_ugEdgeCount)) && (!(New_Ret_Target == New_ugEdgeCount)) && (!(New_Ret_Target == New_ugAdjacentDegree)) && (!(New_Ret_Target == New_Ret_Source)) && New_Ret_Target == 0 && (!(New_Ret_Source == New_ugVertexCount)) && (!(New_Ret_Source == New_ugAdjacentDegree)) && New_index == Old_x && New_index == New_x && New_Ret_Target == Old_index && New_Ret_Target == New_index && (!(New_ugAdjacentDegree == New_ugVertexCount))))

predicates: New_Ret_Target == New_Ret_Source

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_IsVerticesEmptyContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount)

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount) && (((New_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == New_ugVertexCount) && New_ugEdgeCount == New_ugVertexCount) || (((!(New_Ret)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount) && (!(New_ugEdgeCount == New_ugVertexCount)))))

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugEdgeCount == New_ugVertexCount) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(New_Ret)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))))

predicates: New_ugEdgeCount == New_ugVertexCount

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount) && ((((New_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == New_ugVertexCount) && (((New_Ret &&  Old_ugIsVerticesEmpty &&  New_ugIsVerticesEmpty &&  Old_ugIsEdgesEmpty &&  New_ugVertexCount == 0 &&  New_ugEdgeCount == 0) && New_ugIsEdgesEmpty) || (((!(New_Ret)) &&  (!(Old_ugIsVerticesEmpty)) &&  (!(New_ugIsVerticesEmpty)) &&  (!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty))))) && New_ugEdgeCount == New_ugVertexCount) || ((((!(New_Ret)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount) && (((Old_ugIsEdgesEmpty &&  New_ugEdgeCount == 0) && New_ugIsEdgesEmpty) || (((!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty))))) && (!(New_ugEdgeCount == New_ugVertexCount)))))

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_Ret && New_ugEdgeCount == New_ugVertexCount && Old_ugIsVerticesEmpty && New_ugIsVerticesEmpty && Old_ugIsEdgesEmpty && New_ugEdgeCount == 0 && New_ugIsEdgesEmpty) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(New_Ret)) && New_ugEdgeCount == New_ugVertexCount && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty))) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(New_Ret)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugIsEdgesEmpty && (!(New_ugEdgeCount == New_ugVertexCount)) && New_ugEdgeCount == 0 && New_ugIsEdgesEmpty) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(New_Ret)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugEdgeCount == New_ugVertexCount)) && (!(New_ugIsEdgesEmpty))))

predicates: New_ugEdgeCount == New_ugVertexCount

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_VertexCountContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugVertexCount && New_Ret == New_ugVertexCount)

simplified postcondition: ((New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugVertexCount && New_Ret == New_ugVertexCount))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugVertexCount && New_Ret == New_ugVertexCount) && (((New_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == New_ugVertexCount && New_ugEdgeCount == New_ugVertexCount && New_Ret == Old_ugEdgeCount) && New_Ret == New_ugEdgeCount) || (((!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && New_Ret != Old_ugEdgeCount && New_Ret != New_ugEdgeCount) && (!(New_Ret == New_ugEdgeCount)))))

simplified postcondition: ((New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugVertexCount && New_Ret == New_ugVertexCount && New_Ret == New_ugEdgeCount) || (New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugVertexCount && New_Ret == New_ugVertexCount && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))))

predicates: New_Ret == New_ugEdgeCount

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugVertexCount && New_Ret == New_ugVertexCount) && ((((New_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == New_ugVertexCount && New_ugEdgeCount == New_ugVertexCount && New_Ret == Old_ugEdgeCount) && (((Old_ugIsVerticesEmpty &&  New_ugIsVerticesEmpty &&  Old_ugIsEdgesEmpty &&  New_ugVertexCount == 0 &&  New_ugEdgeCount == 0 &&  New_Ret == 0) && New_ugIsEdgesEmpty) || (((!(Old_ugIsVerticesEmpty)) &&  (!(New_ugIsVerticesEmpty)) &&  (!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty))))) && New_Ret == New_ugEdgeCount) || ((((!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && New_Ret != Old_ugEdgeCount && New_Ret != New_ugEdgeCount) && (((Old_ugIsEdgesEmpty &&  New_ugEdgeCount == 0) && New_ugIsEdgesEmpty) || (((!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty))))) && (!(New_Ret == New_ugEdgeCount)))))

simplified postcondition: ((New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugVertexCount && New_Ret == New_ugVertexCount && Old_ugIsVerticesEmpty && New_Ret == New_ugEdgeCount && New_ugIsVerticesEmpty && Old_ugIsEdgesEmpty && New_Ret == 0 && New_ugIsEdgesEmpty) || (New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugVertexCount && New_Ret == New_ugVertexCount && (!(Old_ugIsVerticesEmpty)) && New_Ret == New_ugEdgeCount && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty))) || (New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugVertexCount && New_Ret == New_ugVertexCount && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugIsEdgesEmpty && (!(New_Ret == New_ugEdgeCount)) && New_ugEdgeCount == 0 && New_ugIsEdgesEmpty) || (New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugVertexCount && New_Ret == New_ugVertexCount && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_Ret == New_ugEdgeCount)) && (!(New_ugIsEdgesEmpty))))

predicates: New_Ret == New_ugEdgeCount

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_ContainsVertexContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x)

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x) && (((New_x == Old_ugEdgeCount && Old_ugAdjacentDegree != Old_ugVertexCount && New_ugAdjacentDegree != Old_ugVertexCount && Old_ugAdjacentDegree != New_ugVertexCount && New_ugAdjacentDegree != New_ugVertexCount && Old_x == Old_ugEdgeCount && Old_x == New_ugEdgeCount) && New_x == New_ugEdgeCount) || ((Old_x != Old_ugEdgeCount && New_x != Old_ugEdgeCount && Old_x != New_ugEdgeCount && New_x != New_ugEdgeCount) && (!(New_x == New_ugEdgeCount)))))

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(New_ugAdjacentDegree == New_ugVertexCount))) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(New_x == New_ugEdgeCount))))

predicates: New_x == New_ugEdgeCount

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x) && ((((New_Ret && Old_ugContainsVertexX && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))) && (((Old_ugIsEdgesEmpty &&  New_ugEdgeCount == 0 &&  New_ugAdjacentDegree == 0 &&  Old_ugEdgeCount != Old_ugVertexCount &&  New_ugEdgeCount != Old_ugVertexCount &&  Old_ugAdjacentDegree != Old_ugVertexCount &&  New_ugAdjacentDegree != Old_ugVertexCount &&  Old_ugEdgeCount != New_ugVertexCount &&  New_ugEdgeCount != New_ugVertexCount &&  Old_ugAdjacentDegree != New_ugVertexCount &&  New_ugAdjacentDegree != New_ugVertexCount &&  Old_ugAdjacentDegree == Old_ugEdgeCount &&  New_ugAdjacentDegree == Old_ugEdgeCount &&  Old_ugAdjacentDegree == New_ugEdgeCount &&  New_ugAdjacentDegree == New_ugEdgeCount) && New_ugIsEdgesEmpty) || (((!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty))))) && New_ugContainsVertexX) || ((((!(New_Ret)) && (!(Old_ugContainsVertexX)) && Old_ugAdjacentDegree != Old_ugVertexCount && New_ugAdjacentDegree != Old_ugVertexCount && Old_ugAdjacentDegree != New_ugVertexCount && New_ugAdjacentDegree != New_ugVertexCount && Old_ugAdjacentDegree != Old_ugEdgeCount && New_ugAdjacentDegree != Old_ugEdgeCount && Old_ugAdjacentDegree != New_ugEdgeCount && New_ugAdjacentDegree != New_ugEdgeCount) && (((Old_ugIsVerticesEmpty &&  Old_ugIsEdgesEmpty &&  New_ugIsEdgesEmpty &&  New_ugVertexCount == 0 &&  New_ugEdgeCount == 0 &&  Old_ugEdgeCount == Old_ugVertexCount &&  New_ugEdgeCount == Old_ugVertexCount &&  Old_ugEdgeCount == New_ugVertexCount &&  New_ugEdgeCount == New_ugVertexCount) && New_ugIsVerticesEmpty) || (((!(Old_ugIsVerticesEmpty))) && (!(New_ugIsVerticesEmpty))))) && (!(New_ugContainsVertexX)))))

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && New_Ret && Old_ugContainsVertexX && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugIsEdgesEmpty && New_ugContainsVertexX && New_ugAdjacentDegree == 0 && (!(New_ugAdjacentDegree == New_ugVertexCount)) && New_ugAdjacentDegree == New_ugEdgeCount && New_ugIsEdgesEmpty) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && New_Ret && Old_ugContainsVertexX && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && New_ugContainsVertexX && (!(New_ugIsEdgesEmpty))) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(New_Ret)) && (!(Old_ugContainsVertexX)) && (!(New_ugAdjacentDegree == New_ugEdgeCount)) && Old_ugIsVerticesEmpty && (!(New_ugContainsVertexX)) && Old_ugIsEdgesEmpty && New_ugIsEdgesEmpty && New_ugEdgeCount == 0 && New_ugEdgeCount == New_ugVertexCount && New_ugIsVerticesEmpty) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(New_Ret)) && (!(Old_ugContainsVertexX)) && (!(New_ugAdjacentDegree == New_ugVertexCount)) && (!(New_ugAdjacentDegree == New_ugEdgeCount)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugContainsVertexX)) && (!(New_ugIsVerticesEmpty))))

predicates: New_ugContainsVertexX

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_AddEdgeContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (Old_ugContainsVertexSource && New_ugContainsVertexSource && Old_ugContainsVertexTarget && New_ugContainsVertexTarget && New_ContainsEdgeSrcTar && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugIsEdgesEmpty)))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && Old_ugContainsVertexTarget && New_ugContainsVertexTarget && New_ContainsEdgeSrcTar && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugIsEdgesEmpty))))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && Old_ugContainsVertexTarget && New_ugContainsVertexTarget && New_ContainsEdgeSrcTar && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugIsEdgesEmpty))) && (((New_Ret && New_ugEdgeCount == 1 && New_ugAdjacentDegreeSource == 1 && New_ugAdjacentDegreeTarget == 1 && (!(Old_ContainsEdgeSrcTar)) && Old_ugEdgeCount != Old_ugVertexCount && Old_ugAdjacentDegreeSource !=               Old_ugVertexCount && Old_ugAdjacentDegreeTarget !=               Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && Old_ugAdjacentDegreeSource !=               New_ugVertexCount && Old_ugAdjacentDegreeTarget !=               New_ugVertexCount && New_ugEdgeCount != Old_ugEdgeCount && Old_ugAdjacentDegreeSource == Old_ugEdgeCount && New_ugAdjacentDegreeSource != Old_ugEdgeCount && Old_ugAdjacentDegreeTarget == Old_ugEdgeCount && New_ugAdjacentDegreeTarget != Old_ugEdgeCount && Old_ugAdjacentDegreeSource != New_ugEdgeCount && New_ugAdjacentDegreeSource == New_ugEdgeCount && Old_ugAdjacentDegreeTarget != New_ugEdgeCount && New_ugAdjacentDegreeTarget == New_ugEdgeCount && New_ugAdjacentDegreeSource !=               Old_ugAdjacentDegreeSource && Old_ugAdjacentDegreeTarget ==               Old_ugAdjacentDegreeSource && New_ugAdjacentDegreeTarget !=               Old_ugAdjacentDegreeSource && Old_ugAdjacentDegreeTarget !=               New_ugAdjacentDegreeSource && New_ugAdjacentDegreeTarget ==               New_ugAdjacentDegreeSource && New_ugAdjacentDegreeTarget !=               Old_ugAdjacentDegreeTarget) && Old_ugIsEdgesEmpty) || (true && (!(Old_ugIsEdgesEmpty)))))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && Old_ugContainsVertexTarget && New_ugContainsVertexTarget && New_ContainsEdgeSrcTar && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugIsEdgesEmpty)) && New_Ret && New_ugAdjacentDegreeTarget == 1 && (!(Old_ContainsEdgeSrcTar)) && (!(Old_ugAdjacentDegreeTarget == New_ugVertexCount)) && Old_ugAdjacentDegreeTarget == Old_ugEdgeCount && New_ugAdjacentDegreeTarget == New_ugEdgeCount && Old_ugAdjacentDegreeTarget ==  Old_ugAdjacentDegreeSource && New_ugAdjacentDegreeTarget ==       New_ugAdjacentDegreeSource && (!(New_ugAdjacentDegreeTarget ==           Old_ugAdjacentDegreeTarget))) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && Old_ugContainsVertexTarget && New_ugContainsVertexTarget && New_ContainsEdgeSrcTar && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugIsEdgesEmpty)) && (!(Old_ugIsEdgesEmpty))))

predicates: Old_ugIsEdgesEmpty

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && Old_ugContainsVertexTarget && New_ugContainsVertexTarget && New_ContainsEdgeSrcTar && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugIsEdgesEmpty))) && ((((New_ugEdgeCount ==                   Old_ugEdgeCount +                   1 - Old_ugAdjacentDegreeSource && New_ugAdjacentDegreeSource == 1 && New_ugAdjacentDegreeTarget == 1 && New_target == Old_ugAdjacentDegreeSource && Old_ugAdjacentDegreeTarget ==                   Old_ugAdjacentDegreeSource && Old_target == Old_ugAdjacentDegreeSource && New_ugAdjacentDegreeTarget ==                   New_ugAdjacentDegreeSource && Old_target == Old_ugAdjacentDegreeTarget) && (((New_ugVertexCount == 1 &&  New_ugEdgeCount == 1 &&  New_source == Old_ugEdgeCount &&  New_target == Old_ugEdgeCount &&  New_ugEdgeCount == Old_ugVertexCount &&  New_ugAdjacentDegreeSource == Old_ugVertexCount &&  New_ugAdjacentDegreeTarget == Old_ugVertexCount &&  New_ugEdgeCount == New_ugVertexCount &&  New_ugAdjacentDegreeSource == New_ugVertexCount &&  Old_ugAdjacentDegreeSource == Old_ugEdgeCount &&  Old_ugAdjacentDegreeTarget == Old_ugEdgeCount &&  Old_source == Old_ugEdgeCount &&  Old_target == Old_ugEdgeCount &&  New_ugAdjacentDegreeSource == New_ugEdgeCount &&  New_ugAdjacentDegreeTarget == New_ugEdgeCount &&  Old_source == Old_ugAdjacentDegreeSource &&  New_source == Old_ugAdjacentDegreeSource &&  Old_source == Old_ugAdjacentDegreeTarget &&  New_source == Old_ugAdjacentDegreeTarget &&  Old_target == Old_source &&  New_target == Old_source &&  Old_target == New_source &&  New_target == New_source) && New_ugAdjacentDegreeTarget ==                      New_ugVertexCount) || ((New_Ret &&  New_ugEdgeCount == Old_ugEdgeCount + 1 &&  New_target == 0 &&  (!(Old_ContainsEdgeSrcTar)) &&  Old_ugEdgeCount != Old_ugVertexCount &&  Old_ugAdjacentDegreeSource != Old_ugVertexCount &&  New_ugAdjacentDegreeSource != Old_ugVertexCount &&  Old_ugAdjacentDegreeTarget != Old_ugVertexCount &&  New_ugAdjacentDegreeTarget != Old_ugVertexCount &&  Old_source != Old_ugVertexCount &&  New_source != Old_ugVertexCount &&  Old_target != Old_ugVertexCount &&  New_target != Old_ugVertexCount &&  Old_ugEdgeCount != New_ugVertexCount &&  Old_ugAdjacentDegreeSource != New_ugVertexCount &&  New_ugAdjacentDegreeSource != New_ugVertexCount &&  Old_ugAdjacentDegreeTarget != New_ugVertexCount &&  New_ugAdjacentDegreeTarget != New_ugVertexCount &&  Old_source != New_ugVertexCount &&  New_source != New_ugVertexCount &&  Old_target != New_ugVertexCount &&  New_target != New_ugVertexCount &&  New_ugEdgeCount != Old_ugEdgeCount &&  Old_ugAdjacentDegreeSource != New_ugEdgeCount &&  Old_ugAdjacentDegreeTarget != New_ugEdgeCount &&  Old_source != New_ugEdgeCount &&  New_source != New_ugEdgeCount &&  Old_target != New_ugEdgeCount &&  New_target != New_ugEdgeCount &&  New_ugAdjacentDegreeSource != Old_ugAdjacentDegreeSource &&  New_ugAdjacentDegreeTarget != Old_ugAdjacentDegreeSource &&  Old_ugAdjacentDegreeTarget != New_ugAdjacentDegreeSource &&  Old_source != New_ugAdjacentDegreeSource &&  New_source != New_ugAdjacentDegreeSource &&  Old_target != New_ugAdjacentDegreeSource &&  New_target != New_ugAdjacentDegreeSource &&  New_ugAdjacentDegreeTarget != Old_ugAdjacentDegreeTarget &&  Old_source != New_ugAdjacentDegreeTarget &&  New_source != New_ugAdjacentDegreeTarget &&  Old_target != New_ugAdjacentDegreeTarget &&  New_target != New_ugAdjacentDegreeTarget) && (!(New_ugAdjacentDegreeTarget == New_ugVertexCount))))) && New_target == Old_ugAdjacentDegreeTarget) || (((Old_source != Old_ugAdjacentDegreeSource && New_source != Old_ugAdjacentDegreeSource && Old_target != Old_ugAdjacentDegreeSource && New_target != Old_ugAdjacentDegreeSource && Old_source != Old_ugAdjacentDegreeTarget && New_source != Old_ugAdjacentDegreeTarget && Old_target != Old_ugAdjacentDegreeTarget && New_target != Old_ugAdjacentDegreeTarget) && (((New_ugEdgeCount == Old_ugEdgeCount &&  New_ugAdjacentDegreeSource == Old_ugAdjacentDegreeSource &&  New_ugAdjacentDegreeTarget == Old_ugAdjacentDegreeTarget &&  (!(New_Ret)) &&  (!(Old_ugIsEdgesEmpty)) &&  Old_source != Old_ugVertexCount &&  New_source != Old_ugVertexCount &&  Old_target != Old_ugVertexCount &&  New_target != Old_ugVertexCount &&  Old_source != New_ugVertexCount &&  New_source != New_ugVertexCount &&  Old_target != New_ugVertexCount &&  New_target != New_ugVertexCount &&  Old_source != Old_ugEdgeCount &&  New_source != Old_ugEdgeCount &&  Old_target != Old_ugEdgeCount &&  New_target != Old_ugEdgeCount &&  Old_source != New_ugEdgeCount &&  New_source != New_ugEdgeCount &&  Old_target != New_ugEdgeCount &&  New_target != New_ugEdgeCount &&  Old_source != New_ugAdjacentDegreeSource &&  New_source != New_ugAdjacentDegreeSource &&  Old_target != New_ugAdjacentDegreeSource &&  New_target != New_ugAdjacentDegreeSource &&  Old_source != New_ugAdjacentDegreeTarget &&  New_source != New_ugAdjacentDegreeTarget &&  Old_target != New_ugAdjacentDegreeTarget &&  New_target != New_ugAdjacentDegreeTarget) && Old_ContainsEdgeSrcTar) || ((New_Ret &&  New_ugEdgeCount == Old_ugEdgeCount + 1 &&  New_ugAdjacentDegreeSource == Old_ugAdjacentDegreeSource + 1 &&  New_ugAdjacentDegreeTarget == Old_ugAdjacentDegreeTarget + 1 &&  Old_ugAdjacentDegreeSource != Old_ugVertexCount &&  Old_ugAdjacentDegreeTarget != Old_ugVertexCount &&  Old_ugAdjacentDegreeSource != New_ugVertexCount &&  Old_ugAdjacentDegreeTarget != New_ugVertexCount &&  New_ugEdgeCount != Old_ugEdgeCount &&  Old_ugAdjacentDegreeSource != New_ugEdgeCount &&  Old_ugAdjacentDegreeTarget != New_ugEdgeCount &&  New_ugAdjacentDegreeSource != Old_ugAdjacentDegreeSource &&  Old_ugAdjacentDegreeTarget != New_ugAdjacentDegreeSource &&  New_ugAdjacentDegreeTarget != Old_ugAdjacentDegreeTarget) && (!(Old_ContainsEdgeSrcTar))))) && (!(New_target == Old_ugAdjacentDegreeTarget)))))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && Old_ugContainsVertexTarget && New_ugContainsVertexTarget && New_ContainsEdgeSrcTar && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugIsEdgesEmpty)) && New_ugAdjacentDegreeTarget == 1 && Old_target == Old_ugAdjacentDegreeSource && New_ugAdjacentDegreeTarget ==       New_ugAdjacentDegreeSource && Old_target == Old_ugEdgeCount && New_target == Old_ugAdjacentDegreeTarget && New_ugAdjacentDegreeTarget == New_ugEdgeCount && New_target == New_source && New_ugAdjacentDegreeTarget == New_ugVertexCount) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && Old_ugContainsVertexTarget && New_ugContainsVertexTarget && New_ContainsEdgeSrcTar && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugIsEdgesEmpty)) && New_ugAdjacentDegreeTarget == 1 && Old_target == Old_ugAdjacentDegreeSource && New_ugAdjacentDegreeTarget ==       New_ugAdjacentDegreeSource && New_Ret && New_target == Old_ugAdjacentDegreeTarget && New_ugEdgeCount == 1 + Old_ugEdgeCount && New_target == 0 && (!(Old_ContainsEdgeSrcTar)) && (!(Old_ugEdgeCount == New_ugVertexCount)) && (!(New_source == New_ugVertexCount)) && (!(New_target == New_ugVertexCount)) && (!(New_source == New_ugEdgeCount)) && (!(New_target == New_ugEdgeCount)) && (!(New_source == New_ugAdjacentDegreeTarget)) && (!(New_ugAdjacentDegreeTarget == New_ugVertexCount))) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && Old_ugContainsVertexTarget && New_ugContainsVertexTarget && New_ContainsEdgeSrcTar && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugIsEdgesEmpty)) && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && New_ugAdjacentDegreeTarget ==       Old_ugAdjacentDegreeTarget && (!(New_Ret)) && (!(Old_ugIsEdgesEmpty)) && (!(New_source == New_ugVertexCount)) && (!(New_target == New_ugVertexCount)) && (!(New_source == New_ugEdgeCount)) && (!(New_target == New_ugEdgeCount)) && (!(New_source == New_ugAdjacentDegreeSource)) && (!(New_target == New_ugAdjacentDegreeSource)) && (!(New_source == New_ugAdjacentDegreeTarget)) && (!(New_target == New_ugAdjacentDegreeTarget)) && Old_ContainsEdgeSrcTar) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && Old_ugContainsVertexTarget && New_ugContainsVertexTarget && New_ContainsEdgeSrcTar && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugIsEdgesEmpty)) && (!(New_source == Old_ugAdjacentDegreeSource)) && (!(New_target == Old_ugAdjacentDegreeSource)) && (!(New_source == Old_ugAdjacentDegreeTarget)) && New_Ret && (!(New_target == Old_ugAdjacentDegreeTarget)) && New_ugEdgeCount == 1 + Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       1 + Old_ugAdjacentDegreeSource && New_ugAdjacentDegreeTarget ==       1 + Old_ugAdjacentDegreeTarget && (!(Old_ugAdjacentDegreeSource == New_ugVertexCount)) && (!(Old_ugAdjacentDegreeTarget == New_ugVertexCount)) && (!(Old_ugAdjacentDegreeSource == New_ugEdgeCount)) && (!(Old_ugAdjacentDegreeTarget == New_ugEdgeCount)) && (!(Old_ugAdjacentDegreeTarget ==           New_ugAdjacentDegreeSource)) && (!(Old_ContainsEdgeSrcTar))))

predicates: New_target == Old_ugAdjacentDegreeTarget

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_RemoveEdgeContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))) && (((New_ugEdgeCount == 0 && New_ugAdjacentDegreeSource == 0 && New_ugEdgeCount != Old_ugVertexCount && New_ugAdjacentDegreeSource !=               Old_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && New_ugAdjacentDegreeSource !=               New_ugVertexCount && Old_ugAdjacentDegreeSource == Old_ugEdgeCount && New_ugAdjacentDegreeSource == New_ugEdgeCount) && New_ugIsEdgesEmpty) || (((!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty)))))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_ugAdjacentDegreeSource == 0 && (!(New_ugAdjacentDegreeSource == New_ugVertexCount)) && Old_ugAdjacentDegreeSource == Old_ugEdgeCount && New_ugAdjacentDegreeSource == New_ugEdgeCount && New_ugIsEdgesEmpty) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty))))

predicates: New_ugIsEdgesEmpty

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))) && ((((New_ugIsEdgesEmpty && New_ugEdgeCount == 0 && New_ugAdjacentDegreeSource == 0 && (!(New_Ret)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugAdjacentDegreeSource !=                   Old_ugVertexCount && New_ugAdjacentDegreeSource !=                   Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && Old_ugAdjacentDegreeSource !=                   New_ugVertexCount && New_ugAdjacentDegreeSource !=                   New_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && Old_ugAdjacentDegreeSource ==                   Old_ugEdgeCount && New_ugAdjacentDegreeSource ==                   Old_ugEdgeCount && Old_ugAdjacentDegreeSource ==                   New_ugEdgeCount && New_ugAdjacentDegreeSource ==                   New_ugEdgeCount && New_ugAdjacentDegreeSource ==                   Old_ugAdjacentDegreeSource) && (((Old_ugContainsVertexTarget) && New_ugContainsVertexTarget) || (((!(Old_ugContainsVertexTarget)) &&  Old_target != Old_source &&  New_target != Old_source &&  Old_target != New_source &&  New_target != New_source) && (!(New_ugContainsVertexTarget))))) && Old_ugIsEdgesEmpty) || ((true && (((Old_ugContainsVertexTarget &&  New_ugContainsVertexTarget &&  New_ugEdgeCount == Old_ugEdgeCount - 1 &&  New_ugAdjacentDegreeSource == Old_ugAdjacentDegreeSource - 1 &&  New_ugAdjacentDegreeSource != Old_ugVertexCount &&  New_ugAdjacentDegreeSource != New_ugVertexCount &&  New_ugEdgeCount != Old_ugEdgeCount &&  New_ugAdjacentDegreeSource != Old_ugEdgeCount &&  New_ugAdjacentDegreeSource != Old_ugAdjacentDegreeSource) && New_Ret) || ((New_ugEdgeCount == Old_ugEdgeCount &&  New_ugAdjacentDegreeSource == Old_ugAdjacentDegreeSource &&  (!(New_ugIsEdgesEmpty))) && (!(New_Ret))))) && (!(Old_ugIsEdgesEmpty)))))

simplified postcondition: ((Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_ugIsEdgesEmpty && New_ugAdjacentDegreeSource == 0 && (!(New_Ret)) && (!(New_ugAdjacentDegreeSource == New_ugVertexCount)) && New_ugAdjacentDegreeSource == Old_ugEdgeCount && New_ugAdjacentDegreeSource == New_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && Old_ugContainsVertexTarget && Old_ugIsEdgesEmpty && New_ugContainsVertexTarget) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_ugIsEdgesEmpty && New_ugAdjacentDegreeSource == 0 && (!(New_Ret)) && (!(New_ugAdjacentDegreeSource == New_ugVertexCount)) && New_ugAdjacentDegreeSource == Old_ugEdgeCount && New_ugAdjacentDegreeSource == New_ugEdgeCount && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && (!(Old_ugContainsVertexTarget)) && Old_ugIsEdgesEmpty && (!(New_target == New_source)) && (!(New_ugContainsVertexTarget))) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugContainsVertexTarget && (!(Old_ugIsEdgesEmpty)) && New_ugContainsVertexTarget && New_ugEdgeCount == -1 + Old_ugEdgeCount && New_ugAdjacentDegreeSource ==       -1 + Old_ugAdjacentDegreeSource && (!(New_ugAdjacentDegreeSource == New_ugVertexCount)) && (!(New_ugAdjacentDegreeSource == Old_ugEdgeCount)) && New_Ret) || (Old_ugContainsVertexSource && New_ugContainsVertexSource && New_ugVertexCount == Old_ugVertexCount && New_source == Old_source && New_target == Old_target && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_ugEdgeCount == Old_ugEdgeCount && (!(Old_ugIsEdgesEmpty)) && New_ugAdjacentDegreeSource ==       Old_ugAdjacentDegreeSource && (!(New_ugIsEdgesEmpty)) && (!(New_Ret))))

predicates: Old_ugIsEdgesEmpty

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_IsEdgesEmptyContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)))

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges))))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges))) && (((New_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == New_ugVertexCount) && New_ugEdgeCount == New_ugVertexCount) || (((!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount) && (!(New_ugEdgeCount == New_ugVertexCount)))))

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && New_ugEdgeCount == New_ugVertexCount) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))))

predicates: New_ugEdgeCount == New_ugVertexCount

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges))) && ((((New_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == New_ugVertexCount) && (((New_Ret &&  Old_ugIsVerticesEmpty &&  New_ugIsVerticesEmpty &&  Old_ugIsEdgesEmpty &&  New_ugVertexCount == 0 &&  New_ugEdgeCount == 0) && New_ugIsEdgesEmpty) || (((!(New_Ret)) &&  (!(Old_ugIsVerticesEmpty)) &&  (!(New_ugIsVerticesEmpty)) &&  (!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty))))) && New_ugEdgeCount == New_ugVertexCount) || ((((!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount) && (((New_Ret &&  Old_ugIsEdgesEmpty &&  New_ugEdgeCount == 0) && New_ugIsEdgesEmpty) || (((!(New_Ret)) &&  (!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty))))) && (!(New_ugEdgeCount == New_ugVertexCount)))))

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && New_Ret && New_ugEdgeCount == New_ugVertexCount && Old_ugIsVerticesEmpty && New_ugIsVerticesEmpty && Old_ugIsEdgesEmpty && New_ugEdgeCount == 0 && New_ugIsEdgesEmpty) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(New_Ret)) && New_ugEdgeCount == New_ugVertexCount && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty))) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_Ret && (!(New_ugEdgeCount == New_ugVertexCount)) && Old_ugIsEdgesEmpty && New_ugEdgeCount == 0 && New_ugIsEdgesEmpty) || (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_Ret)) && (!(New_ugEdgeCount == New_ugVertexCount)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty))))

predicates: New_ugEdgeCount == New_ugVertexCount

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_EdgeCountContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugEdgeCount && New_Ret == New_ugEdgeCount)

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_Ret == Old_ugEdgeCount && New_Ret == New_ugEdgeCount))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugEdgeCount && New_Ret == New_ugEdgeCount) && (((New_ugEdgeCount == Old_ugVertexCount && New_Ret == Old_ugVertexCount && Old_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == New_ugVertexCount && New_ugEdgeCount == New_ugVertexCount) && New_Ret == New_ugVertexCount) || (((!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && New_Ret != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && New_Ret != New_ugVertexCount) && (!(New_Ret == New_ugVertexCount)))))

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_Ret == Old_ugEdgeCount && New_Ret == New_ugEdgeCount && New_Ret == New_ugVertexCount) || (New_ugVertexCount == Old_ugVertexCount && New_Ret == Old_ugEdgeCount && New_Ret == New_ugEdgeCount && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))))

predicates: New_Ret == New_ugVertexCount

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_Ret == Old_ugEdgeCount && New_Ret == New_ugEdgeCount) && ((((New_ugEdgeCount == Old_ugVertexCount && New_Ret == Old_ugVertexCount && Old_ugEdgeCount == Old_ugVertexCount && Old_ugEdgeCount == New_ugVertexCount && New_ugEdgeCount == New_ugVertexCount) && (((Old_ugIsVerticesEmpty &&  New_ugIsVerticesEmpty &&  Old_ugIsEdgesEmpty &&  New_ugVertexCount == 0 &&  New_ugEdgeCount == 0 &&  New_Ret == 0) && New_ugIsEdgesEmpty) || (((!(Old_ugIsVerticesEmpty)) &&  (!(New_ugIsVerticesEmpty)) &&  (!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty))))) && New_Ret == New_ugVertexCount) || ((((!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && New_Ret != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && New_Ret != New_ugVertexCount) && (((Old_ugIsEdgesEmpty &&  New_ugEdgeCount == 0 &&  New_Ret == 0) && New_ugIsEdgesEmpty) || (((!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty))))) && (!(New_Ret == New_ugVertexCount)))))

simplified postcondition: ((New_ugVertexCount == Old_ugVertexCount && New_Ret == Old_ugEdgeCount && New_Ret == New_ugEdgeCount && Old_ugIsVerticesEmpty && New_Ret == New_ugVertexCount && New_ugIsVerticesEmpty && Old_ugIsEdgesEmpty && New_Ret == 0 && New_ugIsEdgesEmpty) || (New_ugVertexCount == Old_ugVertexCount && New_Ret == Old_ugEdgeCount && New_Ret == New_ugEdgeCount && (!(Old_ugIsVerticesEmpty)) && New_Ret == New_ugVertexCount && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty))) || (New_ugVertexCount == Old_ugVertexCount && New_Ret == Old_ugEdgeCount && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && Old_ugIsEdgesEmpty && (!(New_Ret == New_ugVertexCount)) && New_ugEdgeCount == 0 && New_Ret == 0 && New_ugIsEdgesEmpty) || (New_ugVertexCount == Old_ugVertexCount && New_Ret == Old_ugEdgeCount && New_Ret == New_ugEdgeCount && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_Ret == New_ugVertexCount)) && (!(New_ugIsEdgesEmpty))))

predicates: New_Ret == New_ugVertexCount

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_AdjacentDegreeContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && New_Ret == Old_ugAdjacentDegree && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_Ret == New_ugAdjacentDegree)

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && New_Ret == Old_ugAdjacentDegree && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_Ret == New_ugAdjacentDegree))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && New_Ret == Old_ugAdjacentDegree && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_Ret == New_ugAdjacentDegree) && (((Old_ugIsEdgesEmpty && New_ugEdgeCount == 0 && New_ugAdjacentDegree == 0 && New_Ret == 0 && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugAdjacentDegree != Old_ugVertexCount && New_ugAdjacentDegree != Old_ugVertexCount && New_Ret != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && Old_ugAdjacentDegree != New_ugVertexCount && New_ugAdjacentDegree != New_ugVertexCount && New_Ret != New_ugVertexCount && Old_ugAdjacentDegree == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugEdgeCount && New_Ret == Old_ugEdgeCount && Old_ugAdjacentDegree == New_ugEdgeCount && New_ugAdjacentDegree == New_ugEdgeCount && New_Ret == New_ugEdgeCount) && New_ugIsEdgesEmpty) || (((!(Old_ugIsEdgesEmpty))) && (!(New_ugIsEdgesEmpty)))))

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && New_Ret == Old_ugAdjacentDegree && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_Ret == New_ugAdjacentDegree && Old_ugIsEdgesEmpty && New_Ret == 0 && (!(New_Ret == New_ugVertexCount)) && New_Ret == New_ugEdgeCount && New_ugIsEdgesEmpty) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && New_Ret == Old_ugAdjacentDegree && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_Ret == New_ugAdjacentDegree && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty))))

predicates: New_ugIsEdgesEmpty

Any: Pass

L: Pass

SubL: Pass

=====
k == 2

learned postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && New_Ret == Old_ugAdjacentDegree && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_Ret == New_ugAdjacentDegree) && ((((Old_ugIsEdgesEmpty && New_ugEdgeCount == 0 && New_ugAdjacentDegree == 0 && New_Ret == 0 && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugAdjacentDegree != Old_ugVertexCount && New_ugAdjacentDegree != Old_ugVertexCount && New_Ret != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && Old_ugAdjacentDegree != New_ugVertexCount && New_ugAdjacentDegree != New_ugVertexCount && New_Ret != New_ugVertexCount && Old_ugAdjacentDegree == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugEdgeCount && New_Ret == Old_ugEdgeCount && Old_ugAdjacentDegree == New_ugEdgeCount && New_ugAdjacentDegree == New_ugEdgeCount && New_Ret == New_ugEdgeCount) && (((New_x == 0 &&  Old_x != Old_ugVertexCount &&  New_x != Old_ugVertexCount &&  Old_x != New_ugVertexCount &&  New_x != New_ugVertexCount &&  Old_x == Old_ugEdgeCount &&  New_x == Old_ugEdgeCount &&  Old_x == New_ugEdgeCount &&  New_x == New_ugEdgeCount &&  Old_x == Old_ugAdjacentDegree &&  New_x == Old_ugAdjacentDegree &&  Old_x == New_ugAdjacentDegree &&  New_x == New_ugAdjacentDegree &&  New_Ret == Old_x) && New_Ret == New_x) || ((Old_x != Old_ugEdgeCount &&  New_x != Old_ugEdgeCount &&  Old_x != New_ugEdgeCount &&  New_x != New_ugEdgeCount &&  Old_x != Old_ugAdjacentDegree &&  New_x != Old_ugAdjacentDegree &&  Old_x != New_ugAdjacentDegree &&  New_x != New_ugAdjacentDegree &&  New_Ret != Old_x &&  New_Ret != New_x) && (!(New_Ret == New_x))))) && New_ugIsEdgesEmpty) || ((((!(Old_ugIsEdgesEmpty))) && (((New_ugEdgeCount == Old_ugVertexCount &&  Old_ugEdgeCount == Old_ugVertexCount &&  Old_ugEdgeCount == New_ugVertexCount) && New_ugEdgeCount == New_ugVertexCount) || ((Old_ugEdgeCount != Old_ugVertexCount &&  New_ugEdgeCount != Old_ugVertexCount &&  Old_ugEdgeCount != New_ugVertexCount &&  New_ugEdgeCount != New_ugVertexCount) && (!(New_ugEdgeCount == New_ugVertexCount))))) && (!(New_ugIsEdgesEmpty)))))

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && New_Ret == Old_ugAdjacentDegree && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_Ret == New_ugAdjacentDegree && Old_ugIsEdgesEmpty && New_Ret == 0 && (!(New_Ret == New_ugVertexCount)) && New_Ret == New_ugEdgeCount && New_ugIsEdgesEmpty) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_x == Old_x && New_Ret == Old_ugAdjacentDegree && (!(Old_ugAllowParallelEdges)) && (!(New_ugAllowParallelEdges)) && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_Ret == New_ugAdjacentDegree && (!(Old_ugIsEdgesEmpty)) && (!(New_ugIsEdgesEmpty))))

predicates: New_ugIsEdgesEmpty

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_IsAdjacentEdgesEmptyContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)))

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))) && (((New_x == Old_ugAdjacentDegree && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && Old_x == Old_ugAdjacentDegree && Old_x == New_ugAdjacentDegree) && New_x == New_ugAdjacentDegree) || ((Old_x != Old_ugAdjacentDegree && New_x != Old_ugAdjacentDegree && Old_x != New_ugAdjacentDegree && New_x != New_ugAdjacentDegree) && (!(New_x == New_ugAdjacentDegree)))))

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_ugEdgeCount == New_ugVertexCount))) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(New_x == New_ugAdjacentDegree))))

predicates: New_x == New_ugAdjacentDegree

Any: reject

L: reject

SubL: Pass

=====
k == 2

learned postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty))) && ((((New_Ret && Old_ugIsEdgesEmpty && New_ugEdgeCount == 0 && New_ugAdjacentDegree == 0 && Old_ugEdgeCount != Old_ugVertexCount && New_ugEdgeCount != Old_ugVertexCount && Old_ugAdjacentDegree != Old_ugVertexCount && New_ugAdjacentDegree != Old_ugVertexCount && Old_ugEdgeCount != New_ugVertexCount && New_ugEdgeCount != New_ugVertexCount && Old_ugAdjacentDegree != New_ugVertexCount && New_ugAdjacentDegree != New_ugVertexCount && Old_ugAdjacentDegree == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugEdgeCount && Old_ugAdjacentDegree == New_ugEdgeCount && New_ugAdjacentDegree == New_ugEdgeCount) && (((New_x == 0 &&  Old_x != Old_ugVertexCount &&  New_x != Old_ugVertexCount &&  Old_x != New_ugVertexCount &&  New_x != New_ugVertexCount &&  Old_x == Old_ugEdgeCount &&  New_x == Old_ugEdgeCount &&  Old_x == New_ugEdgeCount &&  New_x == New_ugEdgeCount &&  Old_x == Old_ugAdjacentDegree &&  New_x == Old_ugAdjacentDegree &&  Old_x == New_ugAdjacentDegree) && New_x == New_ugAdjacentDegree) || ((Old_x != Old_ugEdgeCount &&  New_x != Old_ugEdgeCount &&  Old_x != New_ugEdgeCount &&  New_x != New_ugEdgeCount &&  Old_x != Old_ugAdjacentDegree &&  New_x != Old_ugAdjacentDegree &&  Old_x != New_ugAdjacentDegree &&  New_x != New_ugAdjacentDegree) && (!(New_x == New_ugAdjacentDegree))))) && New_ugIsEdgesEmpty) || ((((!(Old_ugIsEdgesEmpty))) && (((New_ugEdgeCount == Old_ugVertexCount &&  (!(New_Ret)) &&  Old_ugEdgeCount == Old_ugVertexCount &&  Old_ugEdgeCount == New_ugVertexCount) && New_ugEdgeCount == New_ugVertexCount) || ((Old_ugEdgeCount != Old_ugVertexCount &&  New_ugEdgeCount != Old_ugVertexCount &&  Old_ugEdgeCount != New_ugVertexCount &&  New_ugEdgeCount != New_ugVertexCount) && (!(New_ugEdgeCount == New_ugVertexCount))))) && (!(New_ugIsEdgesEmpty)))))

simplified postcondition: ((Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && New_Ret && Old_ugIsEdgesEmpty && New_ugAdjacentDegree == 0 && (!(New_ugAdjacentDegree == New_ugVertexCount)) && New_ugAdjacentDegree == New_ugEdgeCount && New_ugIsEdgesEmpty) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_Ret)) && (!(New_ugIsEdgesEmpty))) || (Old_ugContainsVertexX && New_ugContainsVertexX && New_ugVertexCount == Old_ugVertexCount && New_ugEdgeCount == Old_ugEdgeCount && New_ugAdjacentDegree == Old_ugAdjacentDegree && New_x == Old_x && (!(Old_ugIsVerticesEmpty)) && (!(New_ugIsVerticesEmpty)) && (!(Old_ugIsEdgesEmpty)) && (!(New_ugEdgeCount == New_ugVertexCount)) && (!(New_ugIsEdgesEmpty))))

predicates: New_ugIsEdgesEmpty

Any: Pass

L: Pass

SubL: Pass

---------------------