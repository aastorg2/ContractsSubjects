Problem: ArrayListTest

---------------------
PUT_AddContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

Notes:
In agreement

======
k == 0

learned postcondition: (New_arrListContainsX && New_arrListCount == Old_arrListCount + 1 && New_x == Old_x && New_arrListLastIndexOfX == Old_arrListCount && New_Ret == Old_arrListCount && New_arrListCount != Old_arrListCount && Old_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_Ret != New_arrListCount && New_arrListLastIndexOfX != Old_arrListIndexOfX && New_Ret != Old_arrListIndexOfX && New_arrListLastIndexOfX != Old_arrListLastIndexOfX && New_Ret != Old_arrListLastIndexOfX && New_Ret == New_arrListLastIndexOfX)

simplified postcondition: ((New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_Ret == Old_arrListCount && (!(Old_arrListIndexOfX == New_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_Ret == Old_arrListIndexOfX)) && (!(New_Ret == Old_arrListLastIndexOfX)) && New_Ret == New_arrListLastIndexOfX))

predicate: None

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: pass

pex time: 240.08108353614807

learn time: 17.312235593795776

Samples: 20

======
k == 1

learned postcondition: ((New_arrListContainsX && New_arrListCount == Old_arrListCount + 1 && New_x == Old_x && New_arrListLastIndexOfX == Old_arrListCount && New_Ret == Old_arrListCount && New_arrListCount != Old_arrListCount && Old_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_Ret != New_arrListCount && New_arrListLastIndexOfX != Old_arrListIndexOfX && New_Ret != Old_arrListIndexOfX && New_arrListLastIndexOfX != Old_arrListLastIndexOfX && New_Ret != Old_arrListLastIndexOfX && New_Ret == New_arrListLastIndexOfX) && (((New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListIndexOfX != Old_arrListCount && New_arrListLastIndexOfX !=               New_arrListIndexOfX && New_Ret != New_arrListIndexOfX) && Old_arrListContainsX) || ((New_arrListIndexOfX == Old_arrListCount && New_arrListIndexOfX != Old_arrListIndexOfX && Old_arrListLastIndexOfX ==               Old_arrListIndexOfX && Old_arrListLastIndexOfX !=               New_arrListIndexOfX && New_arrListLastIndexOfX ==               New_arrListIndexOfX && New_Ret == New_arrListIndexOfX) && (!(Old_arrListContainsX)))))

simplified postcondition: ((New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_Ret == Old_arrListCount && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_Ret == Old_arrListLastIndexOfX)) && New_Ret == New_arrListLastIndexOfX && Old_arrListLastIndexOfX == Old_arrListIndexOfX && New_Ret == New_arrListIndexOfX && (!(Old_arrListContainsX))) || (New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_Ret == Old_arrListCount && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_Ret == Old_arrListLastIndexOfX)) && New_Ret == New_arrListLastIndexOfX && New_arrListIndexOfX == Old_arrListIndexOfX && (!(New_Ret == New_arrListIndexOfX)) && Old_arrListContainsX))

predicate: Old_arrListContainsX

predicate right: None

predicate left: None

Any: pass

L: pass

SubL: pass

pex time: 416.2766692638397

learn time: 156.15469002723694

Samples: 29

k0 -> k1: False

k1 -> k0: False

======
k == 2

learned postcondition: ((New_arrListContainsX && New_arrListCount == Old_arrListCount + 1 && New_x == Old_x && New_arrListLastIndexOfX == Old_arrListCount && New_Ret == Old_arrListCount && New_arrListCount != Old_arrListCount && Old_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_Ret != New_arrListCount && New_arrListLastIndexOfX != Old_arrListIndexOfX && New_Ret != Old_arrListIndexOfX && New_arrListLastIndexOfX != Old_arrListLastIndexOfX && New_Ret != Old_arrListLastIndexOfX && New_Ret == New_arrListLastIndexOfX) && ((((New_arrListIndexOfX ==                   Old_arrListIndexOfX && New_arrListIndexOfX != Old_arrListCount && New_arrListLastIndexOfX !=                   New_arrListIndexOfX && New_Ret != New_arrListIndexOfX) && (((New_arrListIndexOfX == Old_x &&  Old_x != Old_arrListCount &&  New_x != Old_arrListCount &&  Old_x != New_arrListCount &&  New_x != New_arrListCount &&  Old_arrListIndexOfX == Old_x &&  New_arrListLastIndexOfX != Old_x &&  New_Ret != Old_x &&  Old_arrListIndexOfX == New_x &&  New_arrListLastIndexOfX != New_x &&  New_Ret != New_x) && New_arrListIndexOfX == New_x) || ((Old_arrListIndexOfX != Old_x &&  New_arrListIndexOfX != Old_x &&  Old_arrListIndexOfX != New_x &&  New_arrListIndexOfX != New_x) && (!(New_arrListIndexOfX == New_x))))) && Old_arrListContainsX) || (((New_arrListIndexOfX == Old_arrListCount && New_arrListIndexOfX !=                   Old_arrListIndexOfX && Old_arrListLastIndexOfX ==                   Old_arrListIndexOfX && Old_arrListLastIndexOfX !=                   New_arrListIndexOfX && New_arrListLastIndexOfX ==                   New_arrListIndexOfX && New_Ret == New_arrListIndexOfX) && (((New_arrListCount == Old_x &&  Old_x != Old_arrListCount &&  New_x != Old_arrListCount &&  Old_x == New_arrListCount &&  Old_arrListIndexOfX != Old_x &&  New_arrListIndexOfX != Old_x &&  Old_arrListLastIndexOfX != Old_x &&  New_arrListLastIndexOfX != Old_x &&  New_Ret != Old_x &&  Old_arrListIndexOfX != New_x &&  New_arrListIndexOfX != New_x &&  Old_arrListLastIndexOfX != New_x &&  New_arrListLastIndexOfX != New_x &&  New_Ret != New_x) && New_x == New_arrListCount) || ((Old_x != New_arrListCount &&  New_x != New_arrListCount) && (!(New_x == New_arrListCount))))) && (!(Old_arrListContainsX)))))

simplified postcondition: ((New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_Ret == Old_arrListCount && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_Ret == Old_arrListLastIndexOfX)) && New_Ret == New_arrListLastIndexOfX && New_arrListIndexOfX == Old_arrListIndexOfX && (!(New_Ret == New_arrListIndexOfX)) && Old_arrListContainsX) || (New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_Ret == Old_arrListCount && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_Ret == Old_arrListLastIndexOfX)) && New_Ret == New_arrListLastIndexOfX && Old_arrListLastIndexOfX == Old_arrListIndexOfX && New_Ret == New_arrListIndexOfX && (!(Old_arrListContainsX))))

predicate: Old_arrListContainsX

predicate right: New_x == New_arrListCount

predicate left: New_arrListIndexOfX == New_x

Any: pass

L: pass

SubL: pass

pex time: 590.4252820014954

learn time: 826.8626420497894

Samples: 55

k0 -> k2: False

k1 -> k2: True

---------------------
PUT_RemoveContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

Notes:
Need help

======
k == 0

learned postcondition: (New_arrListCount ==    Old_arrListCount - Old_arrListIndexOfX - 1 && New_x == Old_x && New_arrListLastIndexOfX ==    Old_arrListLastIndexOfX - Old_arrListIndexOfX - 1 && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && New_arrListIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount)

simplified postcondition: ((New_arrListCount ==       -1 + Old_arrListCount + -1*Old_arrListIndexOfX && New_x == Old_x && New_arrListLastIndexOfX ==       -1 + Old_arrListLastIndexOfX + -1*Old_arrListIndexOfX && (!(Old_arrListIndexOfX == Old_arrListCount)) && (!(New_arrListIndexOfX == Old_arrListCount)) && (!(New_arrListLastIndexOfX == Old_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount))))

predicate: None

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: pass

pex time: 96.51081943511963

learn time: 13.731730461120605

Samples: 14

======
k == 1

learned postcondition: ((New_x == Old_x && New_arrListLastIndexOfX ==        Old_arrListLastIndexOfX - Old_arrListIndexOfX - 1 && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && New_arrListIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount) && (((New_arrListCount ==               Old_arrListIndexOfX +               Old_arrListCount - Old_arrListLastIndexOfX && New_arrListIndexOfX == Old_arrListIndexOfX && Old_arrListIndexOfX != New_arrListCount && New_arrListLastIndexOfX ==               New_arrListIndexOfX) && New_arrListLastIndexOfX == Old_arrListIndexOfX) || ((Old_arrListContainsX && New_arrListCount == Old_arrListCount - 1 && New_arrListCount != Old_arrListCount && New_arrListLastIndexOfX !=               Old_arrListIndexOfX && Old_arrListLastIndexOfX !=               New_arrListIndexOfX && New_arrListLastIndexOfX !=               Old_arrListLastIndexOfX) && (!(New_arrListLastIndexOfX ==               Old_arrListIndexOfX)))))

simplified postcondition: ((New_x == Old_x && New_arrListLastIndexOfX ==       -1 + Old_arrListLastIndexOfX + -1*Old_arrListIndexOfX && (!(New_arrListLastIndexOfX == Old_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && New_arrListCount ==       Old_arrListIndexOfX +       Old_arrListCount +       -1*Old_arrListLastIndexOfX && New_arrListLastIndexOfX == New_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListIndexOfX) || (New_x == Old_x && New_arrListLastIndexOfX ==       -1 + Old_arrListLastIndexOfX + -1*Old_arrListIndexOfX && (!(Old_arrListIndexOfX == Old_arrListCount)) && (!(New_arrListIndexOfX == Old_arrListCount)) && (!(Old_arrListLastIndexOfX == Old_arrListCount)) && (!(New_arrListLastIndexOfX == Old_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && Old_arrListContainsX && New_arrListCount == -1 + Old_arrListCount && (!(Old_arrListLastIndexOfX == New_arrListIndexOfX)) && (!(New_arrListLastIndexOfX ==           Old_arrListLastIndexOfX)) && (!(New_arrListLastIndexOfX == Old_arrListIndexOfX))))

predicate: New_arrListLastIndexOfX == Old_arrListIndexOfX

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: pass

pex time: 314.7645888328552

learn time: 171.7401566505432

Samples: 25

k0 -> k1: False

k1 -> k0: False

======
k == 2

learned postcondition: ((New_x == Old_x && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && New_arrListIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount) && ((((New_arrListCount ==                   Old_arrListIndexOfX +                   Old_arrListCount -                   Old_arrListLastIndexOfX && New_arrListIndexOfX ==                   Old_arrListIndexOfX && Old_arrListIndexOfX != New_arrListCount && New_arrListLastIndexOfX ==                   New_arrListIndexOfX) && (((New_arrListCount == Old_x +                          Old_arrListCount -                          Old_arrListLastIndexOfX &&  New_arrListIndexOfX == Old_x &&  New_arrListLastIndexOfX == Old_x &&  Old_x != Old_arrListCount &&  New_x != Old_arrListCount &&  Old_x != New_arrListCount &&  New_x != New_arrListCount &&  Old_arrListIndexOfX == Old_x &&  Old_arrListIndexOfX == New_x &&  New_arrListIndexOfX == New_x) && New_arrListLastIndexOfX == New_x) || ((Old_arrListIndexOfX != Old_x &&  New_arrListIndexOfX != Old_x &&  Old_arrListLastIndexOfX != Old_x &&  New_arrListLastIndexOfX != Old_x &&  Old_arrListIndexOfX != New_x &&  New_arrListIndexOfX != New_x &&  Old_arrListLastIndexOfX != New_x &&  New_arrListLastIndexOfX != New_x) && (!(New_arrListLastIndexOfX == New_x))))) && New_arrListLastIndexOfX == Old_arrListIndexOfX) || (((Old_arrListContainsX && New_arrListCount == Old_arrListCount - 1 && New_arrListCount != Old_arrListCount && New_arrListLastIndexOfX !=                   Old_arrListIndexOfX && Old_arrListLastIndexOfX !=                   New_arrListIndexOfX && New_arrListLastIndexOfX !=                   Old_arrListLastIndexOfX) && (((New_arrListLastIndexOfX == Old_x - Old_arrListIndexOfX - 1 &&  Old_x != Old_arrListCount &&  New_x != Old_arrListCount &&  New_arrListIndexOfX != Old_x &&  Old_arrListLastIndexOfX == Old_x &&  New_arrListLastIndexOfX != Old_x &&  New_arrListIndexOfX != New_x &&  New_arrListLastIndexOfX != New_x) && Old_arrListLastIndexOfX == New_x) || ((Old_x != New_arrListCount &&  New_x != New_arrListCount &&  Old_arrListLastIndexOfX != Old_x &&  Old_arrListLastIndexOfX != New_x) && (!(Old_arrListLastIndexOfX == New_x))))) && (!(New_arrListLastIndexOfX ==               Old_arrListIndexOfX)))))

simplified postcondition: ((New_x == Old_x && (!(New_arrListLastIndexOfX == Old_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && New_arrListCount ==       Old_arrListIndexOfX +       Old_arrListCount +       -1*Old_arrListLastIndexOfX && New_arrListLastIndexOfX == New_arrListIndexOfX && New_arrListLastIndexOfX == New_x && New_arrListLastIndexOfX == Old_arrListIndexOfX) || (New_x == Old_x && (!(New_arrListLastIndexOfX == Old_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && New_arrListCount ==       Old_arrListIndexOfX +       Old_arrListCount +       -1*Old_arrListLastIndexOfX && New_arrListLastIndexOfX == New_arrListIndexOfX && (!(Old_arrListLastIndexOfX == New_x)) && New_arrListLastIndexOfX == Old_arrListIndexOfX) || (New_x == Old_x && (!(Old_arrListIndexOfX == Old_arrListCount)) && (!(New_arrListIndexOfX == Old_arrListCount)) && (!(Old_arrListLastIndexOfX == Old_arrListCount)) && (!(New_arrListLastIndexOfX == Old_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && Old_arrListContainsX && New_arrListCount == -1 + Old_arrListCount && (!(Old_arrListLastIndexOfX == New_arrListIndexOfX)) && (!(New_arrListLastIndexOfX ==           Old_arrListLastIndexOfX)) && (!(New_x == New_arrListCount)) && (!(New_arrListLastIndexOfX == Old_arrListIndexOfX)) && (!(Old_arrListLastIndexOfX == New_x))) || (New_x == Old_x && (!(Old_arrListIndexOfX == Old_arrListCount)) && (!(New_arrListIndexOfX == Old_arrListCount)) && (!(Old_arrListLastIndexOfX == Old_arrListCount)) && (!(New_arrListLastIndexOfX == Old_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && Old_arrListContainsX && New_arrListCount == -1 + Old_arrListCount && New_arrListLastIndexOfX ==       -1 + Old_x + -1*Old_arrListIndexOfX && (!(New_arrListLastIndexOfX == Old_arrListIndexOfX)) && (!(New_arrListIndexOfX == New_x)) && (!(New_arrListLastIndexOfX == New_x)) && Old_arrListLastIndexOfX == New_x))

predicate: New_arrListLastIndexOfX == Old_arrListIndexOfX

predicate right: Old_arrListLastIndexOfX == New_x

predicate left: New_arrListLastIndexOfX == New_x

Any: pass

L: pass

SubL: pass

pex time: 634.2647688388824

learn time: 915.0046308040619

Samples: 60

k0 -> k2: False

k1 -> k2: False

---------------------
PUT_InsertContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

Notes:
In agreement

======
k == 0

learned postcondition: (New_arrListContainsX && New_arrListCount == Old_arrListCount + 1 && New_x == Old_x && New_index == Old_index && New_arrListCount != Old_arrListCount && Old_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && Old_index != New_arrListCount && New_index != New_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != Old_arrListIndexOfX && New_arrListLastIndexOfX != Old_arrListLastIndexOfX)

simplified postcondition: ((New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_index == Old_index && (!(Old_arrListIndexOfX == Old_arrListCount)) && (!(Old_arrListLastIndexOfX == Old_arrListCount)) && (!(New_index == New_arrListCount)) && (!(Old_arrListIndexOfX == New_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == Old_arrListIndexOfX)) && (!(New_arrListLastIndexOfX ==           Old_arrListLastIndexOfX))))

predicate: None

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: pass

pex time: 234.57566857337952

learn time: 31.88089942932129

Samples: 22

======
k == 1

learned postcondition: ((New_arrListContainsX && New_arrListCount == Old_arrListCount + 1 && New_x == Old_x && New_index == Old_index && New_arrListCount != Old_arrListCount && Old_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && Old_index != New_arrListCount && New_index != New_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != Old_arrListIndexOfX && New_arrListLastIndexOfX != Old_arrListLastIndexOfX) && (((New_arrListLastIndexOfX == Old_arrListCount && Old_index == Old_arrListCount && Old_arrListIndexOfX != Old_index && Old_arrListLastIndexOfX != Old_index && New_arrListLastIndexOfX == Old_index && Old_arrListIndexOfX != New_index && Old_arrListLastIndexOfX != New_index && New_arrListLastIndexOfX == New_index) && New_index == Old_arrListCount) || ((Old_index != Old_arrListCount && New_index != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_x != New_arrListCount && New_x != New_arrListCount) && (!(New_index == Old_arrListCount)))))

simplified postcondition: ((New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_index == Old_index && (!(Old_arrListIndexOfX == New_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == Old_arrListIndexOfX)) && (!(New_arrListLastIndexOfX ==           Old_arrListLastIndexOfX)) && New_arrListLastIndexOfX == New_index && New_index == Old_arrListCount) || (New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_index == Old_index && (!(Old_arrListIndexOfX == Old_arrListCount)) && (!(Old_arrListLastIndexOfX == Old_arrListCount)) && (!(New_index == New_arrListCount)) && (!(Old_arrListIndexOfX == New_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == Old_arrListIndexOfX)) && (!(New_arrListLastIndexOfX ==           Old_arrListLastIndexOfX)) && (!(New_arrListIndexOfX == Old_arrListCount)) && (!(New_x == New_arrListCount)) && (!(New_index == Old_arrListCount))))

predicate: New_index == Old_arrListCount

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: pass

pex time: 420.6708815097809

learn time: 736.7127768993378

Samples: 54

k0 -> k1: False

k1 -> k0: False

======
k == 2

learned postcondition: ((New_arrListContainsX && New_arrListCount == Old_arrListCount + 1 && New_x == Old_x && New_index == Old_index && New_arrListCount != Old_arrListCount && Old_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && Old_index != New_arrListCount && New_index != New_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != Old_arrListIndexOfX && New_arrListLastIndexOfX != Old_arrListLastIndexOfX) && ((((New_arrListLastIndexOfX ==                   Old_arrListCount && Old_index == Old_arrListCount && Old_arrListIndexOfX != Old_index && Old_arrListLastIndexOfX != Old_index && New_arrListLastIndexOfX == Old_index && Old_arrListIndexOfX != New_index && Old_arrListLastIndexOfX != New_index && New_arrListLastIndexOfX == New_index) && (((New_arrListIndexOfX == Old_arrListIndexOfX &&  New_arrListIndexOfX != Old_arrListCount &&  New_arrListIndexOfX != Old_index &&  New_arrListIndexOfX != New_index &&  New_arrListLastIndexOfX != New_arrListIndexOfX) && Old_arrListContainsX) || ((New_arrListIndexOfX == Old_arrListCount &&  New_arrListIndexOfX == Old_index &&  New_arrListIndexOfX == New_index &&  New_arrListIndexOfX != Old_arrListIndexOfX &&  Old_arrListLastIndexOfX == Old_arrListIndexOfX &&  Old_arrListLastIndexOfX != New_arrListIndexOfX &&  New_arrListLastIndexOfX == New_arrListIndexOfX) && (!(Old_arrListContainsX))))) && New_index == Old_arrListCount) || (((Old_index != Old_arrListCount && New_index != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_x != New_arrListCount && New_x != New_arrListCount) && ((true && Old_arrListLastIndexOfX ==                      Old_arrListIndexOfX) || ((Old_arrListContainsX &&  New_arrListIndexOfX == 0 &&  New_arrListLastIndexOfX == Old_arrListLastIndexOfX + 1 &&  Old_x != Old_arrListCount &&  New_x != Old_arrListCount &&  New_arrListLastIndexOfX != Old_x &&  New_arrListLastIndexOfX != New_x &&  Old_arrListLastIndexOfX != Old_arrListIndexOfX &&  Old_arrListLastIndexOfX != New_arrListIndexOfX &&  New_arrListLastIndexOfX != New_arrListIndexOfX) && (!(Old_arrListLastIndexOfX == Old_arrListIndexOfX))))) && (!(New_index == Old_arrListCount)))))

simplified postcondition: ((New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_index == Old_index && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == Old_arrListIndexOfX)) && (!(Old_arrListLastIndexOfX == New_index)) && New_arrListLastIndexOfX == New_index && New_arrListIndexOfX == Old_arrListIndexOfX && New_index == Old_arrListCount && Old_arrListContainsX) || (New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_index == Old_index && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_index)) && New_arrListLastIndexOfX == New_index && Old_arrListLastIndexOfX == Old_arrListIndexOfX && New_index == Old_arrListCount && New_arrListLastIndexOfX == New_arrListIndexOfX && (!(Old_arrListContainsX))) || (New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_index == Old_index && (!(Old_arrListIndexOfX == Old_arrListCount)) && (!(New_index == New_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == Old_arrListIndexOfX)) && (!(New_arrListIndexOfX == Old_arrListCount)) && (!(New_x == New_arrListCount)) && Old_arrListLastIndexOfX == Old_arrListIndexOfX) || (New_arrListContainsX && New_arrListCount == 1 + Old_arrListCount && New_x == Old_x && New_index == Old_index && (!(Old_arrListIndexOfX == Old_arrListCount)) && (!(New_index == New_arrListCount)) && (!(Old_arrListIndexOfX == New_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == Old_arrListIndexOfX)) && (!(New_arrListIndexOfX == Old_arrListCount)) && (!(New_x == New_arrListCount)) && Old_arrListContainsX && (!(New_index == Old_arrListCount)) && New_arrListIndexOfX == 0 && New_arrListLastIndexOfX ==       1 + Old_arrListLastIndexOfX && (!(New_x == Old_arrListCount)) && (!(New_arrListLastIndexOfX == New_x)) && (!(Old_arrListLastIndexOfX == New_arrListIndexOfX)) && (!(New_arrListLastIndexOfX == New_arrListIndexOfX))))

predicate: New_index == Old_arrListCount

predicate right: Old_arrListLastIndexOfX == Old_arrListIndexOfX

predicate left: Old_arrListContainsX

Any: pass

L: pass

SubL: pass

pex time: 595.3765814304352

learn time: 2425.351449728012

Samples: 100

k0 -> k2: False

k1 -> k2: False

---------------------
PUT_SetContract

Disjunctive (PexChoose): False
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

Notes:

It learns New_arrListIndexOfX == 0 to be always true which is incorrect

======
k == 0

learned postcondition: (New_arrListContainsX && New_arrListCount == Old_arrListCount && New_x == Old_x && New_index == Old_index && New_arrListIndexOfX == 0 && Old_index != Old_arrListCount && New_index != Old_arrListCount && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && Old_index != New_arrListCount && New_index != New_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount)

simplified postcondition: ((New_arrListContainsX && New_arrListCount == Old_arrListCount && New_x == Old_x && New_index == Old_index && New_arrListIndexOfX == 0 && (!(New_index == New_arrListCount)) && (!(Old_arrListIndexOfX == New_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount))))

predicate: None

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: reject

pex time: 117.18935489654541

learn time: 16.567133903503418

Samples: 14

======
k == 1

learned postcondition: ((New_arrListContainsX && New_arrListCount == Old_arrListCount && New_x == Old_x && New_index == Old_index && Old_index != Old_arrListCount && New_index != Old_arrListCount && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && Old_index != New_arrListCount && New_index != New_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount) && (((Old_arrListContainsX && New_arrListIndexOfX == 0 && New_arrListIndexOfX == Old_arrListIndexOfX) && New_arrListLastIndexOfX ==           Old_arrListLastIndexOfX) || ((New_arrListIndexOfX ==               Old_index - Old_arrListIndexOfX - 1 && New_arrListLastIndexOfX == Old_index && Old_arrListIndexOfX != Old_index && Old_arrListLastIndexOfX != Old_index && Old_arrListIndexOfX != New_index && Old_arrListLastIndexOfX != New_index && New_arrListLastIndexOfX == New_index && Old_arrListLastIndexOfX ==               Old_arrListIndexOfX && New_arrListLastIndexOfX !=               Old_arrListIndexOfX && New_arrListLastIndexOfX !=               Old_arrListLastIndexOfX) && (!(New_arrListLastIndexOfX ==               Old_arrListLastIndexOfX)))))

simplified postcondition: ((New_arrListContainsX && New_arrListCount == Old_arrListCount && New_x == Old_x && New_index == Old_index && (!(New_index == New_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && Old_arrListContainsX && New_arrListIndexOfX == 0 && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX) || (New_arrListContainsX && New_arrListCount == Old_arrListCount && New_x == Old_x && New_index == Old_index && (!(New_index == New_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && New_arrListIndexOfX ==       -1 + Old_index + -1*Old_arrListIndexOfX && New_arrListLastIndexOfX == New_index && Old_arrListLastIndexOfX == Old_arrListIndexOfX && (!(New_arrListLastIndexOfX ==           Old_arrListLastIndexOfX))))

predicate: New_arrListLastIndexOfX == Old_arrListLastIndexOfX

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: reject

pex time: 145.30888962745667

learn time: 225.33620262145996

Samples: 26

k0 -> k1: False

k1 -> k0: False

======
k == 2

learned postcondition: ((New_arrListContainsX && New_arrListCount == Old_arrListCount && New_x == Old_x && New_index == Old_index && Old_index != Old_arrListCount && New_index != Old_arrListCount && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && Old_index != New_arrListCount && New_index != New_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount) && ((((New_arrListIndexOfX == Old_index && New_arrListLastIndexOfX == Old_index && New_arrListIndexOfX == New_index && New_arrListLastIndexOfX == New_index && Old_arrListLastIndexOfX ==                   Old_arrListIndexOfX) && (((New_x == Old_arrListCount &&  Old_x == Old_arrListCount &&  Old_x == New_arrListCount &&  Old_index != Old_x &&  New_index != Old_x &&  Old_arrListIndexOfX != Old_x &&  New_arrListIndexOfX != Old_x &&  Old_arrListLastIndexOfX != Old_x &&  New_arrListLastIndexOfX != Old_x &&  Old_index != New_x &&  New_index != New_x &&  Old_arrListIndexOfX != New_x &&  New_arrListIndexOfX != New_x &&  Old_arrListLastIndexOfX != New_x &&  New_arrListLastIndexOfX != New_x) && New_x == New_arrListCount) || ((Old_x != Old_arrListCount &&  New_x != Old_arrListCount &&  Old_x != New_arrListCount &&  New_x != New_arrListCount) && (!(New_x == New_arrListCount))))) && New_arrListLastIndexOfX == New_arrListIndexOfX) || (((Old_arrListContainsX && New_arrListLastIndexOfX !=                   New_arrListIndexOfX) && (((New_index == 0 &&  New_arrListIndexOfX == 0 &&  New_arrListLastIndexOfX == Old_arrListLastIndexOfX &&  Old_arrListIndexOfX == Old_index &&  New_arrListIndexOfX == Old_index &&  Old_arrListLastIndexOfX != Old_index &&  New_arrListLastIndexOfX != Old_index &&  New_arrListIndexOfX == New_index &&  Old_arrListLastIndexOfX != New_index &&  New_arrListLastIndexOfX != New_index &&  New_arrListIndexOfX == Old_arrListIndexOfX &&  Old_arrListLastIndexOfX != Old_arrListIndexOfX &&  New_arrListLastIndexOfX != Old_arrListIndexOfX &&  Old_arrListLastIndexOfX != New_arrListIndexOfX) && Old_arrListIndexOfX == New_index) || ((Old_arrListIndexOfX != Old_index &&  Old_arrListIndexOfX != New_index) && (!(Old_arrListIndexOfX == New_index))))) && (!(New_arrListLastIndexOfX ==               New_arrListIndexOfX)))))

simplified postcondition: ((New_arrListContainsX && New_arrListCount == Old_arrListCount && New_x == Old_x && New_index == Old_index && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && New_arrListLastIndexOfX == New_index && Old_arrListLastIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == New_arrListIndexOfX) || (New_arrListContainsX && New_arrListCount == Old_arrListCount && New_x == Old_x && New_index == Old_index && (!(New_index == New_arrListCount)) && (!(Old_arrListIndexOfX == New_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(Old_arrListLastIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && Old_arrListContainsX && (!(Old_arrListIndexOfX == New_index)) && (!(New_arrListLastIndexOfX == New_arrListIndexOfX))) || (New_arrListContainsX && New_arrListCount == Old_arrListCount && New_x == Old_x && (!(Old_arrListIndexOfX == New_arrListCount)) && (!(New_arrListIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && Old_arrListContainsX && New_arrListIndexOfX == 0 && (!(New_arrListLastIndexOfX == New_arrListIndexOfX)) && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_arrListIndexOfX == Old_index && New_arrListIndexOfX == New_index))

predicate: New_arrListLastIndexOfX == New_arrListIndexOfX

predicate right: Old_arrListIndexOfX == New_index

predicate left: New_x == New_arrListCount

Any: reject

L: reject

SubL: reject

pex time: 447.2012708187103

learn time: 1054.3910248279572

Samples: 60

k0 -> k2: False

k1 -> k2: False

---------------------
PUT_GetContract

Disjunctive (PexChoose): False
Disjunctive (Alternate Semantics): False
Disjunctive (Truly): False

Notes:
In agreement

======
k == 0

learned postcondition: (New_containsNewRet && New_arrListCount == Old_arrListCount && New_index == Old_index && Old_index != Old_arrListCount && New_index != Old_arrListCount && Old_index != New_arrListCount && New_index != New_arrListCount)

simplified postcondition: ((New_containsNewRet && New_arrListCount == Old_arrListCount && New_index == Old_index && (!(New_index == New_arrListCount))))

predicate: None

predicate right: None

predicate left: None

Any: pass

L: pass

SubL: pass

pex time: 91.14846682548523

learn time: 5.39279317855835

Samples: 13

======
k == 1

learned postcondition: (New_containsNewRet && New_arrListCount == Old_arrListCount && New_index == Old_index && Old_index != Old_arrListCount && New_index != Old_arrListCount && Old_index != New_arrListCount && New_index != New_arrListCount)

simplified postcondition: ((New_containsNewRet && New_arrListCount == Old_arrListCount && New_index == Old_index && (!(New_index == New_arrListCount))))

predicate: None

predicate right: None

predicate left: None

Any: pass

L: pass

SubL: pass

pex time: 122.88519287109375

learn time: 9.58663558959961

Samples: 13

k0 -> k1: True

k1 -> k0: True

======
k == 2

learned postcondition: (New_containsNewRet && New_arrListCount == Old_arrListCount && New_index == Old_index && Old_index != Old_arrListCount && New_index != Old_arrListCount && Old_index != New_arrListCount && New_index != New_arrListCount)

simplified postcondition: ((New_containsNewRet && New_arrListCount == Old_arrListCount && New_index == Old_index && (!(New_index == New_arrListCount))))

predicate: None

predicate right: None

predicate left: None

Any: pass

L: pass

SubL: pass

pex time: 84.41783237457275

learn time: 8.711143016815186

Samples: 13

k0 -> k2: True

k1 -> k2: True

---------------------
PUT_ContainsContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

Notes:
In agreement

======
k == 0

learned postcondition: (New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount)

simplified postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && (!(New_arrListIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount))))

predicate: None

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: pass

pex time: 77.44004082679749

learn time: 10.032919645309448

Samples: 13

======
k == 1

learned postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount) && (((New_Ret && Old_arrListContainsX) && New_arrListContainsX) || ((New_arrListLastIndexOfX ==               Old_arrListIndexOfX && (!(New_Ret)) && (!(Old_arrListContainsX)) && Old_arrListLastIndexOfX ==               Old_arrListIndexOfX && Old_arrListLastIndexOfX ==               New_arrListIndexOfX && New_arrListLastIndexOfX ==               New_arrListIndexOfX) && (!(New_arrListContainsX)))))

simplified postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && (!(New_arrListIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && New_Ret && Old_arrListContainsX && New_arrListContainsX) || (New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && (!(New_arrListLastIndexOfX == New_arrListCount)) && (!(New_Ret)) && (!(Old_arrListContainsX)) && New_arrListLastIndexOfX == New_arrListIndexOfX && (!(New_arrListContainsX))))

predicate: New_arrListContainsX

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: pass

pex time: 173.8641984462738

learn time: 157.86313891410828

Samples: 27

k0 -> k1: False

k1 -> k0: False

======
k == 2

learned postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount) && ((((New_Ret && Old_arrListContainsX) && (((New_arrListLastIndexOfX == Old_arrListIndexOfX &&  Old_arrListLastIndexOfX == Old_arrListIndexOfX &&  Old_arrListLastIndexOfX == New_arrListIndexOfX) && New_arrListLastIndexOfX ==                      New_arrListIndexOfX) || ((New_arrListIndexOfX == 0 &&  Old_arrListLastIndexOfX != Old_arrListIndexOfX &&  New_arrListLastIndexOfX != Old_arrListIndexOfX &&  Old_arrListLastIndexOfX != New_arrListIndexOfX &&  New_arrListLastIndexOfX != New_arrListIndexOfX) && (!(New_arrListLastIndexOfX == New_arrListIndexOfX))))) && New_arrListContainsX) || (((New_arrListLastIndexOfX ==                   Old_arrListIndexOfX && (!(New_Ret)) && (!(Old_arrListContainsX)) && Old_arrListLastIndexOfX ==                   Old_arrListIndexOfX && Old_arrListLastIndexOfX ==                   New_arrListIndexOfX && New_arrListLastIndexOfX ==                   New_arrListIndexOfX) && (((New_x == Old_arrListCount &&  Old_x == Old_arrListCount &&  Old_x == New_arrListCount &&  Old_arrListIndexOfX != Old_x &&  New_arrListIndexOfX != Old_x &&  Old_arrListLastIndexOfX != Old_x &&  New_arrListLastIndexOfX != Old_x &&  Old_arrListIndexOfX != New_x &&  New_arrListIndexOfX != New_x &&  Old_arrListLastIndexOfX != New_x &&  New_arrListLastIndexOfX != New_x) && New_x == New_arrListCount) || ((Old_x != Old_arrListCount &&  New_x != Old_arrListCount &&  Old_x != New_arrListCount &&  New_x != New_arrListCount) && (!(New_x == New_arrListCount))))) && (!(New_arrListContainsX)))))

simplified postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && (!(New_arrListLastIndexOfX == New_arrListCount)) && (!(New_Ret)) && (!(Old_arrListContainsX)) && New_arrListLastIndexOfX == New_arrListIndexOfX && (!(New_arrListContainsX))) || (New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && (!(New_arrListLastIndexOfX == New_arrListCount)) && New_Ret && Old_arrListContainsX && New_arrListLastIndexOfX == New_arrListIndexOfX && New_arrListContainsX) || (New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && (!(New_arrListIndexOfX == New_arrListCount)) && (!(New_arrListLastIndexOfX == New_arrListCount)) && New_Ret && Old_arrListContainsX && New_arrListIndexOfX == 0 && New_arrListContainsX))

predicate: New_arrListContainsX

predicate right: New_x == New_arrListCount

predicate left: New_arrListLastIndexOfX == New_arrListIndexOfX

Any: pass

L: pass

SubL: pass

pex time: 200.19267916679382

learn time: 351.3204114437103

Samples: 36

k0 -> k2: False

k1 -> k2: False

---------------------
PUT_IndexOfContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

Notes:
In agreement

======
k == 0

learned postcondition: (New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_Ret == Old_arrListIndexOfX && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && New_Ret != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_Ret != New_arrListCount && New_Ret == New_arrListIndexOfX)

simplified postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_Ret == Old_arrListIndexOfX && (!(New_arrListLastIndexOfX == New_arrListCount)) && (!(New_Ret == New_arrListCount)) && New_Ret == New_arrListIndexOfX))

predicate: None

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: pass

pex time: 87.24984788894653

learn time: 14.597989797592163

Samples: 13

======
k == 1

learned postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_Ret == Old_arrListIndexOfX && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && New_Ret != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_Ret != New_arrListCount && New_Ret == New_arrListIndexOfX) && (((Old_arrListContainsX) && New_arrListContainsX) || ((New_arrListLastIndexOfX ==               Old_arrListIndexOfX && (!(Old_arrListContainsX)) && Old_arrListLastIndexOfX ==               Old_arrListIndexOfX && Old_arrListLastIndexOfX ==               New_arrListIndexOfX && New_arrListLastIndexOfX ==               New_arrListIndexOfX && New_Ret == Old_arrListLastIndexOfX && New_Ret == New_arrListLastIndexOfX) && (!(New_arrListContainsX)))))

simplified postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_Ret == Old_arrListIndexOfX && (!(New_arrListLastIndexOfX == New_arrListCount)) && (!(New_Ret == New_arrListCount)) && New_Ret == New_arrListIndexOfX && Old_arrListContainsX && New_arrListContainsX) || (New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_Ret == Old_arrListIndexOfX && (!(New_Ret == New_arrListCount)) && New_Ret == New_arrListIndexOfX && (!(Old_arrListContainsX)) && New_Ret == New_arrListLastIndexOfX && (!(New_arrListContainsX))))

predicate: New_arrListContainsX

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: pass

pex time: 133.57453322410583

learn time: 136.79571843147278

Samples: 21

k0 -> k1: False

k1 -> k0: False

======
k == 2

learned postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_Ret == Old_arrListIndexOfX && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && New_Ret != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_Ret != New_arrListCount && New_Ret == New_arrListIndexOfX) && ((((Old_arrListContainsX) && (((New_arrListLastIndexOfX == Old_arrListIndexOfX &&  Old_arrListLastIndexOfX == Old_arrListIndexOfX &&  Old_arrListLastIndexOfX == New_arrListIndexOfX &&  New_arrListLastIndexOfX == New_arrListIndexOfX &&  New_Ret == Old_arrListLastIndexOfX) && New_Ret == New_arrListLastIndexOfX) || ((New_arrListIndexOfX == 0 &&  New_Ret == 0 &&  Old_arrListLastIndexOfX != Old_arrListIndexOfX &&  New_arrListLastIndexOfX != Old_arrListIndexOfX &&  Old_arrListLastIndexOfX != New_arrListIndexOfX &&  New_arrListLastIndexOfX != New_arrListIndexOfX &&  New_Ret != Old_arrListLastIndexOfX &&  New_Ret != New_arrListLastIndexOfX) && (!(New_Ret == New_arrListLastIndexOfX))))) && New_arrListContainsX) || (((New_arrListLastIndexOfX ==                   Old_arrListIndexOfX && (!(Old_arrListContainsX)) && Old_arrListLastIndexOfX ==                   Old_arrListIndexOfX && Old_arrListLastIndexOfX ==                   New_arrListIndexOfX && New_arrListLastIndexOfX ==                   New_arrListIndexOfX && New_Ret == Old_arrListLastIndexOfX && New_Ret == New_arrListLastIndexOfX) && (((New_x == Old_arrListCount &&  Old_x == Old_arrListCount &&  Old_x == New_arrListCount &&  Old_arrListIndexOfX != Old_x &&  New_arrListIndexOfX != Old_x &&  Old_arrListLastIndexOfX != Old_x &&  New_arrListLastIndexOfX != Old_x &&  New_Ret != Old_x &&  Old_arrListIndexOfX != New_x &&  New_arrListIndexOfX != New_x &&  Old_arrListLastIndexOfX != New_x &&  New_arrListLastIndexOfX != New_x &&  New_Ret != New_x) && New_x == New_arrListCount) || ((Old_x != Old_arrListCount &&  New_x != Old_arrListCount &&  Old_x != New_arrListCount &&  New_x != New_arrListCount) && (!(New_x == New_arrListCount))))) && (!(New_arrListContainsX)))))

simplified postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_Ret == Old_arrListIndexOfX && (!(New_Ret == New_arrListCount)) && Old_arrListContainsX && New_arrListLastIndexOfX == New_arrListIndexOfX && New_arrListContainsX && New_Ret == New_arrListLastIndexOfX) || (New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_Ret == Old_arrListIndexOfX && (!(New_arrListLastIndexOfX == New_arrListCount)) && (!(New_Ret == New_arrListCount)) && Old_arrListContainsX && New_arrListIndexOfX == 0 && New_arrListContainsX && New_Ret == 0) || (New_arrListCount == Old_arrListCount && New_x == Old_x && (!(New_Ret == New_arrListCount)) && (!(Old_arrListContainsX)) && Old_arrListLastIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == New_arrListIndexOfX && New_Ret == Old_arrListLastIndexOfX && New_Ret == New_arrListLastIndexOfX && (!(New_arrListContainsX))))

predicate: New_arrListContainsX

predicate right: New_x == New_arrListCount

predicate left: New_Ret == New_arrListLastIndexOfX

Any: pass

L: pass

SubL: pass

pex time: 184.87871837615967

learn time: 466.0544059276581

Samples: 36

k0 -> k2: False

k1 -> k2: False

---------------------
PUT_LastIndexOfContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

Notes:
In agreement

======
k == 0

learned postcondition: (New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_Ret == Old_arrListLastIndexOfX && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && New_Ret != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_Ret != New_arrListCount && New_Ret == New_arrListLastIndexOfX)

simplified postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_Ret == Old_arrListLastIndexOfX && (!(New_arrListIndexOfX == New_arrListCount)) && (!(New_Ret == New_arrListCount)) && New_Ret == New_arrListLastIndexOfX))

predicate: None

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: pass

pex time: 58.87188911437988

learn time: 6.123183727264404

Samples: 8

======
k == 1

learned postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_Ret == Old_arrListLastIndexOfX && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && New_Ret != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_Ret != New_arrListCount && New_Ret == New_arrListLastIndexOfX) && (((Old_arrListContainsX) && New_arrListContainsX) || ((New_arrListLastIndexOfX ==               Old_arrListIndexOfX && New_Ret == Old_arrListIndexOfX && (!(Old_arrListContainsX)) && Old_arrListLastIndexOfX ==               Old_arrListIndexOfX && Old_arrListLastIndexOfX ==               New_arrListIndexOfX && New_arrListLastIndexOfX ==               New_arrListIndexOfX && New_Ret == New_arrListIndexOfX) && (!(New_arrListContainsX)))))

simplified postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_Ret == Old_arrListLastIndexOfX && (!(New_arrListIndexOfX == New_arrListCount)) && (!(New_Ret == New_arrListCount)) && New_Ret == New_arrListLastIndexOfX && Old_arrListContainsX && New_arrListContainsX) || (New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_Ret == Old_arrListLastIndexOfX && (!(New_Ret == New_arrListCount)) && New_Ret == New_arrListLastIndexOfX && (!(Old_arrListContainsX)) && New_Ret == New_arrListIndexOfX && (!(New_arrListContainsX))))

predicate: New_arrListContainsX

predicate right: None

predicate left: None

Any: reject

L: reject

SubL: pass

pex time: 180.32343912124634

learn time: 162.80736708641052

Samples: 21

k0 -> k1: False

k1 -> k0: False

======
k == 2

learned postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_arrListLastIndexOfX == Old_arrListLastIndexOfX && New_Ret == Old_arrListLastIndexOfX && Old_arrListIndexOfX != Old_arrListCount && New_arrListIndexOfX != Old_arrListCount && Old_arrListLastIndexOfX != Old_arrListCount && New_arrListLastIndexOfX != Old_arrListCount && New_Ret != Old_arrListCount && Old_arrListIndexOfX != New_arrListCount && New_arrListIndexOfX != New_arrListCount && Old_arrListLastIndexOfX != New_arrListCount && New_arrListLastIndexOfX != New_arrListCount && New_Ret != New_arrListCount && New_Ret == New_arrListLastIndexOfX) && ((((Old_arrListContainsX) && (((New_arrListLastIndexOfX == Old_arrListIndexOfX &&  New_Ret == Old_arrListIndexOfX &&  Old_arrListLastIndexOfX == Old_arrListIndexOfX &&  Old_arrListLastIndexOfX == New_arrListIndexOfX &&  New_arrListLastIndexOfX == New_arrListIndexOfX) && New_Ret == New_arrListIndexOfX) || ((New_arrListIndexOfX == 0 &&  Old_arrListLastIndexOfX != Old_arrListIndexOfX &&  New_arrListLastIndexOfX != Old_arrListIndexOfX &&  New_Ret != Old_arrListIndexOfX &&  Old_arrListLastIndexOfX != New_arrListIndexOfX &&  New_arrListLastIndexOfX != New_arrListIndexOfX &&  New_Ret != New_arrListIndexOfX) && (!(New_Ret == New_arrListIndexOfX))))) && New_arrListContainsX) || (((New_arrListLastIndexOfX ==                   Old_arrListIndexOfX && New_Ret == Old_arrListIndexOfX && (!(Old_arrListContainsX)) && Old_arrListLastIndexOfX ==                   Old_arrListIndexOfX && Old_arrListLastIndexOfX ==                   New_arrListIndexOfX && New_arrListLastIndexOfX ==                   New_arrListIndexOfX && New_Ret == New_arrListIndexOfX) && (((New_x == Old_arrListCount &&  Old_x == Old_arrListCount &&  Old_x == New_arrListCount &&  Old_arrListIndexOfX != Old_x &&  New_arrListIndexOfX != Old_x &&  Old_arrListLastIndexOfX != Old_x &&  New_arrListLastIndexOfX != Old_x &&  New_Ret != Old_x &&  Old_arrListIndexOfX != New_x &&  New_arrListIndexOfX != New_x &&  Old_arrListLastIndexOfX != New_x &&  New_arrListLastIndexOfX != New_x &&  New_Ret != New_x) && New_x == New_arrListCount) || ((Old_x != Old_arrListCount &&  New_x != Old_arrListCount &&  Old_x != New_arrListCount &&  New_x != New_arrListCount) && (!(New_x == New_arrListCount))))) && (!(New_arrListContainsX)))))

simplified postcondition: ((New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_Ret == Old_arrListLastIndexOfX && (!(New_Ret == New_arrListCount)) && New_Ret == New_arrListLastIndexOfX && Old_arrListContainsX && New_Ret == New_arrListIndexOfX && New_arrListContainsX) || (New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_Ret == Old_arrListLastIndexOfX && (!(New_arrListIndexOfX == New_arrListCount)) && (!(New_Ret == New_arrListCount)) && New_Ret == New_arrListLastIndexOfX && Old_arrListContainsX && New_arrListIndexOfX == 0 && New_arrListContainsX) || (New_arrListCount == Old_arrListCount && New_x == Old_x && New_arrListIndexOfX == Old_arrListIndexOfX && New_Ret == Old_arrListLastIndexOfX && (!(New_Ret == New_arrListCount)) && New_Ret == New_arrListLastIndexOfX && (!(Old_arrListContainsX)) && New_Ret == New_arrListIndexOfX && (!(New_arrListContainsX))))

predicate: New_arrListContainsX

predicate right: New_x == New_arrListCount

predicate left: New_Ret == New_arrListIndexOfX

Any: pass

L: pass

SubL: pass

pex time: 216.84944033622742

learn time: 380.73686051368713

Samples: 32

k0 -> k2: False

k1 -> k2: False

---------------------
PUT_CountContract

Disjunctive (PexChoose): False
Disjunctive (Alternate Semantics): False
Disjunctive (Truly): False

Notes:
In agreement

======
k == 0

learned postcondition: (New_arrListCount == Old_arrListCount && New_Ret == Old_arrListCount && New_Ret == New_arrListCount)

simplified postcondition: ((New_Ret == Old_arrListCount && New_Ret == New_arrListCount))

predicate: None

predicate right: None

predicate left: None

Any: pass

L: pass

SubL: pass

pex time: 133.90169858932495

learn time: 1.477989912033081

Samples: 10

======
k == 1

learned postcondition: (New_arrListCount == Old_arrListCount && New_Ret == Old_arrListCount && New_Ret == New_arrListCount)

simplified postcondition: ((New_Ret == Old_arrListCount && New_Ret == New_arrListCount))

predicate: None

predicate right: None

predicate left: None

Any: pass

L: pass

SubL: pass

pex time: 183.50404334068298

learn time: 2.032541036605835

Samples: 10

k0 -> k1: True

k1 -> k0: True

======
k == 2

learned postcondition: (New_arrListCount == Old_arrListCount && New_Ret == Old_arrListCount && New_Ret == New_arrListCount)

simplified postcondition: ((New_Ret == Old_arrListCount && New_Ret == New_arrListCount))

predicate: None

predicate right: None

predicate left: None

Any: pass

L: pass

SubL: pass

pex time: 189.47200417518616

learn time: 1.9898648262023926

Samples: 10

k0 -> k2: True

k1 -> k2: True
