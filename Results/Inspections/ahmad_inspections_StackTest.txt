Problem: StackTest

---------------------
PUT_PushContract

Disjunctive (PexChoose): False
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (New_s1ContainsX && New_s1Count == Old_s1Count + 1 && New_Top == Old_x && New_x == Old_x && New_s1Count != Old_s1Count && Old_x == New_Top && New_x == New_Top)

simplified postcondition: ((New_s1ContainsX && New_s1Count == 1 + Old_s1Count && Old_x == New_Top && New_x == New_Top))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: (New_s1ContainsX && New_s1Count == Old_s1Count + 1 && New_Top == Old_x && New_x == Old_x && New_s1Count != Old_s1Count && Old_x == New_Top && New_x == New_Top)

simplified postcondition: ((New_s1ContainsX && New_s1Count == 1 + Old_s1Count && Old_x == New_Top && New_x == New_Top))

predicates: None

Any: reject

L: reject

SubL: reject

=====
k == 2

learned postcondition: (New_s1ContainsX && New_s1Count == Old_s1Count + 1 && New_Top == Old_x && New_x == Old_x && New_s1Count != Old_s1Count && Old_x == New_Top && New_x == New_Top)

simplified postcondition: ((New_s1ContainsX && New_s1Count == 1 + Old_s1Count && Old_x == New_Top && New_x == New_Top))
 
predicates: None

Any: reject

L: reject

SubL: reject

---------------------
PUT_PopContract

Disjunctive (PexChoose): False
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (New_s1Count == Old_s1Count - 1 && New_Ret == Old_Top && New_s1Count != Old_s1Count)

simplified postcondition: ((New_s1Count == -1 + Old_s1Count && New_Ret == Old_Top))

predicates: None

Any: reject

L: reject

SubL: Pass

=====
k == 1

learned postcondition: (New_s1Count == Old_s1Count - 1 && New_Ret == Old_Top && New_s1Count != Old_s1Count)

simplified postcondition: ((New_s1Count == -1 + Old_s1Count && New_Ret == Old_Top))

predicates: None

Any: reject

L: reject

SubL: reject

=====
k == 2

learned postcondition: (New_s1Count == Old_s1Count - 1 && New_Ret == Old_Top && New_s1Count != Old_s1Count)

simplified postcondition: ((New_s1Count == -1 + Old_s1Count && New_Ret == Old_Top))

predicates: None

Any: reject

L: reject

SubL: reject

---------------------
PUT_PeekContract

Disjunctive (PexChoose): False
Disjunctive (Alternate Semantics): False
Disjunctive (Truly): False

=====
k == 0

learned postcondition: (New_s1Count == Old_s1Count && New_Top == Old_Top && New_Ret == Old_Top && New_Ret == New_Top)

simplified postcondition: ((New_s1Count == Old_s1Count && New_Ret == Old_Top && New_Ret == New_Top))

predicates: None


Any: Pass

L: Pass

SubL: Pass

=====
k == 1

learned postcondition: (New_s1Count == Old_s1Count && New_Top == Old_Top && New_Ret == Old_Top && New_Ret == New_Top)

simplified postcondition: ((New_s1Count == Old_s1Count && New_Ret == Old_Top && New_Ret == New_Top))

predicates: None

Any: Pass

L: Pass

SubL: Pass

=====
k == 2

learned postcondition: (New_s1Count == Old_s1Count && New_Top == Old_Top && New_Ret == Old_Top && New_Ret == New_Top)

simplified postcondition: ((New_s1Count == Old_s1Count && New_Ret == Old_Top && New_Ret == New_Top))

predicates: None

Any: Pass

L: Pass

SubL: Pass

---------------------
PUT_CountContract

Disjunctive (PexChoose): True
Disjunctive (Alternate Semantics): False
Disjunctive (Truly): False

=====
k == 0

learned postcondition: (New_s1Count == Old_s1Count && New_Ret == Old_s1Count && New_Ret == New_s1Count)

simplified postcondition: ((New_Ret == Old_s1Count && New_Ret == New_s1Count))

predicates: None

Any: reject

L: reject

SubL: reject

pex time: 74.46192598342896

learn time: 4.122227907180786

Samples: 9

=====
k == 1

learned postcondition: ((New_s1Count == Old_s1Count && New_Ret == Old_s1Count && New_Ret == New_s1Count) && (((New_Top == Old_Top) && New_ContainsNewRet) || (true && (!(New_ContainsNewRet)))))

simplified postcondition: ((New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Top == Old_Top) || (New_Ret == Old_s1Count && New_Ret == New_s1Count && (!(New_ContainsNewRet))))

predicates: New_ContainsNewRet

Any: reject

L: reject

SubL: Pass

pex time: 106.25021266937256

learn time: 22.74586844444275

Samples: 17

k0 -> k1: False

k1 -> k0: False

=====
k == 2

learned postcondition: ((New_s1Count == Old_s1Count && New_Ret == Old_s1Count && New_Ret == New_s1Count) && ((((New_Top == Old_Top) && (((New_Top == Old_s1Count &&  Old_Top == Old_s1Count &&  Old_Top == New_s1Count &&  New_Top == New_s1Count &&  New_Ret == Old_Top) && New_Ret == New_Top) || ((Old_Top != Old_s1Count &&  New_Top != Old_s1Count &&  Old_Top != New_s1Count &&  New_Top != New_s1Count &&  New_Ret != Old_Top &&  New_Ret != New_Top) && (!(New_Ret == New_Top))))) && New_ContainsNewRet) || ((true && (((New_s1Count == 0 &&  New_Ret == 0 &&  Old_Top == Old_s1Count &&  Old_Top == New_s1Count) && New_Ret == Old_Top) || ((Old_Top != Old_s1Count &&  Old_Top != New_s1Count &&  New_Ret != Old_Top) && (!(New_Ret == Old_Top))))) && (!(New_ContainsNewRet)))))

simplified postcondition: ((New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_ContainsNewRet) || (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret == 0 && (!(New_ContainsNewRet))) || (New_Ret == Old_s1Count && New_Ret == New_s1Count && (!(New_Ret == Old_Top)) && (!(New_ContainsNewRet))))

predicates: New_ContainsNewRet

Any: reject

L: Pass

SubL: Pass

pex time: 151.08302569389343

learn time: 61.227513551712036

Samples: 27

k0 -> k2: False

k1 -> k2: False

---------------------
PUT_ContainsContract

Disjunctive (PexObserve): True
Disjunctive (Alternate Semantics): True
Disjunctive (Truly): True

=====
k == 0

learned postcondition: (New_s1Count == Old_s1Count)

simplified postcondition: ((New_s1Count == Old_s1Count))

predicates: None

Any: reject

L: reject

SubL: reject

pex time: 51.30953407287598

learn time: 2.5732429027557373

Samples: 10

=====
k == 1

learned postcondition: ((New_s1Count == Old_s1Count) && (((New_Ret && Old_s1ContainsX && New_Top == Old_Top) && New_s1ContainsX) || (((!(New_Ret)) && (!(Old_s1ContainsX))) && (!(New_s1ContainsX)))))

simplified postcondition: ((New_s1Count == Old_s1Count && (!(New_Ret)) && (!(Old_s1ContainsX)) && (!(New_s1ContainsX))) || (New_s1Count == Old_s1Count && New_Ret && Old_s1ContainsX && New_Top == Old_Top && New_s1ContainsX))

predicates: New_s1ContainsX

Any: Pass

L: Pass

SubL: Pass

pex time: 65.84815168380737

learn time: 15.691133737564087

Samples: 15

k0 -> k1: False

k1 -> k0: False

=====
k == 2

learned postcondition: ((New_s1Count == Old_s1Count) && ((((New_Ret && Old_s1ContainsX && New_Top == Old_Top) && (((New_Top == Old_s1Count &&  Old_Top == Old_s1Count &&  Old_Top == New_s1Count) && New_Top == New_s1Count) || ((Old_Top != Old_s1Count &&  New_Top != Old_s1Count &&  Old_Top != New_s1Count &&  New_Top != New_s1Count) && (!(New_Top == New_s1Count))))) && New_s1ContainsX) || ((((!(New_Ret)) && (!(Old_s1ContainsX))) && (((New_Top == Old_s1Count) && New_Top == New_s1Count) || ((New_Top != Old_s1Count &&  New_Top != New_s1Count) && (!(New_Top == New_s1Count))))) && (!(New_s1ContainsX)))))

simplified postcondition: ((New_s1Count == Old_s1Count && (!(New_Ret)) && (!(Old_s1ContainsX)) && (!(New_s1ContainsX))) || (New_s1Count == Old_s1Count && New_Ret && Old_s1ContainsX && New_Top == Old_Top && New_s1ContainsX))

predicates: New_s1ContainsX

Any: Pass

L: Pass

SubL: Pass

pex time: 90.13938546180725

learn time: 59.37993359565735

Samples: 34

k0 -> k2: False

k1 -> k2: True