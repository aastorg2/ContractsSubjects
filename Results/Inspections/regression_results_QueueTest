Problem: QueueTest

PUT: PUT_EnqueueContract

Predicate root : Old_s1ContainsX

Predicate root : Old_s1ContainsX

Predicate root Right : Old_x == Old_s1Count

Predicate root : Old_s1ContainsX

Predicate root Right : Old_x == Old_s1Count

Final Tree ====
Round: 1
Predicate root : Old_s1ContainsX

Predicate root Right : Old_x == Old_s1Count

Predicate root : Not(Old_s1ContainsX)

Predicate root : Not(Old_s1ContainsX)

Predicate root Right : Old_Top != Old_s1Count

Predicate root : Not(Old_s1ContainsX)

Predicate root Right : Old_Top != Old_s1Count

Predicate root : Old_Top != Old_s1Count

Predicate root Right : Old_x == New_Top

Predicate root Right Right : Not(Old_s1ContainsX)

Predicate root : Old_Top != Old_s1Count

Predicate root Right : Old_x == New_Top

Predicate root Right Right : Not(Old_s1ContainsX)

Predicate root : Old_Top != Old_s1Count

Predicate root Right : Old_x == New_Top

Predicate root Right Right : Not(Old_s1ContainsX)

Predicate root Right Right Right : Old_x == New_s1Count

Predicate root : Old_Top != Old_s1Count

Predicate root Right : Old_x == New_Top

Predicate root Right Right : Not(Old_s1ContainsX)

Predicate root Right Right Right : Old_x == New_s1Count

Final Tree ====
Round: 2
Predicate root : Old_Top != Old_s1Count

Predicate root Right : Old_x == New_Top

Predicate root Right Right : Not(Old_s1ContainsX)

Predicate root Right Right Right : Old_x == New_s1Count

Predicate root : Old_s1ContainsX

Predicate root : Old_s1ContainsX

Predicate root Right : Old_Top != Old_s1Count

Predicate root : Old_s1ContainsX

Predicate root Right : Old_Top != Old_s1Count

Predicate root : Old_s1ContainsX

Predicate root Right : Old_Top == Old_s1Count

Predicate root Right Right : Old_Top != Old_s1Count

Predicate root : Old_s1ContainsX

Predicate root Right : Old_Top == Old_s1Count

Predicate root Right Right : Old_Top != Old_s1Count

Final Tree ====
Round: 3
Predicate root : Old_s1ContainsX

Predicate root Right : Old_Top == Old_s1Count

Predicate root Right Right : Old_Top != Old_s1Count

Predicate root : Old_s1ContainsX

Predicate root : Old_s1ContainsX

Predicate root Right : Old_s1Count < New_Top

Predicate root : Old_s1ContainsX

Predicate root Right : Old_s1Count < New_Top

Predicate root : Old_s1ContainsX

Predicate root Right : Old_s1Count < New_Top

Predicate root Right Right : Old_Top != New_s1Count

Predicate root : Old_s1ContainsX

Predicate root Right : Old_s1Count < New_Top

Predicate root Right Right : Old_Top != New_s1Count

Final Tree ====
Round: 4
Predicate root : Old_s1ContainsX

Predicate root Right : Old_s1Count < New_Top

Predicate root Right Right : Old_Top != New_s1Count

Predicate root : Old_s1ContainsX

Predicate root : Old_s1ContainsX

Predicate root Right : Old_s1Count < New_Top

Predicate root : Old_s1ContainsX

Predicate root Right : Old_s1Count < New_Top

Predicate root : Old_s1ContainsX

Predicate root Right : Old_Top != New_s1Count

Predicate root Right Right : Old_s1Count < New_Top

Predicate root : Old_s1ContainsX

Predicate root Right : Old_Top != New_s1Count

Predicate root Right Right : Old_s1Count < New_Top

Predicate root : Old_s1ContainsX

Predicate root Right : Old_s1Count < New_Top

Predicate root Right Right : Old_Top != New_s1Count

Predicate root Right Right Right : Not(Old_s1ContainsX)

Predicate root : Old_s1ContainsX

Predicate root Right : Old_s1Count < New_Top

Predicate root Right Right : Old_Top != New_s1Count

Predicate root Right Right Right : Not(Old_s1ContainsX)

Final Tree ====
Round: 5
Predicate root : Old_s1ContainsX

Predicate root Right : Old_s1Count < New_Top

Predicate root Right Right : Old_Top != New_s1Count

Predicate root Right Right Right : Not(Old_s1ContainsX)

Predicate root : Old_s1ContainsX

Predicate root : Old_s1ContainsX

Predicate root Right : New_Top != Old_Top

Predicate root : Old_s1ContainsX

Predicate root Right : New_Top != Old_Top

Final Tree ====
Round: 6
Predicate root : Old_s1ContainsX

Predicate root Right : New_Top != Old_Top

===== Final Result for PUT_EnqueueContract

postcondition: 
((New_s1ContainsX && New_s1Count == Old_s1Count + 1 && New_s1Count != Old_s1Count && Old_s1Count < New_s1Count && Old_s1Count <= New_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count) && (((!(Old_s1ContainsX)) ||   ((Old_s1ContainsX && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count) && (((!(New_Top != Old_Top)) || false) && (New_Top != Old_Top || true)))) && (Old_s1ContainsX || ((!(Old_s1ContainsX))))))
rounds: 7

simplified post: 
((New_s1ContainsX && New_s1Count == 1 + Old_s1Count && (!(Old_s1ContainsX)) && New_s1Count >= 1) || (New_s1ContainsX && New_s1Count == 1 + Old_s1Count && New_Top == Old_Top && New_s1Count >= 2))
pex time: 306.5486717224121

learn time: 12347.763110399246

Samples: 60

PUT: PUT_DequeueContract

Predicate root : New_s1ContainsNewRet

Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

Final Tree ====
Round: 1
Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

Predicate root : New_s1ContainsNewRet

Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

Final Tree ====
Round: 2
Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

Predicate root : New_s1ContainsNewRet

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret == Old_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret == Old_s1Count

Final Tree ====
Round: 3
Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret == Old_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Final Tree ====
Round: 4
Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret == New_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret == New_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret == New_s1Count

Predicate root Right Right : Old_Top != New_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret == New_s1Count

Predicate root Right Right : Old_Top != New_s1Count

Final Tree ====
Round: 5
Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret == New_s1Count

Predicate root Right Right : Old_Top != New_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

Final Tree ====
Round: 6
Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

===== Final Result for PUT_DequeueContract

postcondition: 
((New_s1Count == Old_s1Count - 1 && New_Ret == Old_Top && New_s1Count != Old_s1Count && New_s1Count < Old_s1Count && New_s1Count <= Old_s1Count && New_Ret <= Old_Top && Old_Top <= New_Ret && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count) && (((!((!(New_s1ContainsNewRet)))) ||   (((!(New_s1ContainsNewRet))) && (((!(New_s1ContainsNewRet)) || false) && (New_s1ContainsNewRet || true)))) && ((!(New_s1ContainsNewRet)) ||   (New_s1ContainsNewRet && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count))))
rounds: 7

simplified post: 
((New_s1Count == -1 + Old_s1Count && New_Ret <= Old_Top && Old_Top <= New_Ret && (!(New_s1ContainsNewRet)) && New_s1Count >= 0) || (New_s1Count == -1 + Old_s1Count && New_Ret <= Old_Top && Old_Top <= New_Ret && New_s1Count >= 1))
pex time: 149.94522523880005

learn time: 3661.47013258934

Samples: 51

PUT: PUT_PeekContract

Predicate root : 1 < New_s1Count

Predicate root : 1 == New_s1Count

Predicate root Right : 1 < New_s1Count

Predicate root : 1 == New_s1Count

Predicate root Right : 1 < New_s1Count

Final Tree ====
Round: 1
Predicate root : 1 == New_s1Count

Predicate root Right : 1 < New_s1Count

Predicate root : Old_s1Count <= New_Ret

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : Old_s1Count <= New_Ret

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : Old_s1Count <= New_Ret

Final Tree ====
Round: 2
Predicate root : New_Ret <= Old_s1Count

Predicate root Right : Old_s1Count <= New_Ret

Predicate root : Old_s1Count <= New_Ret

Predicate root : Old_s1Count <= New_Ret

Predicate root Right : 1 < New_s1Count

Predicate root : Old_s1Count <= New_Ret

Predicate root Right : 1 < New_s1Count

Predicate root : Old_s1Count <= New_Ret

Predicate root Right : 1 < New_s1Count

Predicate root Right Right : New_Ret < Old_s1Count

Predicate root : Old_s1Count <= New_Ret

Predicate root Right : 1 < New_s1Count

Predicate root Right Right : New_Ret < Old_s1Count

Final Tree ====
Round: 3
Predicate root : Old_s1Count <= New_Ret

Predicate root Right : 1 < New_s1Count

Predicate root Right Right : New_Ret < Old_s1Count

Predicate root : New_s1Count < New_Ret

Predicate root : New_s1Count < New_Ret

Predicate root Right : New_Ret < New_s1Count

Predicate root : New_s1Count < New_Ret

Predicate root Right : New_Ret < New_s1Count

Final Tree ====
Round: 4
Predicate root : New_s1Count < New_Ret

Predicate root Right : New_Ret < New_s1Count

Predicate root : New_Ret <= Old_s1Count

Predicate root : New_Ret != New_s1Count

Predicate root Right : New_Ret <= Old_s1Count

Predicate root : New_Ret != New_s1Count

Predicate root Right : New_Ret <= Old_s1Count

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 1 == New_Ret

Predicate root Right Right : New_Ret != New_s1Count

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 1 == New_Ret

Predicate root Right Right : New_Ret != New_s1Count

Final Tree ====
Round: 5
Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 1 == New_Ret

Predicate root Right Right : New_Ret != New_s1Count

Predicate root : New_Ret <= Old_s1Count

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : Old_s1Count < New_Ret

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : Old_s1Count < New_Ret

Final Tree ====
Round: 6
Predicate root : New_Ret <= Old_s1Count

Predicate root Right : Old_s1Count < New_Ret

===== Final Result for PUT_PeekContract

postcondition: 
((New_s1ContainsNewRet && New_s1Count == Old_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count) && (((!(New_Ret <= Old_s1Count)) ||   ((New_Ret <= Old_s1Count && New_Ret <= New_s1Count) && (((!(Old_s1Count < New_Ret)) || false) && (Old_s1Count < New_Ret || true)))) && (New_Ret <= Old_s1Count ||   (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret))))
rounds: 7

simplified post: 
((New_s1ContainsNewRet && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && New_s1Count >= 1))
pex time: 95.93239140510559

learn time: 45.67985534667969

Samples: 32

PUT: PUT_ContainsContract

Predicate root : New_Ret

Predicate root : Not(New_Ret)

Predicate root Right : New_Ret

Predicate root : Not(New_Ret)

Predicate root Right : New_Ret

Final Tree ====
Round: 1
Predicate root : Not(New_Ret)

Predicate root Right : New_Ret

Predicate root : New_Ret

Predicate root : New_Ret

Predicate root Right : New_Top < Old_s1Count

Predicate root : New_Ret

Predicate root Right : New_Top < Old_s1Count

Predicate root : New_Ret

Predicate root Right : New_Top < Old_s1Count

Predicate root Right Right : Old_Top == New_s1Count

Predicate root : New_Ret

Predicate root Right : New_Top < Old_s1Count

Predicate root Right Right : Old_Top == New_s1Count

Final Tree ====
Round: 2
Predicate root : New_Ret

Predicate root Right : New_Top < Old_s1Count

Predicate root Right Right : Old_Top == New_s1Count

Predicate root : New_Ret

Predicate root : New_Ret

Predicate root Right : Old_s1Count < Old_Top

Predicate root : New_Ret

Predicate root Right : Old_s1Count < Old_Top

Predicate root : New_Ret

Predicate root Right : Old_s1Count < Old_Top

Predicate root Right Right : 0 == New_Top

Predicate root : New_Ret

Predicate root Right : Old_s1Count < Old_Top

Predicate root Right Right : 0 == New_Top

Final Tree ====
Round: 3
Predicate root : New_Ret

Predicate root Right : Old_s1Count < Old_Top

Predicate root Right Right : 0 == New_Top

Predicate root : New_Ret

Predicate root : New_Ret

Predicate root Right : New_Top <= Old_s1Count

Predicate root : New_Ret

Predicate root Right : New_Top <= Old_s1Count

Predicate root : New_Ret

Predicate root Right : New_Top <= Old_s1Count

Predicate root Right Right : 0 < New_Top

Predicate root : New_Ret

Predicate root Right : New_Top <= Old_s1Count

Predicate root Right Right : 0 < New_Top

Predicate root : New_Ret

Predicate root Right : Old_Top != Old_s1Count

Predicate root Right Right : New_Top <= Old_s1Count

Predicate root Right Right Right : 0 < New_Top

Predicate root : New_Ret

Predicate root Right : Old_Top != Old_s1Count

Predicate root Right Right : New_Top <= Old_s1Count

Predicate root Right Right Right : 0 < New_Top

Final Tree ====
Round: 4
Predicate root : New_Ret

Predicate root Right : Old_Top != Old_s1Count

Predicate root Right Right : New_Top <= Old_s1Count

Predicate root Right Right Right : 0 < New_Top

Predicate root : New_Ret

Predicate root : Not(New_Ret)

Predicate root Right : New_Ret

Predicate root : Not(New_Ret)

Predicate root Right : New_Ret

Final Tree ====
Round: 5
Predicate root : Not(New_Ret)

Predicate root Right : New_Ret

===== Final Result for PUT_ContainsContract

postcondition: 
((New_s1Count == Old_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count) && (((!((!(New_Ret)))) ||   (((!(New_Ret))) && (((!(New_Ret)) || false) && (New_Ret || true)))) && ((!(New_Ret)) ||   (New_Ret && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count))))
rounds: 6

simplified post: 
((New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && (!(New_Ret)) && New_s1Count >= 0) || (New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_s1Count >= 1))
pex time: 93.30307674407959

learn time: 2002.3108642101288

Samples: 41

PUT: PUT_CountContract

Predicate root : New_Ret == Old_Top

Predicate root : New_Ret != Old_Top

Predicate root Right : New_Ret == Old_Top

Predicate root : New_Ret != Old_Top

Predicate root Right : New_Ret == Old_Top

Final Tree ====
Round: 1
Predicate root : New_Ret != Old_Top

Predicate root Right : New_Ret == Old_Top

Predicate root : New_Top == Old_Top

Predicate root : New_Top == Old_Top

Predicate root Right : 1 == Old_Top

Predicate root : New_Top == Old_Top

Predicate root Right : 1 == Old_Top

Final Tree ====
Round: 2
Predicate root : New_Top == Old_Top

Predicate root Right : 1 == Old_Top

Predicate root : New_Top < Old_Top

Predicate root : New_Top < Old_Top

Predicate root Right : 1 < Old_Top

Predicate root : New_Top < Old_Top

Predicate root Right : 1 < Old_Top

Final Tree ====
Round: 3
Predicate root : New_Top < Old_Top

Predicate root Right : 1 < Old_Top

Predicate root : Old_Top < New_Top

Predicate root : Old_Top < New_Top

Predicate root Right : New_Ret == New_Top

Predicate root : Old_Top < New_Top

Predicate root Right : New_Ret == New_Top

Final Tree ====
Round: 4
Predicate root : Old_Top < New_Top

Predicate root Right : New_Ret == New_Top

Predicate root : New_Top < Old_Top

Predicate root : Old_Top <= New_Top

Predicate root Right : New_Top < Old_Top

Predicate root : Old_Top <= New_Top

Predicate root Right : New_Top < Old_Top

Final Tree ====
Round: 5
Predicate root : Old_Top <= New_Top

Predicate root Right : New_Top < Old_Top

Predicate root : New_Top < Old_Top

Predicate root : Old_Top <= New_Top

Predicate root Right : New_Top < Old_Top

Predicate root : Old_Top <= New_Top

Predicate root Right : New_Top < Old_Top

Final Tree ====
Round: 6
Predicate root : Old_Top <= New_Top

Predicate root Right : New_Top < Old_Top

Predicate root : New_Top < Old_Top

Predicate root : New_Top < Old_Top

Predicate root Right : Old_Top <= New_Top

Predicate root : New_Top < Old_Top

Predicate root Right : Old_Top <= New_Top

Final Tree ====
Round: 7
Predicate root : New_Top < Old_Top

Predicate root Right : Old_Top <= New_Top

===== Final Result for PUT_CountContract

postcondition: 
((0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret) && (((!(New_Top < Old_Top)) ||   ((New_Top != Old_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == New_Ret) && (((!(Old_Top <= New_Top)) || false) && (Old_Top <= New_Top || true)))) && (New_Top < Old_Top || (Old_Top <= New_Top))))
rounds: 8

simplified post: 
((Old_Top <= New_Top && New_Ret >= 0) || (New_Ret == 0))
pex time: 88.2282042503357

learn time: 213.96838855743408

Samples: 37

Problem: QueueTest

PUT: PUT_EnqueueContract

Houdini AlwaysTrue for k=2 : (New_s1ContainsX && New_s1Count == Old_s1Count + 1 && New_Top == 0 && New_s1Count != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < New_s1Count && Old_s1Count <= New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_s1ContainsX
root implication check-- featurePos: (Old_s1ContainsX && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)))

root implication check-- split pred: Not(Old_s1ContainsX)
root implication check-- featurePos: ((!(Old_s1ContainsX)))
root implication check-- featureNeg: (Old_s1ContainsX && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred Not(New_s1ContainsX): houdini Called with 0 feature vectors
root from implication check-- split from pred Not(New_s1ContainsX): not expressive in with conjunctions
root from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root implication check-- split pred: Old_x != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == Old_s1Count && Old_s1Count <= Old_x)

root implication check-- split pred: Old_x == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_x == Old_s1Count && Old_s1Count <= Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred Old_Top == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_Top == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Top == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_x == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_x == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root implication check-- split pred: Old_x != Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)

root implication check-- split pred: Old_x == Old_Top
root implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root implication check-- split pred: Old_x != New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)

root implication check-- split pred: Old_x == New_Top
root implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root implication check-- split pred: Old_x < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == Old_s1Count && Old_s1Count <= Old_x)

root from implication check-- split from pred Old_s1Count < Old_x: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < Old_x: not expressive in with conjunctions
root implication check-- split pred: Old_s1Count <= Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_x == Old_s1Count && Old_s1Count <= Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count <= Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count <= Old_Top: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count <= New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count <= New_Top: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count < Old_x: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_x: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count <= Old_x: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count <= Old_x: not expressive in with conjunctions
root from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_x < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_x < Old_Top: not expressive in with conjunctions
root implication check-- split pred: Old_x <= Old_Top
root implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root implication check-- split pred: Old_Top < Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)

root from implication check-- split from pred Old_x < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_x < New_Top: not expressive in with conjunctions
root implication check-- split pred: Old_x <= New_Top
root implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root implication check-- split pred: New_Top < Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 == Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)

root implication check-- split pred: 0 == Old_x
root implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root from implication check-- split from pred 1 < Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root implication check-- split pred: 0 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 <= Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 <= Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 0 < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 < Old_x: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < Old_x: not expressive in with conjunctions
root implication check-- split pred: 1 <= Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)

root implication check-- split pred: 0 < Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x)

Predicate: root for k = 2 : Old_s1ContainsX

Houdini AlwaysTrue for k=1 : (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root Left from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x != Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x != New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x != New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_s1Count
root Left implication check-- featurePos: (1 == Old_s1Count)
root Left implication check-- featureNeg: (1 < Old_s1Count)

root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_x: not expressive in with conjunctions
root Left implication check-- split pred: 1 < Old_s1Count
root Left implication check-- featurePos: (1 < Old_s1Count)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < Old_x: not expressive in with conjunctions
Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right implication check-- split pred: Old_x != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_x == Old_s1Count && Old_s1Count <= Old_x)

root Right implication check-- split pred: Old_x == Old_s1Count
root Right implication check-- featurePos: (Old_x == Old_s1Count && Old_s1Count <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right from implication check-- split from pred Old_Top == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred New_Top == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Top == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_x == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_x == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: Old_x != Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right implication check-- split pred: Old_x == Old_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right implication check-- split pred: Old_x != New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right implication check-- split pred: Old_x == New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right implication check-- split pred: Old_x < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_x == Old_s1Count && Old_s1Count <= Old_x)

root Right from implication check-- split from pred Old_s1Count < Old_x: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < Old_x: not expressive in with conjunctions
root Right implication check-- split pred: Old_s1Count <= Old_x
root Right implication check-- featurePos: (Old_x == Old_s1Count && Old_s1Count <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count <= Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_s1Count <= New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count <= New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_s1Count < Old_x: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_x: not expressive in with conjunctions
root Right from implication check-- split from pred New_s1Count <= Old_x: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count <= Old_x: not expressive in with conjunctions
root Right from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_x < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_x < Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: Old_x <= Old_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right implication check-- split pred: Old_Top < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right from implication check-- split from pred Old_x < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_x < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: Old_x <= New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right implication check-- split pred: New_Top < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x == Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_s1Count <= Old_x && Old_Top < Old_x && New_Top < Old_x && 1 == Old_s1Count && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right implication check-- split pred: 0 == Old_x
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)

root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_x < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_x == Old_s1Count && Old_s1Count <= Old_x)

root Right implication check-- split pred: 1 <= Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right implication check-- split pred: 0 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 <= Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 <= Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 0 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 < Old_x: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < Old_x: not expressive in with conjunctions
root Right implication check-- split pred: 1 <= Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

root Right implication check-- split pred: 0 < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < Old_x && New_Top < Old_x && 1 == Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_x)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : Old_s1ContainsX

Predicate root : Not(Old_s1ContainsX)

Predicate root Right : Old_s1ContainsX

Predicate root : Not(Old_s1ContainsX)

Predicate root Right : Old_s1ContainsX

Final Tree ====
Round: 1
Predicate root : Not(Old_s1ContainsX)

Predicate root Right : Old_s1ContainsX

Houdini AlwaysTrue for k=2 : (New_s1ContainsX && New_s1Count == Old_s1Count + 1 && New_s1Count != Old_s1Count && Old_s1Count < New_s1Count && Old_s1Count <= New_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root implication check-- split pred: Old_s1ContainsX
root implication check-- featurePos: (Old_s1ContainsX && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Not(Old_s1ContainsX)
root implication check-- featurePos: ((!(Old_s1ContainsX)) && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_s1ContainsX && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred Not(New_s1ContainsX): houdini Called with 0 feature vectors
root from implication check-- split from pred Not(New_s1ContainsX): not expressive in with conjunctions
root from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count)

root implication check-- split pred: Old_x != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count)

root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: Old_x != New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x == New_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_x != Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_x != Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: Old_x == Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x != Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_x != New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: Old_x == New_Top
root implication check-- featurePos: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_s1Count <= Old_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top <= Old_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_s1Count < Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_s1Count <= Old_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top <= Old_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_s1Count < New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root implication check-- split pred: Old_x < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x <= Old_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_s1Count < Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: Old_s1Count <= Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top <= New_s1Count
root implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_s1Count < Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top <= New_s1Count
root implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_s1Count < New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root implication check-- split pred: Old_x < New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x <= New_s1Count
root implication check-- featurePos: (Old_x <= New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_s1Count < Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= New_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_x < Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)

root implication check-- split pred: Old_x <= Old_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top < Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)

root implication check-- split pred: Old_Top <= Old_x
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_x < New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: Old_x <= New_Top
root implication check-- featurePos: (Old_x <= New_s1Count && Old_x <= New_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top < Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x <= New_s1Count && Old_x <= New_Top)

root implication check-- split pred: New_Top <= Old_x
root implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 == Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: (Old_x <= New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: 0 == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count)

root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top)

root from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: 0 == Old_x
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 1 <= Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: 0 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: 1 < Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 0 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_s1ContainsX && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root implication check-- split pred: -1 < Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_s1ContainsX && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root implication check-- split pred: -1 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_s1ContainsX && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root implication check-- split pred: 1 < New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root implication check-- split pred: 0 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: -1 < New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: -1 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: 1 < Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x <= New_s1Count)

root implication check-- split pred: 1 <= Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)

root implication check-- split pred: 0 < Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)

root implication check-- split pred: 0 <= Old_x
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: -1 < Old_x
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: -1 <= Old_x
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

Predicate: root for k = 2 : Old_s1ContainsX

Houdini AlwaysTrue for k=1 : (New_Top == Old_Top && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root Left from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x != Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x != New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x != New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_s1Count
root Left implication check-- featurePos: (1 == Old_s1Count)
root Left implication check-- featureNeg: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_x: not expressive in with conjunctions
root Left implication check-- split pred: 0 == Old_x
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left implication check-- split pred: 1 < Old_s1Count
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 <= Old_Top
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left implication check-- split pred: -1 < Old_Top
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left implication check-- split pred: -1 <= Old_Top
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 <= New_Top
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left implication check-- split pred: -1 < New_Top
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left implication check-- split pred: -1 <= New_Top
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left from implication check-- split from pred 1 < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < Old_x: not expressive in with conjunctions
root Left implication check-- split pred: 0 <= Old_x
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left implication check-- split pred: -1 < Old_x
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

root Left implication check-- split pred: -1 <= Old_x
root Left implication check-- featurePos: (0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (1 == Old_s1Count)

Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (New_Top == Old_Top && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
Houdini AlwaysTrue for k=1 : (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && New_Top <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && New_Top <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top)

root Right implication check-- split pred: Old_x != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top)
root Right implication check-- featureNeg: (Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x == Old_s1Count
root Right implication check-- featurePos: (Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top)

root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root Right implication check-- split pred: Old_x != New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: Old_x != Old_Top
root Right implication check-- featurePos: (Old_x != Old_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x == Old_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x != Old_Top)

root Right implication check-- split pred: Old_x != New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: Old_x == New_Top
root Right implication check-- featurePos: (Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_x <= New_s1Count && Old_x <= New_Top)

root Right implication check-- split pred: Old_Top <= Old_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top)

root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && Old_x <= New_s1Count && Old_x <= New_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x && 0 == Old_Top)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top <= Old_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_s1Count < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x && 0 == Old_Top)

root Right implication check-- split pred: Old_x < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)
root Right implication check-- featureNeg: (Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x <= Old_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_s1Count < Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)

root Right implication check-- split pred: Old_s1Count <= Old_x
root Right implication check-- featurePos: (Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_s1Count < New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: Old_x < New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x <= New_s1Count
root Right implication check-- featurePos: (Old_x <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_s1Count < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: Old_x < Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x <= Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top < Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)

root Right implication check-- split pred: Old_Top <= Old_x
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top)

root Right implication check-- split pred: Old_x < New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: Old_x <= New_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && Old_x <= New_s1Count && Old_x <= New_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_x <= New_s1Count && Old_x <= New_Top)

root Right implication check-- split pred: New_Top <= Old_x
root Right implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x <= New_s1Count)

root Right implication check-- split pred: 0 == Old_s1Count
root Right implication check-- featurePos: (Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count)

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_x <= New_s1Count && Old_x <= New_Top)

root Right from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 1 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root Right implication check-- split pred: 0 == Old_x
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top)

root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 1 <= Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: 0 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: 1 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top)

root Right implication check-- split pred: 1 < New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: 0 <= New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top)

root Right implication check-- split pred: -1 < New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top)

root Right implication check-- split pred: -1 <= New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top)

root Right implication check-- split pred: 1 < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x <= New_s1Count)

root Right implication check-- split pred: 1 <= Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)

root Right implication check-- split pred: 0 < Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)

root Right implication check-- split pred: 0 <= Old_x
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top)

root Right implication check-- split pred: -1 < Old_x
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top)

root Right implication check-- split pred: -1 <= Old_x
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
Predicate root : Old_s1ContainsX

Predicate root : -1 <= Old_Top

Predicate root Right : Old_s1ContainsX

Predicate root : -1 <= Old_Top

Predicate root Right : Old_s1ContainsX

Predicate root : Old_s1ContainsX

Predicate root Right : -1 <= Old_Top

Predicate root Right Right : 1 < Old_x

Predicate root : Old_s1ContainsX

Predicate root Right : -1 <= Old_Top

Predicate root Right Right : 1 < Old_x

Final Tree ====
Round: 2
Predicate root : Old_s1ContainsX

Predicate root Right : -1 <= Old_Top

Predicate root Right Right : 1 < Old_x

Houdini AlwaysTrue for k=2 : (New_s1ContainsX && New_s1Count == Old_s1Count + 1 && New_s1Count != Old_s1Count && Old_s1Count < New_s1Count && Old_s1Count <= New_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root implication check-- split pred: Old_s1ContainsX
root implication check-- featurePos: (Old_s1ContainsX && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)))

root implication check-- split pred: Not(Old_s1ContainsX)
root implication check-- featurePos: ((!(Old_s1ContainsX)))
root implication check-- featureNeg: (Old_s1ContainsX && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred Not(New_s1ContainsX): houdini Called with 0 feature vectors
root from implication check-- split from pred Not(New_s1ContainsX): not expressive in with conjunctions
root from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count)

root implication check-- split pred: Old_x != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count)

root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root implication check-- split pred: Old_x != New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x == New_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: Old_x != Old_Top
root implication check-- featurePos: (Old_x != Old_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: Old_x == Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)
root implication check-- featureNeg: (Old_x != Old_Top)

root implication check-- split pred: Old_x != New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x == New_Top && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: Old_x == New_Top
root implication check-- featurePos: (Old_x == New_Top && Old_x <= New_Top && New_Top <= Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)
root implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top <= Old_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: (Old_s1Count <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: (Old_s1Count <= New_Top && Old_x <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top <= Old_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_s1Count < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: (Old_s1Count <= New_Top && Old_x <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: Old_x < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: (Old_s1Count <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x <= Old_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_s1Count < Old_x
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root implication check-- split pred: Old_s1Count <= Old_x
root implication check-- featurePos: (Old_s1Count <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top <= New_s1Count
root implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top <= New_s1Count
root implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_s1Count < New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: Old_x < New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x <= New_s1Count
root implication check-- featurePos: (Old_x <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_s1Count < Old_x
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_x
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= New_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_x < Old_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)

root implication check-- split pred: Old_x <= Old_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top < Old_x
root implication check-- featurePos: (Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)

root implication check-- split pred: Old_Top <= Old_x
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_x < New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top <= Old_x)

root implication check-- split pred: Old_x <= New_Top
root implication check-- featurePos: (Old_x <= New_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top < Old_x
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x <= New_Top)

root implication check-- split pred: New_Top <= Old_x
root implication check-- featurePos: (New_Top <= Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 == Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 == Old_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count)

root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count)

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count)

root from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_x
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 1 == Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root implication check-- split pred: 0 == Old_x
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top <= Old_x)

root implication check-- split pred: 1 <= Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 0 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 0 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)

root implication check-- split pred: -1 < Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)

root implication check-- split pred: -1 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)

root implication check-- split pred: 1 < New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 0 <= New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root implication check-- split pred: -1 < New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root implication check-- split pred: -1 <= New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root implication check-- split pred: 1 < Old_x
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x <= New_s1Count)

root implication check-- split pred: 1 <= Old_x
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top)

root implication check-- split pred: 0 < Old_x
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top)

root implication check-- split pred: 0 <= Old_x
root implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: -1 < Old_x
root implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: -1 <= Old_x
root implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

Predicate: root for k = 2 : Old_s1ContainsX

Houdini AlwaysTrue for k=1 : (New_Top == Old_Top && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root Left from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_x == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_x == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: Old_x != Old_Top
root Left implication check-- featurePos: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)

root Left implication check-- split pred: Old_x == Old_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)
root Left implication check-- featureNeg: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_x != New_Top
root Left implication check-- featurePos: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)

root Left implication check-- split pred: Old_x == New_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)
root Left implication check-- featureNeg: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_s1Count < Old_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_s1Count < New_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_s1Count <= New_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_x < Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_x <= Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_s1Count < Old_x
root Left implication check-- featurePos: (Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top)

root Left implication check-- split pred: Old_s1Count <= Old_x
root Left implication check-- featurePos: (Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top)

root Left implication check-- split pred: Old_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_s1Count < Old_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_s1Count < New_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= New_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_x < New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_x <= New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_s1Count < Old_x
root Left implication check-- featurePos: (Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top)

root Left implication check-- split pred: New_s1Count <= Old_x
root Left implication check-- featurePos: (Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top)

root Left from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Left implication check-- split pred: Old_x < Old_Top
root Left implication check-- featurePos: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 == Old_Top && 1 == New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: Old_x <= Old_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top)
root Left implication check-- featureNeg: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_Top < Old_x
root Left implication check-- featurePos: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x <= Old_Top && Old_x <= New_Top)

root Left implication check-- split pred: Old_Top <= Old_x
root Left implication check-- featurePos: (Old_Top <= Old_x && New_Top <= Old_x)
root Left implication check-- featureNeg: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 == Old_Top && 1 == New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_x < New_Top
root Left implication check-- featurePos: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 == Old_Top && 1 == New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: Old_x <= New_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top)
root Left implication check-- featureNeg: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_Top < Old_x
root Left implication check-- featurePos: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x <= Old_Top && Old_x <= New_Top)

root Left implication check-- split pred: New_Top <= Old_x
root Left implication check-- featurePos: (Old_Top <= Old_x && New_Top <= Old_x)
root Left implication check-- featureNeg: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 == Old_Top && 1 == New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_s1Count
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)
root Left implication check-- featureNeg: (1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_Top
root Left implication check-- featurePos: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 == Old_Top && 1 == New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x <= Old_Top && Old_x <= New_Top)

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Top
root Left implication check-- featurePos: (Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 == Old_Top && 1 == New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x <= Old_Top && Old_x <= New_Top)

root Left from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_x: not expressive in with conjunctions
root Left implication check-- split pred: 0 == Old_x
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 1 < Old_s1Count
root Left implication check-- featurePos: (1 < Old_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: 1 < Old_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 0 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: -1 < Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: -1 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: 1 < New_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < Old_x && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 1 <= New_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 0 < New_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 0 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: -1 < New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: -1 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: 1 < Old_x
root Left implication check-- featurePos: (Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top)

root Left implication check-- split pred: 1 <= Old_x
root Left implication check-- featurePos: (Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top)

root Left implication check-- split pred: 0 < Old_x
root Left implication check-- featurePos: (Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top)

root Left implication check-- split pred: 0 <= Old_x
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: -1 < Old_x
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: -1 <= Old_x
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (New_Top == Old_Top && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top)

root Right implication check-- split pred: Old_x != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x == Old_s1Count
root Right implication check-- featurePos: (Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root Right implication check-- split pred: Old_x != New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: Old_x != Old_Top
root Right implication check-- featurePos: (Old_x != Old_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x == Old_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x != Old_Top)

root Right implication check-- split pred: Old_x != New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: Old_x == New_Top
root Right implication check-- featurePos: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top <= Old_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_s1Count <= New_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top <= Old_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_s1Count < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (Old_s1Count <= New_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: Old_x < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x <= Old_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_s1Count < Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root Right implication check-- split pred: Old_s1Count <= Old_x
root Right implication check-- featurePos: (Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_s1Count < New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: Old_x < New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x <= New_s1Count
root Right implication check-- featurePos: (Old_x <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_s1Count < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_x < Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x <= Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top < Old_x
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top <= Old_x
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_x < New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: Old_x <= New_Top
root Right implication check-- featurePos: (Old_x <= New_s1Count && Old_x <= New_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x <= New_s1Count && Old_x <= New_Top)

root Right implication check-- split pred: New_Top <= Old_x
root Right implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x <= New_s1Count)

root Right implication check-- split pred: 0 == Old_s1Count
root Right implication check-- featurePos: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count)

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_x <= New_s1Count)

root Right from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 1 == Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root Right implication check-- split pred: 0 == Old_x
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 1 <= Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: 0 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: 1 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 0 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: -1 < Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: -1 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: 1 < New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 0 <= New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: -1 < New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: -1 <= New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: 1 < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x <= New_s1Count)

root Right implication check-- split pred: 1 <= Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top)

root Right implication check-- split pred: 0 < Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top)

root Right implication check-- split pred: 0 <= Old_x
root Right implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: -1 < Old_x
root Right implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: -1 <= Old_x
root Right implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : Old_s1ContainsX

Predicate root : Old_s1ContainsX

Predicate root Right : 0 == Old_Top

Predicate root : Old_s1ContainsX

Predicate root Right : 0 == Old_Top

Predicate root : Old_s1ContainsX

Predicate root Right : Old_x <= New_Top

Predicate root Right Right : 0 == Old_Top

Predicate root : Old_s1ContainsX

Predicate root Right : Old_x <= New_Top

Predicate root Right Right : 0 == Old_Top

Predicate root : Old_s1ContainsX

Predicate root Right : 0 == Old_Top

Predicate root Right Right : Old_Top < Old_x

Predicate root Right Right Right : Old_x <= New_Top

Predicate root : Old_s1ContainsX

Predicate root Right : 0 == Old_Top

Predicate root Right Right : Old_Top < Old_x

Predicate root Right Right Right : Old_x <= New_Top

Final Tree ====
Round: 3
Predicate root : Old_s1ContainsX

Predicate root Right : 0 == Old_Top

Predicate root Right Right : Old_Top < Old_x

Predicate root Right Right Right : Old_x <= New_Top

Houdini AlwaysTrue for k=2 : (New_s1ContainsX && New_s1Count == Old_s1Count + 1 && New_s1Count != Old_s1Count && Old_s1Count < New_s1Count && Old_s1Count <= New_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root implication check-- split pred: Old_s1ContainsX
root implication check-- featurePos: (Old_s1ContainsX && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)))

root implication check-- split pred: Not(Old_s1ContainsX)
root implication check-- featurePos: ((!(Old_s1ContainsX)))
root implication check-- featureNeg: (Old_s1ContainsX && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred Not(New_s1ContainsX): houdini Called with 0 feature vectors
root from implication check-- split from pred Not(New_s1ContainsX): not expressive in with conjunctions
root from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count)
root implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count)
root implication check-- featureNeg: (New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: (New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count)

root implication check-- split pred: Old_x != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count)
root implication check-- featureNeg: (Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x == Old_s1Count
root implication check-- featurePos: (Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count)

root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top == New_s1Count && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top == New_s1Count && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && Old_x == New_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count)

root implication check-- split pred: Old_x != New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x == New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: Old_x != Old_Top
root implication check-- featurePos: (Old_x != Old_Top)
root implication check-- featureNeg: (New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: Old_x == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)
root implication check-- featureNeg: (Old_x != Old_Top)

root implication check-- split pred: Old_x != New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x == New_Top && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: Old_x == New_Top
root implication check-- featurePos: (Old_x == New_Top && Old_x <= New_Top && New_Top <= Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)
root implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top <= Old_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: (Old_s1Count <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: (Old_s1Count <= New_Top && Old_x <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top <= Old_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_s1Count < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: (Old_s1Count <= New_Top && Old_x <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: Old_x < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: (Old_s1Count <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x <= Old_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_s1Count < Old_x
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root implication check-- split pred: Old_s1Count <= Old_x
root implication check-- featurePos: (Old_s1Count <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top <= New_s1Count
root implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top <= New_s1Count
root implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_s1Count < New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: Old_x < New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_x <= New_s1Count
root implication check-- featurePos: (Old_x <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_s1Count < Old_x
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_x
root implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top <= New_Top)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_Top != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_Top != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top <= Old_Top)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_x < Old_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != Old_Top && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)

root implication check-- split pred: Old_x <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: Old_Top < Old_x
root implication check-- featurePos: (Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top)

root implication check-- split pred: Old_Top <= Old_x
root implication check-- featurePos: (Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != Old_Top && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_x < New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top <= Old_x)

root implication check-- split pred: Old_x <= New_Top
root implication check-- featurePos: (Old_x <= New_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root implication check-- split pred: New_Top < Old_x
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x <= New_Top)

root implication check-- split pred: New_Top <= Old_x
root implication check-- featurePos: (New_Top <= Old_x)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 == Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == Old_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: true

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: true

root from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_x: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_x
root implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 1 == Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == Old_x: not expressive in with conjunctions
root implication check-- split pred: 0 == Old_x
root implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && 0 == Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: true

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top <= Old_x)

root implication check-- split pred: 1 <= Old_s1Count
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 0 < Old_s1Count
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: ((!(Old_s1ContainsX)) && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 0 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)

root implication check-- split pred: -1 < Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)

root implication check-- split pred: -1 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x)

root implication check-- split pred: 1 < New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: (Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root implication check-- split pred: 0 <= New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root implication check-- split pred: -1 < New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root implication check-- split pred: -1 <= New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root implication check-- split pred: 1 < Old_x
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Top == Old_Top && Old_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (Old_x <= New_s1Count)

root implication check-- split pred: 1 <= Old_x
root implication check-- featurePos: (Old_Top <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root implication check-- split pred: 0 < Old_x
root implication check-- featurePos: (Old_Top <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root implication check-- split pred: 0 <= Old_x
root implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: -1 < Old_x
root implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

root implication check-- split pred: -1 <= Old_x
root implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x)

Predicate: root for k = 2 : Old_s1ContainsX

Houdini AlwaysTrue for k=1 : (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)

root Left from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count && 1 == Old_Top && 1 == New_Top && 1 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_Top == Old_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count && 1 == Old_Top && 1 == New_Top && 1 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count)

root Left implication check-- split pred: New_Top != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count && 1 == Old_Top && 1 == New_Top && 1 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_Top == Old_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count && 1 == Old_Top && 1 == New_Top && 1 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count)

root Left implication check-- split pred: Old_x != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count)
root Left implication check-- featureNeg: (Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_x == Old_s1Count
root Left implication check-- featurePos: (Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count)

root Left implication check-- split pred: Old_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count)

root Left implication check-- split pred: New_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count)

root Left implication check-- split pred: Old_x != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x == New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_x == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_x == New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count)

root Left from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: Old_x != Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != Old_Top && Old_x != New_Top && 1 < Old_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)

root Left implication check-- split pred: Old_x == Old_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != Old_Top && Old_x != New_Top && 1 < Old_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_x != New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != Old_Top && Old_x != New_Top && 1 < Old_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)

root Left implication check-- split pred: Old_x == New_Top
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != Old_Top && Old_x != New_Top && 1 < Old_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_s1Count < Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_s1Count < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_s1Count <= New_Top
root Left implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_x < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_x <= Old_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_s1Count < Old_x
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root Left implication check-- split pred: Old_s1Count <= Old_x
root Left implication check-- featurePos: (Old_s1Count <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root Left implication check-- split pred: Old_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_s1Count < Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_s1Count < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_x < New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_x <= New_s1Count
root Left implication check-- featurePos: (Old_x <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_s1Count < Old_x
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count < Old_x && New_s1Count <= Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= Old_x
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root Left from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Left implication check-- split pred: Old_x < Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_x <= New_s1Count && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 < Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: Old_x <= Old_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 < Old_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_Top < Old_x
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 < Old_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x <= Old_Top && Old_x <= New_Top)

root Left implication check-- split pred: Old_Top <= Old_x
root Left implication check-- featurePos: (Old_Top <= Old_x && New_Top <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_x <= New_s1Count && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 < Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: Old_x < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_x <= New_s1Count && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 < Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: Old_x <= New_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 < Old_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left implication check-- split pred: New_Top < Old_x
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 < Old_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x <= Old_Top && Old_x <= New_Top)

root Left implication check-- split pred: New_Top <= Old_x
root Left implication check-- featurePos: (Old_Top <= Old_x && New_Top <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != Old_Top && Old_x != New_Top && Old_x <= New_s1Count && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 1 < Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_s1Count
root Left implication check-- featurePos: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && 1 < Old_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count)

root Left from implication check-- split from pred 0 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_x <= New_Top && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count)

root Left from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_x
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count)

root Left from implication check-- split from pred 0 == Old_x: not expressive in with conjunctions
root Left implication check-- split pred: 0 == Old_x
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && 0 == Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: true

root Left implication check-- split pred: 1 < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && 1 < Old_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_x == Old_Top && Old_x == New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: 1 < Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 0 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: -1 < Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: -1 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 1 < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= Old_x && Old_x <= Old_Top && Old_x <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 1 <= New_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 0 < New_Top
root Left implication check-- featurePos: (Old_x <= Old_Top && Old_x <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 0 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: -1 < New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: -1 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= Old_x && New_Top <= Old_x)

root Left implication check-- split pred: 1 < Old_x
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_s1Count <= Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root Left implication check-- split pred: 1 <= Old_x
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root Left implication check-- split pred: 0 < Old_x
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root Left implication check-- split pred: 0 <= Old_x
root Left implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: -1 < Old_x
root Left implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

root Left implication check-- split pred: -1 <= Old_x
root Left implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == Old_Top && Old_x == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 1 == Old_s1Count)

Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top != New_s1Count && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (New_Top == Old_s1Count && Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x == New_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top)

root Right implication check-- split pred: Old_x != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x == Old_s1Count
root Right implication check-- featurePos: (Old_x == Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root Right implication check-- split pred: Old_x != New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: Old_x != Old_Top
root Right implication check-- featurePos: (Old_x != Old_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x == Old_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x == Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x <= Old_Top && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x != Old_Top)

root Right implication check-- split pred: Old_x != New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: Old_x == New_Top
root Right implication check-- featurePos: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred New_s1Count <= Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count <= Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top <= Old_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_s1Count <= New_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top <= Old_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_s1Count < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (Old_s1Count <= New_Top && Old_x <= New_s1Count && Old_x <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: Old_x < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x <= Old_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_s1Count < Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root Right implication check-- split pred: Old_s1Count <= Old_x
root Right implication check-- featurePos: (Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_s1Count < New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: Old_x < New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x <= New_s1Count
root Right implication check-- featurePos: (Old_x <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_s1Count < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= Old_x && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_Top)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_x < Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_x <= Old_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: Old_Top < Old_x
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top <= Old_x
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_x < New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: Old_x <= New_Top
root Right implication check-- featurePos: (Old_x <= New_s1Count && Old_x <= New_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: New_Top < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x <= New_s1Count && Old_x <= New_Top)

root Right implication check-- split pred: New_Top <= Old_x
root Right implication check-- featurePos: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x <= New_s1Count)

root Right implication check-- split pred: 0 == Old_s1Count
root Right implication check-- featurePos: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_x == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 0 == New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count)

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && Old_x == New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_x <= New_s1Count && New_s1Count <= Old_x && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 == Old_x && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_x <= New_s1Count)

root Right from implication check-- split from pred -1 == Old_x: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_x: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 1 == Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count)

root Right implication check-- split pred: 0 == Old_x
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_x != New_s1Count && Old_s1Count <= New_Top && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && 0 == Old_x && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 1 <= Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: 0 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x == New_Top && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count)

root Right implication check-- split pred: 1 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_x <= Old_s1Count && New_s1Count <= Old_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && 0 == Old_x && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 0 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: -1 < Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: -1 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_x == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)

root Right implication check-- split pred: 1 < New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_x < Old_s1Count && Old_x <= Old_s1Count && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x < New_Top && Old_x <= New_Top && 0 == Old_x && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= New_Top && Old_x <= New_s1Count && Old_Top <= New_Top && Old_x <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_x)

root Right implication check-- split pred: 0 <= New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: -1 < New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: -1 <= New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top <= Old_Top && New_Top <= Old_x)

root Right implication check-- split pred: 1 < Old_x
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top == Old_Top && Old_x != Old_Top && Old_x != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_s1Count < Old_x && Old_s1Count <= Old_x && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < Old_x && New_s1Count <= Old_x && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top < Old_x && New_Top <= Old_x && 1 == Old_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_x <= New_s1Count)

root Right implication check-- split pred: 1 <= Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top)

root Right implication check-- split pred: 0 < Old_x
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && Old_x != Old_Top && Old_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && Old_Top < Old_x && Old_Top <= Old_x && New_Top <= Old_x && 1 <= Old_x && 0 < Old_x && 0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_x != New_s1Count && Old_x <= Old_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && Old_x <= New_Top)

root Right implication check-- split pred: 0 <= Old_x
root Right implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: -1 < Old_x
root Right implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: -1 <= Old_x
root Right implication check-- featurePos: (0 <= Old_x && -1 < Old_x && -1 <= Old_x)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_x != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_x != New_s1Count && New_Top != Old_Top && Old_x != Old_Top && Old_x == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_x < Old_s1Count && Old_x <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && Old_x < New_s1Count && Old_x <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && Old_x < Old_Top && Old_x <= Old_Top && Old_x <= New_Top && New_Top <= Old_x && 0 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : Old_s1ContainsX

Predicate root : Old_s1ContainsX

Predicate root Right : Not(Old_s1ContainsX)

Predicate root : Old_s1ContainsX

Predicate root Right : Not(Old_s1ContainsX)

Final Tree ====
Round: 4
Predicate root : Old_s1ContainsX

Predicate root Right : Not(Old_s1ContainsX)

===== Final Result for PUT_EnqueueContract

postcondition: 
((New_s1ContainsX && 0 < New_s1Count && -1 < New_s1Count && -1 < Old_s1Count && 0 <= New_s1Count && 0 <= Old_s1Count && 1 <= New_s1Count && -1 <= New_s1Count && -1 <= Old_s1Count && Old_s1Count < New_s1Count && New_s1Count != Old_s1Count && Old_s1Count <= New_s1Count && New_s1Count == Old_s1Count + 1) && (((!(Old_s1ContainsX)) ||   ((Old_s1ContainsX && 1 < New_s1Count && 0 < Old_s1Count && 1 <= Old_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top) && (((!((!(Old_s1ContainsX)))) || false) && ((!(Old_s1ContainsX)) || true)))) && (Old_s1ContainsX || ((!(Old_s1ContainsX))))))
rounds: 5

simplified post: 
((New_s1ContainsX && New_s1Count == 1 + Old_s1Count && (!(Old_s1ContainsX)) && New_s1Count >= 1) || (New_s1ContainsX && New_s1Count == 1 + Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && Old_s1Count >= 1))
pex time: 240.85186767578125

learn time: 5263.253844261169

Samples: 44

PUT: PUT_DequeueContract

Houdini AlwaysTrue for k=2 : (New_s1Count == Old_s1Count - 1 && New_Ret == Old_Top && New_s1Count != Old_s1Count && Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_s1Count < Old_s1Count && New_s1Count <= Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Ret <= Old_Top && Old_Top <= New_Ret && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1ContainsNewRet
root implication check-- featurePos: (New_s1ContainsNewRet && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)))

root implication check-- split pred: Not(New_s1ContainsNewRet)
root implication check-- featurePos: ((!(New_s1ContainsNewRet)))
root implication check-- featureNeg: (New_s1ContainsNewRet && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_Top == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Top == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_Ret == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Ret != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root implication check-- split pred: New_Ret == New_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root implication check-- split pred: New_Ret != New_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root implication check-- split pred: New_Ret == New_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count <= Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count <= Old_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count <= New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count <= New_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_Ret: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count <= New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count <= New_Ret: not expressive in with conjunctions
root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root from implication check-- split from pred New_s1Count < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < New_Ret: not expressive in with conjunctions
root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)

root from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root implication check-- split pred: New_Ret < New_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root implication check-- split pred: New_Ret <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: New_Top < New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root implication check-- split pred: New_Top <= New_Ret
root implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 1 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)

root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root implication check-- split pred: 1 <= New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root implication check-- split pred: 0 < New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root from implication check-- split from pred 1 < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

Predicate: root for k = 2 : New_s1ContainsNewRet

Houdini AlwaysTrue for k=1 : (New_Ret == 0 && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Left from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Ret == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Ret == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret == New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: New_Top != Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Left implication check-- split pred: New_Top == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)

root Left from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret != New_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Left implication check-- split pred: New_Ret == New_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)

root Left from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_Top <= Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)

root Left implication check-- split pred: Old_Top < New_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Left from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret < New_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Left from implication check-- split from pred New_Top < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: New_Top <= New_Ret
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)

root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_s1Count
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 1 == New_s1Count && 0 == New_Top)
root Left implication check-- featureNeg: (1 < New_s1Count)

root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)

root Left from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: 1 < New_s1Count
root Left implication check-- featurePos: (1 < New_s1Count)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 1 == New_s1Count && 0 == New_Top)

root Left from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 <= New_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Left implication check-- split pred: 0 < New_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_Top && New_Ret < New_Top && 1 == New_Top && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Left from implication check-- split from pred 1 < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < New_Ret: not expressive in with conjunctions
Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (New_Ret == 0 && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
Houdini AlwaysTrue for k=1 : (New_Top == Old_s1Count - Old_Top - Old_Top - Old_Top - 1)

root Right from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred New_Top == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Top == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred New_Ret == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root Right implication check-- featureNeg: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)

root Right implication check-- split pred: New_Ret != New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root Right implication check-- split pred: New_Ret == New_s1Count
root Right implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret != New_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root Right implication check-- split pred: New_Ret == New_Top
root Right implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count <= Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count <= New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count <= New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count < New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_Ret: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count <= New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count <= New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root Right from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root Right implication check-- featureNeg: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root Right from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)

root Right implication check-- split pred: New_Ret < New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root Right from implication check-- split from pred New_s1Count < New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: New_s1Count <= New_Ret
root Right implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root Right implication check-- featureNeg: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_s1Count <= New_Top && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_s1Count <= New_Top && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)

root Right from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret < New_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_s1Count <= New_Top && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Right implication check-- split pred: New_Ret <= New_Top
root Right implication check-- featurePos: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)

root Right implication check-- split pred: New_Top < New_Ret
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root Right implication check-- featureNeg: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root Right implication check-- split pred: New_Top <= New_Ret
root Right implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_s1Count <= New_Top && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_s1Count <= New_Top && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Right implication check-- split pred: 0 == New_s1Count
root Right implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root Right implication check-- featureNeg: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_s1Count <= New_Top && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_s1Count <= New_Top && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)

root Right from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Ret
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root Right implication check-- featureNeg: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root Right implication check-- split pred: 0 == New_Ret
root Right implication check-- featurePos: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root Right implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)

root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root Right implication check-- featureNeg: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root Right implication check-- split pred: 1 <= New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root Right implication check-- split pred: 0 < New_s1Count
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Ret < New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Top && 0 == New_Ret)

root Right from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root Right implication check-- featureNeg: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root Right implication check-- featureNeg: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root Right from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_s1Count <= New_Top && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_s1Count <= New_Top && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top)

root Right from implication check-- split from pred 1 < New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: 1 <= New_Ret
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root Right implication check-- featureNeg: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root Right implication check-- split pred: 0 < New_Ret
root Right implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Ret && 0 < New_Ret)
root Right implication check-- featureNeg: (New_Top == New_s1Count && New_s1Count <= New_Top && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : (New_Top == Old_s1Count - Old_Top - Old_Top - Old_Top - 1)
Predicate root : New_s1ContainsNewRet

Predicate root : New_s1ContainsNewRet

Predicate root Right : 0 == New_Top

Predicate root : New_s1ContainsNewRet

Predicate root Right : 0 == New_Top

Predicate root : New_s1ContainsNewRet

Predicate root Right : 0 == New_Top

Predicate root Right Right : New_Top == Old_s1Count - Old_Top - Old_Top - Old_Top - 1

Predicate root : New_s1ContainsNewRet

Predicate root Right : 0 == New_Top

Predicate root Right Right : New_Top == Old_s1Count - Old_Top - Old_Top - Old_Top - 1

Final Tree ====
Round: 1
Predicate root : New_s1ContainsNewRet

Predicate root Right : 0 == New_Top

Predicate root Right Right : New_Top == Old_s1Count - Old_Top - Old_Top - Old_Top - 1

Houdini AlwaysTrue for k=2 : (New_s1Count == Old_s1Count - 1 && New_Ret == Old_Top && New_s1Count != Old_s1Count && Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_s1Count < Old_s1Count && New_s1Count <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_Top && Old_Top <= New_Ret && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root implication check-- split pred: New_s1ContainsNewRet
root implication check-- featurePos: (New_s1ContainsNewRet && New_Top != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)))

root implication check-- split pred: Not(New_s1ContainsNewRet)
root implication check-- featurePos: ((!(New_s1ContainsNewRet)))
root implication check-- featureNeg: (New_s1ContainsNewRet && New_Top != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root from implication check-- split from pred New_Ret == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: (Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Ret != New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == New_s1Count
root implication check-- featurePos: (Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root implication check-- split pred: New_Ret != New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Ret == New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top <= Old_s1Count
root implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Ret < Old_s1Count
root implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= Old_s1Count
root implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_s1Count <= New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top <= New_s1Count
root implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top <= New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= New_s1Count
root implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root implication check-- split pred: New_Ret < New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Ret <= New_Top
root implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top < New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root implication check-- split pred: New_Top <= New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && 1 == New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_Top && 1 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: (1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_Top && 1 == New_Ret && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 1 < Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: -1 < Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: -1 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: (1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: (1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 0 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: -1 < New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: -1 <= New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

Predicate: root for k = 2 : New_s1ContainsNewRet

Houdini AlwaysTrue for k=1 : (New_Top != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Ret == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)

root Left implication check-- split pred: Old_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: New_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)

root Left implication check-- split pred: New_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: New_Ret != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)

root Left implication check-- split pred: New_Ret == New_s1Count
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: New_Top != Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_Top == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)

root Left from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret != New_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_Ret == New_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)

root Left from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)

root Left from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: New_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)

root Left from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_s1Count <= New_Top
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: New_Ret < New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)

root Left from implication check-- split from pred New_s1Count < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: New_s1Count <= New_Ret
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: New_Top < Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)
root Left implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_Top <= Old_Top
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: Old_Top < New_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: Old_Top <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)

root Left from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret < New_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Ret <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)

root Left implication check-- split pred: New_Top < New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)
root Left implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_Top <= New_Ret
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_s1Count
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)

root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_Top
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret)

root Left from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Top && 0 == New_Ret && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Ret
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: 0 == New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)

root Left implication check-- split pred: 1 < New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

root Left from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: 0 < New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: 0 <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)

root Left implication check-- split pred: -1 < New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)

root Left implication check-- split pred: -1 <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count)

root Left from implication check-- split from pred 1 < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: 1 <= New_Ret
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

root Left implication check-- split pred: 0 < New_Ret
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret)

Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (New_Top != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root Right from implication check-- split from pred New_Ret == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Ret != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret == New_s1Count
root Right implication check-- featurePos: (Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret != New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Ret == New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top <= Old_s1Count
root Right implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_Ret < Old_s1Count
root Right implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret <= Old_s1Count
root Right implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: Old_s1Count <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top <= New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < New_Top
root Right implication check-- featurePos: (New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: New_Ret < New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret <= New_s1Count
root Right implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Ret
root Right implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: New_Ret <= New_Top
root Right implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: New_Top <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == New_s1Count && 1 == New_Top && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == New_s1Count
root Right implication check-- featurePos: (1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && New_s1Count <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == New_Ret
root Right implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && New_s1Count <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && New_s1Count <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: 0 <= New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: 1 <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 <= New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : New_s1ContainsNewRet

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret != New_Top

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret != New_Top

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret != New_Top

Predicate root Right Right : 0 < Old_Top

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret != New_Top

Predicate root Right Right : 0 < Old_Top

Final Tree ====
Round: 2
Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Ret != New_Top

Predicate root Right Right : 0 < Old_Top

Houdini AlwaysTrue for k=2 : (New_s1Count == Old_s1Count - 1 && New_Ret == Old_Top && New_s1Count != Old_s1Count && New_s1Count < Old_s1Count && New_s1Count <= Old_s1Count && New_Ret <= Old_Top && Old_Top <= New_Ret && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root implication check-- split pred: New_s1ContainsNewRet
root implication check-- featurePos: (New_s1ContainsNewRet && Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)))

root implication check-- split pred: Not(New_s1ContainsNewRet)
root implication check-- featurePos: ((!(New_s1ContainsNewRet)))
root implication check-- featureNeg: (New_s1ContainsNewRet && Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top != Old_s1Count && New_Top == Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != Old_s1Count && New_Top == Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count)

root implication check-- split pred: New_Ret != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == Old_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != New_s1Count)

root implication check-- split pred: New_Ret != New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root implication check-- split pred: New_Ret != New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Ret == New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top <= Old_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top <= Old_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Ret < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= Old_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top <= New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root implication check-- split pred: New_Ret < New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Ret <= New_Top
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top < New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root implication check-- split pred: New_Top <= New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 == New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count)

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top <= Old_s1Count && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count)

root from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count)

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 1 < Old_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: 1 < New_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_s1Count)

root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 0 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

Predicate: root for k = 2 : New_s1ContainsNewRet

Houdini AlwaysTrue for k=1 : (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Left from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Ret == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: New_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: New_Ret != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret == New_s1Count
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: New_Top != Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Top == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret != New_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Ret == New_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: New_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_s1Count <= New_Top
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: New_Ret < New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)
root Left implication check-- featureNeg: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_s1Count < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: New_s1Count <= New_Ret
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: New_Top < Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top)

root Left implication check-- split pred: New_Top <= Old_Top
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top < New_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: Old_Top <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret < New_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Ret <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top < New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top)

root Left implication check-- split pred: New_Top <= New_Ret
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_s1Count
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_Top
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Ret
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: 0 == New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: 1 < New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && 0 == Old_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: 0 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 < Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 0 < New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 0 <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: -1 < New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: -1 <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left from implication check-- split from pred 1 < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: 1 <= New_Ret
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: 0 < New_Ret
root Left implication check-- featurePos: (Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count)

root Left implication check-- split pred: 0 <= New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 < New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < New_s1Count && New_Top < New_s1Count && New_Ret < New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count)

root Right implication check-- split pred: New_Ret != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != New_s1Count)

root Right implication check-- split pred: New_Ret != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret != New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Ret == New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top <= Old_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top <= Old_s1Count
root Right implication check-- featurePos: (New_Top <= Old_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_Ret < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret <= Old_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top <= New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < New_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: New_Ret < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Ret
root Right implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: New_Ret <= New_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: New_Top <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == New_s1Count && 1 == New_Top && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == New_s1Count
root Right implication check-- featurePos: (1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && New_s1Count <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count)

root Right from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: 0 == New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count)

root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: 0 <= New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: 1 <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 <= New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : New_s1ContainsNewRet

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Final Tree ====
Round: 3
Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Houdini AlwaysTrue for k=2 : (New_s1Count == Old_s1Count - 1 && New_Ret == Old_Top && New_s1Count != Old_s1Count && New_s1Count < Old_s1Count && New_s1Count <= Old_s1Count && New_Ret <= Old_Top && Old_Top <= New_Ret && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root implication check-- split pred: New_s1ContainsNewRet
root implication check-- featurePos: (New_s1ContainsNewRet && New_Top <= Old_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)))

root implication check-- split pred: Not(New_s1ContainsNewRet)
root implication check-- featurePos: ((!(New_s1ContainsNewRet)))
root implication check-- featureNeg: (New_s1ContainsNewRet && New_Top <= Old_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root implication check-- featureNeg: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count)
root implication check-- featureNeg: (New_Top == Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: (New_Top == Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count)

root implication check-- split pred: New_Ret != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root implication check-- featureNeg: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == Old_s1Count
root implication check-- featurePos: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != New_s1Count)

root implication check-- split pred: New_Ret != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root implication check-- split pred: New_Ret != New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Ret == New_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top <= Old_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top <= Old_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Top
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Ret < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= Old_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Ret
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= New_Ret
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top <= New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Ret
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root implication check-- split pred: New_Ret < New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Ret <= New_Top
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top < New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root implication check-- split pred: New_Top <= New_Ret
root implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (New_Top <= Old_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count && 1 == New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (New_Top <= Old_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top <= Old_s1Count && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < New_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 1 < Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: 1 < New_Top
root implication check-- featurePos: (New_Top != New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_s1Count)

root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 0 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

Predicate: root for k = 2 : New_s1ContainsNewRet

Houdini AlwaysTrue for k=1 : (New_Top <= Old_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Left from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top == Old_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Top != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top == Old_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Ret != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret == Old_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)

root Left implication check-- split pred: New_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)

root Left implication check-- split pred: New_Ret != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)

root Left implication check-- split pred: New_Top != Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Top == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret != New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Ret == New_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_s1Count < Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Left implication check-- split pred: Old_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root Left implication check-- split pred: Old_s1Count <= New_Top
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Ret < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret <= Old_s1Count
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_s1Count < New_Ret
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top < Old_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Left implication check-- split pred: Old_s1Count <= New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: Old_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_s1Count < Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= Old_Top
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_s1Count < New_Top
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top < Old_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= New_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Ret < New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret <= New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_s1Count < New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= New_Ret
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_Top < Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Left implication check-- split pred: New_Top <= Old_Top
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: Old_Top <= New_Top
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Ret <= New_Top
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top < New_Ret
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Left implication check-- split pred: New_Top <= New_Ret
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_s1Count
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)

root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Ret
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)

root Left implication check-- split pred: 0 == New_Ret
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 1 < New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: 1 < Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 < Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: 1 < New_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 1 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 0 < New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 0 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: -1 < New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: -1 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 1 < New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 1 <= New_Ret
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 < New_Ret
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 <= New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 < New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (New_Top <= Old_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count)

root Right implication check-- split pred: New_Ret != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != New_s1Count)

root Right implication check-- split pred: New_Ret != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret != New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Ret == New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top <= Old_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top <= Old_s1Count
root Right implication check-- featurePos: (New_Top <= Old_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_Ret < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret <= Old_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top <= New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < New_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: New_Ret < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Ret
root Right implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: New_Ret <= New_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: New_Top <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == New_s1Count && 1 == New_Top && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == New_s1Count
root Right implication check-- featurePos: (1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && New_s1Count <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count)

root Right from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: 0 == New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count)

root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: 0 <= New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: 1 <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 <= New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : New_s1ContainsNewRet

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Predicate root Right Right : 1 == New_Ret

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Predicate root Right Right : 1 == New_Ret

Final Tree ====
Round: 4
Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Predicate root Right Right : 1 == New_Ret

Houdini AlwaysTrue for k=2 : (New_s1Count == Old_s1Count - 1 && New_Ret == Old_Top && New_s1Count != Old_s1Count && New_s1Count < Old_s1Count && New_s1Count <= Old_s1Count && New_Ret <= Old_Top && Old_Top <= New_Ret && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root implication check-- split pred: New_s1ContainsNewRet
root implication check-- featurePos: (New_s1ContainsNewRet && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)))

root implication check-- split pred: Not(New_s1ContainsNewRet)
root implication check-- featurePos: ((!(New_s1ContainsNewRet)))
root implication check-- featureNeg: (New_s1ContainsNewRet && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root implication check-- featureNeg: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count)
root implication check-- featureNeg: (New_Top == Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: (New_Top == Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count)

root implication check-- split pred: New_Ret != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root implication check-- featureNeg: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == Old_s1Count
root implication check-- featurePos: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != New_s1Count)

root implication check-- split pred: New_Ret != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root implication check-- split pred: New_Ret != New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Ret == New_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top <= Old_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top <= Old_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Ret < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= Old_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Ret
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= New_Ret
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top <= New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Ret
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root implication check-- split pred: New_Ret < New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Ret <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top < New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top)

root implication check-- split pred: New_Top <= New_Ret
root implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (1 == New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top <= Old_s1Count && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && New_Top <= Old_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < New_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 1 < Old_Top
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: 1 < New_Top
root implication check-- featurePos: (New_Top != New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_s1Count)

root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 0 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

Predicate: root for k = 2 : New_s1ContainsNewRet

Houdini AlwaysTrue for k=1 : (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Left from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top == Old_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Left implication check-- split pred: New_Top != Old_s1Count
root Left implication check-- featurePos: (New_Top != Old_s1Count)
root Left implication check-- featureNeg: (New_Top == Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top == Old_s1Count
root Left implication check-- featurePos: (New_Top == Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret <= Old_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count)

root Left implication check-- split pred: New_Ret != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret == Old_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Left implication check-- split pred: Old_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)

root Left implication check-- split pred: New_Top != New_s1Count
root Left implication check-- featurePos: (New_Top != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count)

root Left implication check-- split pred: New_Ret != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)

root Left implication check-- split pred: New_Top != Old_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Top == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret != New_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Ret == New_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_s1Count < Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Left implication check-- split pred: Old_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_Top < Old_s1Count
root Left implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top <= Old_s1Count
root Left implication check-- featurePos: (New_Top <= Old_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_s1Count < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_s1Count)

root Left implication check-- split pred: Old_s1Count <= New_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Ret < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret <= Old_s1Count
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_s1Count < New_Ret
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Left implication check-- split pred: Old_s1Count <= New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: Old_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_s1Count < Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= Old_Top
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_Top < New_s1Count
root Left implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top <= New_s1Count
root Left implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_s1Count < New_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= New_Top
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Ret < New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret <= New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_s1Count < New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= New_Ret
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_Top < Old_Top
root Left implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top)

root Left implication check-- split pred: New_Top <= Old_Top
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: Old_Top <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Ret <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top < New_Ret
root Left implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top)

root Left implication check-- split pred: New_Top <= New_Ret
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_s1Count
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)
root Left implication check-- featureNeg: (New_Top != New_s1Count && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count)

root Left from implication check-- split from pred 0 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count)

root Left from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Ret
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count)

root Left from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Ret
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: true

root Left implication check-- split pred: 1 < New_s1Count
root Left implication check-- featurePos: (New_Top != New_s1Count && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: 1 < Old_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 < Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: 1 < New_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 1 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 0 < New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 0 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: -1 < New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: -1 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 1 < New_Ret
root Left implication check-- featurePos: (New_Top != New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 1 <= New_Ret
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 < New_Ret
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 <= New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 < New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count)

root Right implication check-- split pred: New_Ret != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != New_s1Count)

root Right implication check-- split pred: New_Ret != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret != New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Ret == New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top <= Old_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top <= Old_s1Count
root Right implication check-- featurePos: (New_Top <= Old_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_Ret < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret <= Old_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top <= New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < New_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: New_Ret < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Ret
root Right implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: New_Ret <= New_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: New_Top <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == New_s1Count && 1 == New_Top && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == New_s1Count
root Right implication check-- featurePos: (1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && New_s1Count <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count)

root Right from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: 0 == New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count)

root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: 0 <= New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: 1 <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 <= New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : New_s1ContainsNewRet

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top == Old_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top != Old_s1Count

Predicate root Right Right : New_Top == Old_s1Count

Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top != Old_s1Count

Predicate root Right Right : New_Top == Old_s1Count

Final Tree ====
Round: 5
Predicate root : New_s1ContainsNewRet

Predicate root Right : New_Top != Old_s1Count

Predicate root Right Right : New_Top == Old_s1Count

Houdini AlwaysTrue for k=2 : (New_s1Count == Old_s1Count - 1 && New_Ret == Old_Top && New_s1Count != Old_s1Count && New_s1Count < Old_s1Count && New_s1Count <= Old_s1Count && New_Ret <= Old_Top && Old_Top <= New_Ret && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root implication check-- split pred: New_s1ContainsNewRet
root implication check-- featurePos: (New_s1ContainsNewRet && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)))

root implication check-- split pred: Not(New_s1ContainsNewRet)
root implication check-- featurePos: ((!(New_s1ContainsNewRet)))
root implication check-- featureNeg: (New_s1ContainsNewRet && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root implication check-- featureNeg: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count)
root implication check-- featureNeg: (New_Top == Old_s1Count && New_Top != New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: (New_Top == Old_s1Count && New_Top != New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count)

root implication check-- split pred: New_Ret != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root implication check-- featureNeg: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == Old_s1Count
root implication check-- featurePos: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != New_s1Count)

root implication check-- split pred: New_Ret != New_s1Count
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root implication check-- split pred: New_Ret != New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Ret == New_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top <= Old_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top <= Old_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Ret < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= Old_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Ret
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: Old_s1Count <= New_Ret
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top <= New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Top
root implication check-- featurePos: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Ret
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root implication check-- split pred: New_Ret < New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: New_Ret <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top)
root implication check-- featureNeg: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top < New_Ret
root implication check-- featurePos: (Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top)

root implication check-- split pred: New_Top <= New_Ret
root implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (1 == New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_s1Count
root implication check-- featurePos: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top <= Old_s1Count && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Top != Old_s1Count && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (New_Top != New_s1Count && New_Top <= Old_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < New_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_s1ContainsNewRet)) && 1 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 1 < Old_Top
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: 1 < New_Top
root implication check-- featurePos: (New_Top != New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top <= Old_s1Count)

root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 0 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= New_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 < New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root implication check-- split pred: -1 <= New_Ret
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

Predicate: root for k = 2 : New_s1ContainsNewRet

Houdini AlwaysTrue for k=1 : (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Left from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top == Old_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Left implication check-- split pred: New_Top != Old_s1Count
root Left implication check-- featurePos: (New_Top != Old_s1Count)
root Left implication check-- featureNeg: (New_Top == Old_s1Count && New_Top != New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top == Old_s1Count
root Left implication check-- featurePos: (New_Top == Old_s1Count && New_Top != New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count)

root Left implication check-- split pred: New_Ret != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret == Old_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Left implication check-- split pred: Old_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)

root Left implication check-- split pred: New_Top != New_s1Count
root Left implication check-- featurePos: (New_Top != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count)

root Left implication check-- split pred: New_Ret != New_s1Count
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret == New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count)

root Left implication check-- split pred: New_Top != Old_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Top == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret != New_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Ret == New_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_s1Count < Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Left implication check-- split pred: Old_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_Top < Old_s1Count
root Left implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top <= Old_s1Count
root Left implication check-- featurePos: (New_Top <= Old_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_s1Count < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_s1Count)

root Left implication check-- split pred: Old_s1Count <= New_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Ret < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret <= Old_s1Count
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_s1Count < New_Ret
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Left implication check-- split pred: Old_s1Count <= New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: Old_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_s1Count < Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= Old_Top
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_Top < New_s1Count
root Left implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top <= New_s1Count
root Left implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_s1Count < New_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && Old_s1Count <= New_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= New_Top
root Left implication check-- featurePos: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Ret < New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Ret <= New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_s1Count < New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top <= Old_Top && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= New_Ret
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: New_Top < Old_Top
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top)

root Left implication check-- split pred: New_Top <= Old_Top
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: Old_Top < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: Old_Top <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: New_Ret < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: New_Ret <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && New_Ret <= New_Top)
root Left implication check-- featureNeg: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left implication check-- split pred: New_Top < New_Ret
root Left implication check-- featurePos: (Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top <= New_Top && New_Ret <= New_Top)

root Left implication check-- split pred: New_Top <= New_Ret
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Top <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_s1Count
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)
root Left implication check-- featureNeg: (New_Top != New_s1Count && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count)

root Left from implication check-- split from pred 0 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count)

root Left from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Ret
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && New_Ret == New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != New_s1Count)

root Left from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Ret
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: true

root Left implication check-- split pred: 1 < New_s1Count
root Left implication check-- featurePos: (New_Top != New_s1Count && New_Top <= Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: 1 < Old_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 < Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: 1 < New_Top
root Left implication check-- featurePos: (New_Top != New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 1 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 0 < New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 0 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: -1 < New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: -1 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Left implication check-- split pred: 1 < New_Ret
root Left implication check-- featurePos: (New_Top != New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 1 <= New_Ret
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 < New_Ret
root Left implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Left implication check-- split pred: 0 <= New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 < New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= New_Ret
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == New_s1Count)

Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Ret == New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count)

root Right implication check-- split pred: New_Ret != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && New_Ret == Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top == New_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != New_s1Count)

root Right implication check-- split pred: New_Ret != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top == New_s1Count && New_Ret == New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Ret <= New_s1Count && New_s1Count <= New_Ret && Old_Top <= New_Top && New_Ret <= New_Top && 1 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred New_Ret != Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret != Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret != New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Ret == New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count <= New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top <= Old_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top <= Old_s1Count
root Right implication check-- featurePos: (New_Top <= Old_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_Ret < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret <= Old_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_s1Count < New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: Old_s1Count <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top <= New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < New_Top
root Right implication check-- featurePos: (New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: New_Ret < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Ret <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_s1Count < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Ret
root Right implication check-- featurePos: (New_s1Count <= Old_Top && New_s1Count <= New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: New_Ret < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: New_Ret <= New_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right implication check-- split pred: New_Top < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: New_Top <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && New_Ret < New_Top && New_Ret <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == New_s1Count && 1 == New_Top && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == New_s1Count
root Right implication check-- featurePos: (1 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top <= Old_s1Count && New_s1Count <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count)

root Right from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top <= Old_s1Count && New_Ret <= Old_s1Count && 1 == Old_Top && 1 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count)

root Right implication check-- split pred: 0 == New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= New_Top && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count)

root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 == Old_Top && 0 == New_Top && 1 == New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < New_Top
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_s1Count <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count)

root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && New_Ret != New_Top && New_s1Count <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret)

root Right implication check-- split pred: 0 <= New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= New_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret <= Old_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 1 < New_Ret
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_s1Count < New_Ret && New_s1Count <= New_Ret && New_Top < Old_Top && New_Top <= Old_Top && New_Top < New_Ret && New_Top <= New_Ret && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Ret <= Old_s1Count)

root Right implication check-- split pred: 1 <= New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 < New_Ret
root Right implication check-- featurePos: (New_Top != Old_s1Count && Old_Top != New_s1Count && New_Ret != New_s1Count && New_Top != Old_Top && New_Ret != New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top <= New_s1Count && New_Ret <= New_s1Count && Old_Top <= New_Top && New_Ret <= New_Top)

root Right implication check-- split pred: 0 <= New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 < New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: -1 <= New_Ret
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && New_Ret != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Ret != New_s1Count && New_Top == Old_Top && New_Ret == New_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= New_Top && New_Top <= New_Ret && 1 == Old_s1Count && 0 == New_s1Count)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : New_s1ContainsNewRet

Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

Final Tree ====
Round: 6
Predicate root : Not(New_s1ContainsNewRet)

Predicate root Right : New_s1ContainsNewRet

===== Final Result for PUT_DequeueContract

postcondition: 
((0 < Old_s1Count && -1 < New_s1Count && -1 < Old_s1Count && 0 <= New_s1Count && 0 <= Old_s1Count && 1 <= Old_s1Count && -1 <= New_s1Count && -1 <= Old_s1Count && New_Ret <= Old_Top && Old_Top <= New_Ret && New_Ret == Old_Top && New_s1Count < Old_s1Count && New_s1Count != Old_s1Count && New_s1Count <= Old_s1Count && New_s1Count == Old_s1Count - 1) && (((!((!(New_s1ContainsNewRet)))) ||   (((!(New_s1ContainsNewRet))) && (((!(New_s1ContainsNewRet)) || false) && (New_s1ContainsNewRet || true)))) && ((!(New_s1ContainsNewRet)) ||   (New_s1ContainsNewRet && 1 < Old_s1Count && 0 < New_s1Count && 1 <= New_s1Count))))
rounds: 7

simplified post: 
((New_Ret == Old_Top && New_s1Count == -1 + Old_s1Count && (!(New_s1ContainsNewRet)) && Old_s1Count >= 1) || (New_Ret == Old_Top && New_s1Count == -1 + Old_s1Count && New_s1Count >= 1))
pex time: 136.5532464981079

learn time: 8198.481363773346

Samples: 55

PUT: PUT_PeekContract

Houdini AlwaysTrue for k=2 : (New_s1ContainsNewRet && New_s1Count == Old_s1Count && New_Ret == 0 && New_Ret != Old_s1Count && New_Ret != New_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred Not(New_s1ContainsNewRet): houdini Called with 0 feature vectors
root from implication check-- split from pred Not(New_s1ContainsNewRet): not expressive in with conjunctions
root from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_Ret == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_Ret == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_Ret: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count <= New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count <= New_Ret: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < New_Ret: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count <= New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count <= New_Ret: not expressive in with conjunctions
root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root from implication check-- split from pred 1 < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 <= New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 <= New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 0 < New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 < New_Ret: not expressive in with conjunctions
Predicate: root for k = 2 : None

Predicate root : 1 == Old_s1Count

Predicate root : 1 < Old_s1Count

Predicate root Right : 1 == Old_s1Count

Predicate root : 1 < Old_s1Count

Predicate root Right : 1 == Old_s1Count

Final Tree ====
Round: 1
Predicate root : 1 < Old_s1Count

Predicate root Right : 1 == Old_s1Count

Houdini AlwaysTrue for k=2 : (New_s1ContainsNewRet && New_s1Count == Old_s1Count && New_Ret != Old_s1Count && New_Ret != New_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred Not(New_s1ContainsNewRet): houdini Called with 0 feature vectors
root from implication check-- split from pred Not(New_s1ContainsNewRet): not expressive in with conjunctions
root from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_Ret == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_Ret == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: New_Ret < Old_s1Count
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)
root implication check-- featureNeg: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: New_Ret <= Old_s1Count
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)
root implication check-- featureNeg: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: Old_s1Count < New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)

root implication check-- split pred: Old_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)
root implication check-- featureNeg: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: New_Ret <= New_s1Count
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)
root implication check-- featureNeg: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: New_s1Count < New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)

root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count && 0 == New_Ret)
root implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count && 0 == New_Ret)
root implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)
root implication check-- featureNeg: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count && 0 == New_Ret)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count && 0 == New_Ret)

root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < Old_s1Count && 1 < New_s1Count && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret)

Predicate: root for k = 2 : None

Predicate root : New_Ret < Old_s1Count

Predicate root : 1 <= New_Ret

Predicate root Right : New_Ret < Old_s1Count

Predicate root : 1 <= New_Ret

Predicate root Right : New_Ret < Old_s1Count

Final Tree ====
Round: 2
Predicate root : 1 <= New_Ret

Predicate root Right : New_Ret < Old_s1Count

Houdini AlwaysTrue for k=2 : (New_s1ContainsNewRet && New_s1Count == Old_s1Count && New_Ret != Old_s1Count && New_Ret != New_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root from implication check-- split from pred Not(New_s1ContainsNewRet): houdini Called with 0 feature vectors
root from implication check-- split from pred Not(New_s1ContainsNewRet): not expressive in with conjunctions
root from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_Ret == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_Ret == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: New_Ret < Old_s1Count
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= Old_s1Count
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= New_s1Count
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: -1 < New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: -1 <= New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

Predicate: root for k = 2 : None

Predicate root : New_Ret <= Old_s1Count

Predicate root : Old_s1Count < New_Ret

Predicate root Right : New_Ret <= Old_s1Count

Predicate root : Old_s1Count < New_Ret

Predicate root Right : New_Ret <= Old_s1Count

Final Tree ====
Round: 3
Predicate root : Old_s1Count < New_Ret

Predicate root Right : New_Ret <= Old_s1Count

Houdini AlwaysTrue for k=2 : (New_s1ContainsNewRet && New_s1Count == Old_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root from implication check-- split from pred Not(New_s1ContainsNewRet): houdini Called with 0 feature vectors
root from implication check-- split from pred Not(New_s1ContainsNewRet): not expressive in with conjunctions
root from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: New_Ret != Old_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 == Old_s1Count && 1 == New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == Old_s1Count
root implication check-- featurePos: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 == Old_s1Count && 1 == New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Ret != New_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 == Old_s1Count && 1 == New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == New_s1Count
root implication check-- featurePos: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 == Old_s1Count && 1 == New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count)

root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: New_Ret < Old_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= Old_s1Count
root implication check-- featurePos: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= New_s1Count
root implication check-- featurePos: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 == Old_s1Count && 1 == New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count)

root from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: -1 < New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: -1 <= New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

Predicate: root for k = 2 : None

Predicate root : New_Ret <= Old_s1Count

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 0 <= New_Ret

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 0 <= New_Ret

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 0 <= New_Ret

Predicate root Right Right : 1 < Old_s1Count

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 0 <= New_Ret

Predicate root Right Right : 1 < Old_s1Count

Predicate root : 0 <= New_Ret

Predicate root Right : New_Ret <= Old_s1Count

Predicate root Right Right : 1 < Old_s1Count

Predicate root Right Right Right : 1 == New_Ret

Predicate root : 0 <= New_Ret

Predicate root Right : New_Ret <= Old_s1Count

Predicate root Right Right : 1 < Old_s1Count

Predicate root Right Right Right : 1 == New_Ret

Final Tree ====
Round: 4
Predicate root : 0 <= New_Ret

Predicate root Right : New_Ret <= Old_s1Count

Predicate root Right Right : 1 < Old_s1Count

Predicate root Right Right Right : 1 == New_Ret

Houdini AlwaysTrue for k=2 : (New_s1ContainsNewRet && New_s1Count == Old_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root from implication check-- split from pred Not(New_s1ContainsNewRet): houdini Called with 0 feature vectors
root from implication check-- split from pred Not(New_s1ContainsNewRet): not expressive in with conjunctions
root from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: New_Ret != Old_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 == Old_s1Count && 1 == New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == Old_s1Count
root implication check-- featurePos: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 == Old_s1Count && 1 == New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Ret != New_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 == Old_s1Count && 1 == New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == New_s1Count
root implication check-- featurePos: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 == Old_s1Count && 1 == New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count)

root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: New_Ret < Old_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= Old_s1Count
root implication check-- featurePos: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= New_s1Count
root implication check-- featurePos: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 == Old_s1Count && 1 == New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count)

root from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: -1 < New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: -1 <= New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

Predicate: root for k = 2 : None

Predicate root : New_Ret <= Old_s1Count

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : New_Ret == Old_s1Count

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : New_Ret == Old_s1Count

Predicate root : New_Ret != New_s1Count

Predicate root Right : New_Ret <= Old_s1Count

Predicate root Right Right : New_Ret == Old_s1Count

Predicate root : New_Ret != New_s1Count

Predicate root Right : New_Ret <= Old_s1Count

Predicate root Right Right : New_Ret == Old_s1Count

Final Tree ====
Round: 5
Predicate root : New_Ret != New_s1Count

Predicate root Right : New_Ret <= Old_s1Count

Predicate root Right Right : New_Ret == Old_s1Count

Houdini AlwaysTrue for k=2 : (New_s1ContainsNewRet && New_s1Count == Old_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root from implication check-- split from pred Not(New_s1ContainsNewRet): houdini Called with 0 feature vectors
root from implication check-- split from pred Not(New_s1ContainsNewRet): not expressive in with conjunctions
root from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: New_Ret != Old_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == Old_s1Count
root implication check-- featurePos: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Ret != New_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == New_s1Count
root implication check-- featurePos: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count)

root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: New_Ret < Old_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= Old_s1Count
root implication check-- featurePos: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= New_s1Count
root implication check-- featurePos: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 == Old_s1Count && 1 == New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: -1 < New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: -1 <= New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

Predicate: root for k = 2 : None

Predicate root : New_Ret <= Old_s1Count

Predicate root : 1 <= New_Ret

Predicate root Right : New_Ret <= Old_s1Count

Predicate root : 1 <= New_Ret

Predicate root Right : New_Ret <= Old_s1Count

Predicate root : 1 <= New_Ret

Predicate root Right : 1 < New_Ret

Predicate root Right Right : New_Ret <= Old_s1Count

Predicate root : 1 <= New_Ret

Predicate root Right : 1 < New_Ret

Predicate root Right Right : New_Ret <= Old_s1Count

Predicate root : 1 <= New_Ret

Predicate root Right : 1 < New_Ret

Predicate root Right Right : New_Ret <= Old_s1Count

Predicate root Right Right Right : 0 == New_Ret

Predicate root : 1 <= New_Ret

Predicate root Right : 1 < New_Ret

Predicate root Right Right : New_Ret <= Old_s1Count

Predicate root Right Right Right : 0 == New_Ret

Final Tree ====
Round: 6
Predicate root : 1 <= New_Ret

Predicate root Right : 1 < New_Ret

Predicate root Right Right : New_Ret <= Old_s1Count

Predicate root Right Right Right : 0 == New_Ret

Houdini AlwaysTrue for k=2 : (New_s1ContainsNewRet && New_s1Count == Old_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root from implication check-- split from pred Not(New_s1ContainsNewRet): houdini Called with 0 feature vectors
root from implication check-- split from pred Not(New_s1ContainsNewRet): not expressive in with conjunctions
root from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: New_Ret != Old_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == Old_s1Count
root implication check-- featurePos: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count)

root implication check-- split pred: New_Ret != New_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count)
root implication check-- featureNeg: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret == New_s1Count
root implication check-- featurePos: (New_Ret == Old_s1Count && New_Ret == New_s1Count && New_Ret <= Old_s1Count && Old_s1Count <= New_Ret && New_Ret <= New_s1Count && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count)

root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: New_Ret < Old_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= Old_s1Count
root implication check-- featurePos: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: Old_s1Count < New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: Old_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_Ret < New_s1Count
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Ret <= New_s1Count
root implication check-- featurePos: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_s1Count < New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && Old_s1Count < New_Ret && Old_s1Count <= New_Ret && New_s1Count < New_Ret && New_s1Count <= New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Ret
root implication check-- featurePos: (Old_s1Count <= New_Ret && New_s1Count <= New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count)

root from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count && 0 == New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count)
root implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (1 < New_Ret && 1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret <= Old_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (1 <= New_Ret && 0 < New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: 0 <= New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: -1 < New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

root implication check-- split pred: -1 <= New_Ret
root implication check-- featurePos: (0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)
root implication check-- featureNeg: (New_Ret != Old_s1Count && New_Ret != New_s1Count && New_Ret < Old_s1Count && New_Ret <= Old_s1Count && New_Ret < New_s1Count && New_Ret <= New_s1Count)

Predicate: root for k = 2 : None

Predicate root : New_Ret <= Old_s1Count

Predicate root : 0 <= New_Ret

Predicate root Right : New_Ret <= Old_s1Count

Predicate root : 0 <= New_Ret

Predicate root Right : New_Ret <= Old_s1Count

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 0 <= New_Ret

Predicate root Right Right : 0 == New_Ret

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 0 <= New_Ret

Predicate root Right Right : 0 == New_Ret

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 0 <= New_Ret

Predicate root Right Right : 0 == New_Ret

Predicate root Right Right Right : 1 == New_Ret

Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 0 <= New_Ret

Predicate root Right Right : 0 == New_Ret

Predicate root Right Right Right : 1 == New_Ret

Final Tree ====
Round: 7
Predicate root : New_Ret <= Old_s1Count

Predicate root Right : 0 <= New_Ret

Predicate root Right Right : 0 == New_Ret

Predicate root Right Right Right : 1 == New_Ret

===== Final Result for PUT_PeekContract

postcondition: 
((New_s1ContainsNewRet && 0 < New_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 <= New_s1Count && -1 < New_s1Count && 1 <= Old_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= New_s1Count && -1 <= Old_s1Count && Old_s1Count <= New_s1Count && New_s1Count <= Old_s1Count && New_s1Count == Old_s1Count) && (((!(New_Ret <= Old_s1Count)) ||   ((New_Ret <= New_s1Count && New_Ret <= Old_s1Count) && (((!(0 <= New_Ret)) ||   ((0 <= New_Ret &&  -1 < New_Ret &&  -1 <= New_Ret) &&  (((!(0 == New_Ret)) || ((0 == New_Ret &&   New_Ret <                                        New_s1Count &&   New_Ret <                                        Old_s1Count &&   New_Ret !=               New_s1Count &&   New_Ret !=               Old_s1Count) &&  (((!(1 == New_Ret)) ||  false) &&   (1 == New_Ret ||  true)))) &&  (0 == New_Ret || (0 < New_Ret &&  1 <= New_Ret))))) && (0 <= New_Ret ||   (New_Ret < New_s1Count &&  New_Ret < Old_s1Count &&  New_Ret != New_s1Count &&  New_Ret != Old_s1Count))))) && (New_Ret <= Old_s1Count ||   (1 < New_Ret && 0 < New_Ret && 1 <= New_Ret && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret && New_s1Count < New_Ret && Old_s1Count < New_Ret && New_Ret != New_s1Count && Old_s1Count <= New_Ret && New_Ret != Old_s1Count && New_s1Count <= New_Ret))))
rounds: 8

simplified post: 
((New_s1ContainsNewRet && New_s1Count == Old_s1Count && Old_s1Count >= 1))
pex time: 108.01071381568909

learn time: 344.18944811820984

Samples: 39

PUT: PUT_ContainsContract

Houdini AlwaysTrue for k=2 : (New_s1Count == Old_s1Count && New_Top == 0 && New_Top == Old_Top && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_Ret
root implication check-- featurePos: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)))

root implication check-- split pred: Not(New_Ret)
root implication check-- featurePos: ((!(New_Ret)))
root implication check-- featureNeg: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == Old_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 < Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 <= Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 <= Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 0 < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
Predicate: root for k = 2 : New_Ret

Houdini AlwaysTrue for k=1 : (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Left from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_s1Count
root Left implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root Left implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count)

root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_s1Count
root Left implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root Left implication check-- featureNeg: (1 < Old_s1Count && 1 < New_s1Count)

root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 < Old_s1Count
root Left implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count)
root Left implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: 1 < New_s1Count
root Left implication check-- featurePos: (1 < Old_s1Count && 1 < New_s1Count)
root Left implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root Left from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred Old_s1Count < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred Old_s1Count < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred New_s1Count < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred New_s1Count < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 < Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && New_Top < Old_s1Count && Old_Top < New_s1Count && New_Top < New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 <= Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 <= Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 0 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : New_Ret

Predicate root : New_Ret

Predicate root Right : 0 == New_s1Count

Predicate root : New_Ret

Predicate root Right : 0 == New_s1Count

Final Tree ====
Round: 1
Predicate root : New_Ret

Predicate root Right : 0 == New_s1Count

Houdini AlwaysTrue for k=2 : (New_s1Count == Old_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_Ret
root implication check-- featurePos: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)))

root implication check-- split pred: Not(New_Ret)
root implication check-- featurePos: ((!(New_Ret)))
root implication check-- featureNeg: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= New_Top)
root implication check-- featureNeg: ((!(New_Ret)) && New_Top == Old_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: ((!(New_Ret)) && New_Top == Old_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= New_Top)
root implication check-- featureNeg: ((!(New_Ret)) && New_Top == Old_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: ((!(New_Ret)) && New_Top == Old_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: ((!(New_Ret)) && New_Top != Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)
root implication check-- featureNeg: ((!(New_Ret)) && New_Top != Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top)

root implication check-- split pred: Old_Top <= Old_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top)

root implication check-- split pred: Old_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top)

root implication check-- split pred: New_Top <= Old_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 1 <= New_Top && 0 < New_Top)

root implication check-- split pred: Old_s1Count < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top)

root implication check-- split pred: Old_Top <= New_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top)

root implication check-- split pred: New_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top)

root implication check-- split pred: New_Top <= New_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 1 <= New_Top && 0 < New_Top)

root implication check-- split pred: New_s1Count < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: ((!(New_Ret)) && Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (Old_Top <= New_Top)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: (New_Top <= Old_Top)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == Old_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: ((!(New_Ret)) && Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (Old_Top <= New_Top)

root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top)

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: (New_Top <= Old_Top)

root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 1 <= New_Top && 0 < New_Top)

root from implication check-- split from pred 1 < Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 < Old_Top
root implication check-- featurePos: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 < New_Top
root implication check-- featurePos: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 1 <= New_Top && 0 < New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

Predicate: root for k = 2 : New_Ret

Houdini AlwaysTrue for k=1 : (New_Top == Old_Top && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Left from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)

root Left implication check-- split pred: Old_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)

root Left implication check-- split pred: Old_s1Count < Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: Old_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: New_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)

root Left implication check-- split pred: New_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)

root Left implication check-- split pred: Old_s1Count < New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: Old_s1Count <= New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: Old_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)

root Left implication check-- split pred: Old_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)

root Left implication check-- split pred: New_s1Count < Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: New_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: New_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)

root Left implication check-- split pred: New_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)

root Left implication check-- split pred: New_s1Count < New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: New_s1Count <= New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_s1Count
root Left implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 < New_s1Count)

root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_s1Count
root Left implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 < New_s1Count)

root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)

root Left implication check-- split pred: 1 < Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 < New_s1Count)
root Left implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: 1 < New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 < New_s1Count)
root Left implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: 1 < Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: 1 < New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: 1 <= New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

root Left implication check-- split pred: 0 < New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top)

Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (New_Top == Old_Top && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (New_Top == Old_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (New_Top == Old_s1Count && New_Top == New_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top == Old_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (New_Top == Old_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top)
root Right implication check-- featureNeg: (New_Top != Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: Old_Top <= Old_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)

root Right implication check-- split pred: Old_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Top <= Old_s1Count
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)

root Right implication check-- split pred: Old_s1Count < New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: Old_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)

root Right implication check-- split pred: New_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: New_Top <= New_s1Count
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)

root Right implication check-- split pred: New_s1Count < New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == Old_s1Count
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == New_s1Count
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)

root Right from implication check-- split from pred 1 < Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 == Old_Top)

root Right from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 1 <= New_Top && 0 < New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == New_Top)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : New_Ret

Predicate root : New_Ret

Predicate root Right : 1 == Old_Top

Predicate root : New_Ret

Predicate root Right : 1 == Old_Top

Final Tree ====
Round: 2
Predicate root : New_Ret

Predicate root Right : 1 == Old_Top

Houdini AlwaysTrue for k=2 : (New_s1Count == Old_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root implication check-- split pred: New_Ret
root implication check-- featurePos: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)))

root implication check-- split pred: Not(New_Ret)
root implication check-- featurePos: ((!(New_Ret)))
root implication check-- featureNeg: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: ((!(New_Ret)) && New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count)

root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: ((!(New_Ret)) && Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: ((!(New_Ret)) && New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: ((!(New_Ret)) && New_Top != Old_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)
root implication check-- featureNeg: ((!(New_Ret)) && New_Top != Old_Top && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)
root implication check-- featureNeg: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top <= Old_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: Old_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_Top <= Old_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: Old_s1Count < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)
root implication check-- featureNeg: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top <= New_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_Top <= New_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_s1Count < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: ((!(New_Ret)) && New_Top != Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top <= New_Top)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top)
root implication check-- featureNeg: ((!(New_Ret)) && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: ((!(New_Ret)) && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top <= Old_Top)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top)
root implication check-- featureNeg: ((!(New_Ret)) && New_Top != Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == Old_s1Count
root implication check-- featurePos: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_s1Count
root implication check-- featurePos: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count)

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count)

root from implication check-- split from pred 1 < Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 < Old_Top
root implication check-- featurePos: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root implication check-- split pred: 0 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: -1 < Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: -1 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 < New_Top
root implication check-- featurePos: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: 0 <= New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: -1 < New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: -1 <= New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

Predicate: root for k = 2 : New_Ret

Houdini AlwaysTrue for k=1 : (New_Top == Old_Top && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Left from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: Old_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: Old_s1Count < Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: Old_s1Count < New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_s1Count <= New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: Old_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_s1Count < Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_s1Count < New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_s1Count
root Left implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_s1Count
root Left implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_Top
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_Top && 1 == New_Top && 1 < Old_s1Count && 1 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred 0 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Top
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_Top && 1 == New_Top && 1 < Old_s1Count && 1 < New_s1Count && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: true

root Left implication check-- split pred: 1 < Old_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: 1 < New_s1Count
root Left implication check-- featurePos: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: 1 < Old_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 0 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: -1 < Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: 1 < New_Top
root Left implication check-- featurePos: (Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 1 <= New_Top
root Left implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 0 < New_Top
root Left implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 0 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: -1 < New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (New_Top == Old_Top && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top == Old_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (New_Top == Old_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top <= Old_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: Old_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top <= Old_s1Count
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: Old_s1Count < New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top <= New_s1Count
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_s1Count < New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == Old_s1Count
root Right implication check-- featurePos: (0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == New_s1Count
root Right implication check-- featurePos: (0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right from implication check-- split from pred 1 < Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root Right implication check-- split pred: 0 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: -1 < Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: -1 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: 0 <= New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: -1 < New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: -1 <= New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : New_Ret

Predicate root : New_Ret

Predicate root Right : Old_s1Count <= New_Top

Predicate root : New_Ret

Predicate root Right : Old_s1Count <= New_Top

Predicate root : New_Ret

Predicate root Right : Old_Top < New_s1Count

Predicate root Right Right : Old_s1Count <= New_Top

Predicate root : New_Ret

Predicate root Right : Old_Top < New_s1Count

Predicate root Right Right : Old_s1Count <= New_Top

Final Tree ====
Round: 3
Predicate root : New_Ret

Predicate root Right : Old_Top < New_s1Count

Predicate root Right Right : Old_s1Count <= New_Top

Houdini AlwaysTrue for k=2 : (New_s1Count == Old_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= Old_s1Count && 0 <= New_s1Count && -1 < New_s1Count && -1 <= New_s1Count)

root implication check-- split pred: New_Ret
root implication check-- featurePos: (New_Ret && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)))

root implication check-- split pred: Not(New_Ret)
root implication check-- featurePos: ((!(New_Ret)))
root implication check-- featureNeg: (New_Ret && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top != Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count)
root implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top == Old_s1Count
root implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count)

root implication check-- split pred: New_Top != Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count)
root implication check-- featureNeg: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_Top == Old_s1Count
root implication check-- featurePos: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count)

root implication check-- split pred: Old_Top != New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count)
root implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top == New_s1Count
root implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count)

root implication check-- split pred: New_Top != New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count)
root implication check-- featureNeg: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_Top == New_s1Count
root implication check-- featurePos: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: ((!(New_Ret)) && New_Top != Old_Top && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top)
root implication check-- featureNeg: ((!(New_Ret)) && New_Top != Old_Top && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: Old_Top < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)
root implication check-- featureNeg: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top <= Old_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: Old_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root implication check-- split pred: Old_s1Count <= Old_Top
root implication check-- featurePos: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: New_Top < Old_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_Top <= Old_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: Old_s1Count < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: Old_s1Count <= New_Top
root implication check-- featurePos: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: Old_Top < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)
root implication check-- featureNeg: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top <= New_s1Count
root implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_s1Count < Old_Top
root implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= Old_Top
root implication check-- featurePos: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: New_Top < New_s1Count
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)
root implication check-- featureNeg: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_Top <= New_s1Count
root implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: New_s1Count < New_Top
root implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: New_s1Count <= New_Top
root implication check-- featurePos: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: ((!(New_Ret)) && New_Top != Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top <= New_Top)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top)
root implication check-- featureNeg: ((!(New_Ret)) && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: ((!(New_Ret)) && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top <= Old_Top)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top)
root implication check-- featureNeg: ((!(New_Ret)) && New_Top != Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_s1Count
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == Old_s1Count
root implication check-- featurePos: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 == New_s1Count
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_s1Count
root implication check-- featurePos: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)
root implication check-- featureNeg: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: true

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Top
root implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root implication check-- split pred: 0 == New_Top
root implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root from implication check-- split from pred 1 < Old_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < Old_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= Old_s1Count
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < Old_s1Count
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root implication check-- split pred: 1 < New_s1Count
root implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_s1Count
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)

root implication check-- split pred: 0 < New_s1Count
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root implication check-- featureNeg: ((!(New_Ret)) && 0 == Old_s1Count && 0 == New_s1Count)

root from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 < Old_Top
root implication check-- featurePos: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root implication check-- split pred: 0 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: -1 < Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root implication check-- split pred: -1 <= Old_Top
root implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top)

root from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root implication check-- split pred: 1 < New_Top
root implication check-- featurePos: (New_Ret && Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: 0 < New_Top
root implication check-- featurePos: (Old_Top <= New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root implication check-- split pred: 0 <= New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: -1 < New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

root implication check-- split pred: -1 <= New_Top
root implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top)

Predicate: root for k = 2 : New_Ret

Houdini AlwaysTrue for k=1 : (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)

root Left from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: Old_Top == Old_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count)

root Left implication check-- split pred: New_Top != Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_Top == Old_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count)

root Left implication check-- split pred: Old_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: Old_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count)

root Left implication check-- split pred: New_Top != New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count)
root Left implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_Top == New_s1Count
root Left implication check-- featurePos: (Old_Top == Old_s1Count && New_Top == Old_s1Count && Old_Top == New_s1Count && New_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count)

root Left from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: Old_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: Old_s1Count < Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Top < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_Top <= Old_s1Count
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: Old_s1Count < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_s1Count <= New_Top
root Left implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: Old_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: Old_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_s1Count < Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= Old_Top
root Left implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_Top < New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_Top <= New_s1Count
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left implication check-- split pred: New_s1Count < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: New_s1Count <= New_Top
root Left implication check-- featurePos: (Old_s1Count <= Old_Top && Old_s1Count <= New_Top && New_s1Count <= Old_Top && New_s1Count <= New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Left from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_s1Count
root Left implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left from implication check-- split from pred 0 == Old_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == Old_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_s1Count
root Left implication check-- featurePos: (1 == Old_s1Count && 1 == New_s1Count)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Left from implication check-- split from pred 0 == New_s1Count: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 == New_s1Count: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_Top
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count)

root Left from implication check-- split from pred 0 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: true

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == New_Top
root Left implication check-- featurePos: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && 1 == Old_Top && 1 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count)

root Left from implication check-- split from pred 0 == New_Top: not expressive in with conjunctions
root Left implication check-- split pred: 0 == New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: true

root Left implication check-- split pred: 1 < Old_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: 1 < New_s1Count
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && 1 < Old_s1Count && 1 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: 1 < Old_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 0 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: -1 < Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= Old_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: 1 < New_Top
root Left implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && 1 < Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 1 <= New_Top
root Left implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 0 < New_Top
root Left implication check-- featurePos: (1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count)

root Left implication check-- split pred: 0 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: -1 < New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

root Left implication check-- split pred: -1 <= New_Top
root Left implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Left implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && 1 == Old_s1Count && 1 == New_s1Count)

Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count)
root Right: not expressive in with conjunctions
Houdini AlwaysTrue for k=1 : true

root Right from implication check-- split from pred New_s1Count != Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count != Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top != Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top == Old_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top != Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top == Old_s1Count
root Right implication check-- featurePos: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top != New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top == New_s1Count
root Right implication check-- featurePos: (Old_Top == Old_s1Count && Old_Top == New_s1Count && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top != New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top == New_s1Count
root Right implication check-- featurePos: (New_Top == Old_s1Count && New_Top == New_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: New_Top != Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && 0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (New_Top == Old_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top == Old_Top
root Right implication check-- featurePos: (New_Top == Old_Top && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_Top && 0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred New_s1Count < Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_s1Count < Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred Old_s1Count < New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_s1Count < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: Old_Top < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top <= Old_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: Old_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root Right implication check-- split pred: Old_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top < Old_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top <= Old_s1Count
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: Old_s1Count < New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: Old_s1Count <= New_Top
root Right implication check-- featurePos: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top <= New_s1Count
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_s1Count < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= Old_Top
root Right implication check-- featurePos: (Old_s1Count <= Old_Top && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && Old_Top != New_s1Count && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && Old_Top <= New_Top && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top < New_s1Count
root Right implication check-- featurePos: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top <= New_s1Count
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_s1Count < New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: New_s1Count <= New_Top
root Right implication check-- featurePos: (Old_s1Count <= New_Top && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_s1Count && New_Top != New_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: New_Top < Old_Top
root Right implication check-- featurePos: (New_Top != Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: New_Top <= Old_Top
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: Old_Top < New_Top
root Right implication check-- featurePos: (New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: Old_Top <= New_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && Old_Top <= New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top != Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right from implication check-- split from pred -1 == Old_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == Old_s1Count
root Right implication check-- featurePos: (0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right from implication check-- split from pred -1 == New_s1Count: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_s1Count: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 1 == Old_s1Count && 1 == New_s1Count && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 0 == New_s1Count
root Right implication check-- featurePos: (0 == Old_s1Count && 0 == New_s1Count)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root Right implication check-- split pred: 0 == Old_Top
root Right implication check-- featurePos: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: 0 == New_Top
root Right implication check-- featurePos: (New_Top <= Old_s1Count && New_Top <= New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right from implication check-- split from pred 1 < Old_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < Old_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < New_s1Count: not expressive in with conjunctions
root Right implication check-- split pred: 1 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 < Old_s1Count && 1 <= Old_s1Count && 0 < Old_s1Count && 1 < New_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: true

root Right implication check-- split pred: 1 <= New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (0 == Old_s1Count && 0 == New_s1Count)

root Right implication check-- split pred: 0 < New_s1Count
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top != Old_s1Count && Old_Top != New_s1Count && New_Top != New_s1Count && New_Top == Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && 0 == Old_Top && 0 == New_Top && 1 <= Old_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 0 < New_s1Count && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (0 == Old_s1Count && 0 == New_s1Count)

root Right from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 <= Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root Right implication check-- split pred: 0 < Old_Top
root Right implication check-- featurePos: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_s1Count < Old_Top && Old_s1Count <= Old_Top && New_Top <= Old_s1Count && Old_s1Count <= New_Top && New_s1Count < Old_Top && New_s1Count <= Old_Top && New_Top <= New_s1Count && New_s1Count <= New_Top && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 1 == Old_Top && 0 == New_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top <= Old_s1Count && Old_Top <= New_s1Count)

root Right implication check-- split pred: 0 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: -1 < Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right implication check-- split pred: -1 <= Old_Top
root Right implication check-- featurePos: (0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Right implication check-- featureNeg: (Old_Top != Old_s1Count && New_Top == Old_s1Count && Old_Top != New_s1Count && New_Top == New_s1Count && New_Top != Old_Top && Old_Top < Old_s1Count && Old_Top <= Old_s1Count && New_Top <= Old_s1Count && Old_s1Count <= New_Top && Old_Top < New_s1Count && Old_Top <= New_s1Count && New_Top <= New_s1Count && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)

root Right from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 <= New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: 0 < New_Top
root Right implication check-- featurePos: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && Old_s1Count < New_Top && Old_s1Count <= New_Top && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_s1Count < New_Top && New_s1Count <= New_Top && Old_Top < New_Top && Old_Top <= New_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 1 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Top && 0 < New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (New_Top <= Old_s1Count && New_Top <= New_s1Count)

root Right implication check-- split pred: 0 <= New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: -1 < New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Right implication check-- split pred: -1 <= New_Top
root Right implication check-- featurePos: (0 <= New_Top && -1 < New_Top && -1 <= New_Top)
root Right implication check-- featureNeg: (Old_Top == Old_s1Count && New_Top != Old_s1Count && Old_Top == New_s1Count && New_Top != New_s1Count && New_Top != Old_Top && Old_Top <= Old_s1Count && Old_s1Count <= Old_Top && New_Top < Old_s1Count && New_Top <= Old_s1Count && Old_Top <= New_s1Count && New_s1Count <= Old_Top && New_Top < New_s1Count && New_Top <= New_s1Count && New_Top < Old_Top && New_Top <= Old_Top && 0 == Old_s1Count && 0 == New_s1Count && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : true
Predicate root : New_Ret

Predicate root : Not(New_Ret)

Predicate root Right : New_Ret

Predicate root : Not(New_Ret)

Predicate root Right : New_Ret

Final Tree ====
Round: 4
Predicate root : Not(New_Ret)

Predicate root Right : New_Ret

===== Final Result for PUT_ContainsContract

postcondition: 
((0 <= New_s1Count && -1 < New_s1Count && 0 <= Old_s1Count && -1 < Old_s1Count && -1 <= New_s1Count && -1 <= Old_s1Count && New_s1Count <= Old_s1Count && Old_s1Count <= New_s1Count && New_s1Count == Old_s1Count) && (((!((!(New_Ret)))) ||   (((!(New_Ret))) && (((!(New_Ret)) || false) && (New_Ret || true)))) && ((!(New_Ret)) ||   (New_Ret && 0 < New_s1Count && 0 < Old_s1Count && 1 <= New_s1Count && 1 <= Old_s1Count && New_Top <= Old_Top && Old_Top <= New_Top && New_Top == Old_Top))))
rounds: 5

simplified post: 
((New_s1Count == Old_s1Count && (!(New_Ret)) && Old_s1Count >= 0) || (New_s1Count == Old_s1Count && New_Top == Old_Top && Old_s1Count >= 1))
pex time: 78.50773525238037

learn time: 1006.9639852046967

Samples: 31

PUT: PUT_CountContract

Houdini AlwaysTrue for k=2 : (New_Top == 0 && New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && New_Top <= New_Ret && 0 == Old_Top && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root implication check-- split pred: New_Ret != Old_Top
root implication check-- featurePos: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == Old_Top && New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: New_Ret == Old_Top
root implication check-- featurePos: (New_Ret == Old_Top && New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: New_Ret != New_Top
root implication check-- featurePos: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == Old_Top && New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: New_Ret == New_Top
root implication check-- featurePos: (New_Ret == Old_Top && New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 <= New_Ret && 0 < New_Ret)

root from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root implication check-- split pred: New_Ret <= Old_Top
root implication check-- featurePos: (New_Ret == Old_Top && New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: Old_Top < New_Ret
root implication check-- featurePos: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == Old_Top && New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

root from implication check-- split from pred New_Ret < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret < New_Top: not expressive in with conjunctions
root implication check-- split pred: New_Ret <= New_Top
root implication check-- featurePos: (New_Ret == Old_Top && New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: New_Top < New_Ret
root implication check-- featurePos: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == Old_Top && New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (New_Ret == Old_Top && New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 <= New_Ret && 0 < New_Ret)

root from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 <= Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 <= Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 0 < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 < Old_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 < New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == Old_Top && New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (New_Ret != Old_Top && New_Ret != New_Top && Old_Top < New_Ret && New_Top < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == Old_Top && New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

Predicate: root for k = 2 : None

Predicate root : New_Ret != Old_Top

Predicate root : New_Ret != Old_Top

Predicate root Right : 0 == New_Ret

Predicate root : New_Ret != Old_Top

Predicate root Right : 0 == New_Ret

Final Tree ====
Round: 1
Predicate root : New_Ret != Old_Top

Predicate root Right : 0 == New_Ret

Houdini AlwaysTrue for k=2 : (New_Top == 0 && New_Top <= Old_Top && New_Top <= New_Ret && 0 == New_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (New_Top == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top)

root implication check-- split pred: New_Ret != Old_Top
root implication check-- featurePos: (New_Ret != Old_Top)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret == Old_Top && New_Ret == New_Top && Old_Top <= New_Top && New_Ret <= Old_Top && Old_Top <= New_Ret && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)

root implication check-- split pred: New_Ret == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret == Old_Top && New_Ret == New_Top && Old_Top <= New_Top && New_Ret <= Old_Top && Old_Top <= New_Ret && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Ret != Old_Top)

root implication check-- split pred: New_Ret != New_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: New_Ret == New_Top
root implication check-- featurePos: (New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (New_Top == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (New_Top == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top)

root implication check-- split pred: New_Ret < Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (New_Top == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root implication check-- split pred: New_Ret <= Old_Top
root implication check-- featurePos: (New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: Old_Top < New_Ret
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: Old_Top <= New_Ret
root implication check-- featurePos: (New_Top == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top)

root from implication check-- split from pred New_Ret < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret < New_Top: not expressive in with conjunctions
root implication check-- split pred: New_Ret <= New_Top
root implication check-- featurePos: (New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: New_Top < New_Ret
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (New_Top == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top)

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 == New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 <= New_Ret && 0 < New_Ret)

root from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (New_Top == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top)
root implication check-- featureNeg: (New_Top == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 < New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == New_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

Predicate: root for k = 2 : New_Ret == New_Top

Houdini AlwaysTrue for k=1 : (New_Ret == 0 && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)

root Left implication check-- split pred: New_Top != Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root Left implication check-- split pred: New_Top == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)

root Left implication check-- split pred: New_Ret != Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root Left implication check-- split pred: New_Ret == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)

root Left from implication check-- split from pred New_Ret != New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret != New_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_Top < Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root Left from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top <= New_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)

root Left implication check-- split pred: New_Ret < Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root Left from implication check-- split from pred Old_Top < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred Old_Top < New_Ret: not expressive in with conjunctions
root Left implication check-- split pred: Old_Top <= New_Ret
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)

root Left from implication check-- split from pred New_Ret < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Ret < Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top)

root Left from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < New_Ret: not expressive in with conjunctions
Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (New_Ret == 0 && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret)
Houdini AlwaysTrue for k=1 : (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 <= New_Ret && 0 < New_Ret)

root Right from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Ret == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret == Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Ret <= Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret <= Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Ret < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Ret <= New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret <= New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Ret
root Right implication check-- featurePos: (1 == New_Ret)
root Right implication check-- featureNeg: (1 < New_Ret)

root Right from implication check-- split from pred 0 == New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root Right from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 <= Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 <= Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 0 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 < New_Ret
root Right implication check-- featurePos: (1 < New_Ret)
root Right implication check-- featureNeg: (1 == New_Ret)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 <= New_Ret && 0 < New_Ret)
Houdini AlwaysTrue for k=2 : (New_Top == 0 && New_Top <= New_Ret && 0 == New_Top && 0 <= New_Top && -1 < New_Top && -1 <= New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret)

root implication check-- split pred: New_Top != Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: New_Top == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: New_Ret != Old_Top
root implication check-- featurePos: (New_Ret != Old_Top)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= Old_Top && Old_Top <= New_Ret && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: New_Ret == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret == Old_Top && New_Ret == New_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= Old_Top && Old_Top <= New_Ret && New_Ret <= New_Top && 0 == Old_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (New_Ret != Old_Top)

root implication check-- split pred: New_Ret != New_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == New_Top && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: New_Ret == New_Top
root implication check-- featurePos: (New_Ret == New_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: New_Top < Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top <= New_Top && Old_Top <= New_Ret)

root implication check-- split pred: New_Top <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: Old_Top < New_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top <= New_Top
root implication check-- featurePos: (Old_Top <= New_Top && Old_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: New_Ret < Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top <= New_Top && Old_Top <= New_Ret)

root implication check-- split pred: New_Ret <= Old_Top
root implication check-- featurePos: (New_Ret == New_Top && New_Top <= Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (New_Ret != Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret)

root implication check-- split pred: Old_Top < New_Ret
root implication check-- featurePos: (New_Ret != Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret)
root implication check-- featureNeg: (New_Ret == New_Top && New_Top <= Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 0 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root implication check-- split pred: Old_Top <= New_Ret
root implication check-- featurePos: (Old_Top <= New_Top && Old_Top <= New_Ret)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root from implication check-- split from pred New_Ret < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred New_Ret < New_Top: not expressive in with conjunctions
root implication check-- split pred: New_Ret <= New_Top
root implication check-- featurePos: (New_Ret == New_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret)

root implication check-- split pred: New_Top < New_Ret
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == New_Top && New_Ret <= New_Top && 0 == New_Ret)

root from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 == Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top <= New_Top && Old_Top <= New_Ret)

root implication check-- split pred: 0 == Old_Top
root implication check-- featurePos: (New_Top == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top <= New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Ret <= New_Top && 0 == New_Ret)

root from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 == New_Ret
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 1 == New_Ret && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 0 == New_Ret
root implication check-- featurePos: (New_Ret == New_Top && New_Ret <= New_Top && 0 == New_Ret)
root implication check-- featureNeg: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret)

root from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root implication check-- split pred: 1 <= Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top <= New_Top && Old_Top <= New_Ret)

root implication check-- split pred: 0 < Old_Top
root implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && New_Ret <= New_Top && 1 == Old_Top && 0 == New_Ret && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (Old_Top <= New_Top && Old_Top <= New_Ret)

root implication check-- split pred: 0 <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: -1 < Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: -1 <= Old_Top
root implication check-- featurePos: (New_Top <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Ret == New_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Ret <= New_Top && 0 == New_Ret)

root from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
root from implication check-- split from pred 1 < New_Ret: not expressive in with conjunctions
root implication check-- split pred: 1 < New_Ret
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 < New_Ret && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: true

root implication check-- split pred: 1 <= New_Ret
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == New_Top && New_Ret <= New_Top && 0 == New_Ret)

root implication check-- split pred: 0 < New_Ret
root implication check-- featurePos: (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret)
root implication check-- featureNeg: (New_Ret == New_Top && New_Ret <= New_Top && 0 == New_Ret)

Predicate: root for k = 2 : New_Ret == New_Top

Houdini AlwaysTrue for k=1 : (New_Ret == 0 && New_Ret <= New_Top && 0 == New_Ret)

root Left implication check-- split pred: New_Top != Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= Old_Top && Old_Top <= New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Left implication check-- split pred: New_Top == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= Old_Top && Old_Top <= New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top)

root Left implication check-- split pred: New_Ret != Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top)
root Left implication check-- featureNeg: (New_Top == Old_Top && New_Ret == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= Old_Top && Old_Top <= New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Left implication check-- split pred: New_Ret == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= Old_Top && Old_Top <= New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top)

root Left from implication check-- split from pred New_Ret != New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret != New_Top: not expressive in with conjunctions
root Left implication check-- split pred: New_Top < Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (Old_Top <= New_Top && Old_Top <= New_Ret)

root Left implication check-- split pred: New_Top <= Old_Top
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Ret <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret)

root Left implication check-- split pred: Old_Top < New_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Ret <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Left implication check-- split pred: Old_Top <= New_Top
root Left implication check-- featurePos: (Old_Top <= New_Top && Old_Top <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Left implication check-- split pred: New_Ret < Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (Old_Top <= New_Top && Old_Top <= New_Ret)

root Left implication check-- split pred: New_Ret <= Old_Top
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Ret <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret)

root Left implication check-- split pred: Old_Top < New_Ret
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret)
root Left implication check-- featureNeg: (New_Top <= Old_Top && New_Ret <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Left implication check-- split pred: Old_Top <= New_Ret
root Left implication check-- featurePos: (Old_Top <= New_Top && Old_Top <= New_Ret)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)

root Left from implication check-- split from pred New_Ret < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Ret < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred New_Top < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred New_Top < New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 == Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (Old_Top <= New_Top && Old_Top <= New_Ret)

root Left implication check-- split pred: 0 == Old_Top
root Left implication check-- featurePos: (New_Top == Old_Top && New_Ret == Old_Top && New_Top <= Old_Top && Old_Top <= New_Top && New_Ret <= Old_Top && Old_Top <= New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top)

root Left from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred 1 == New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 == New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Left implication check-- split pred: 1 <= Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (Old_Top <= New_Top && Old_Top <= New_Ret)

root Left implication check-- split pred: 0 < Old_Top
root Left implication check-- featurePos: (New_Top != Old_Top && New_Ret != Old_Top && New_Top < Old_Top && New_Top <= Old_Top && New_Ret < Old_Top && New_Ret <= Old_Top && 1 == Old_Top && 1 <= Old_Top && 0 < Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (Old_Top <= New_Top && Old_Top <= New_Ret)

root Left implication check-- split pred: 0 <= Old_Top
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Ret <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret)

root Left implication check-- split pred: -1 < Old_Top
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Ret <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret)

root Left implication check-- split pred: -1 <= Old_Top
root Left implication check-- featurePos: (New_Top <= Old_Top && New_Ret <= Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top)
root Left implication check-- featureNeg: (New_Top != Old_Top && New_Ret != Old_Top && Old_Top < New_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret)

root Left from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
root Left from implication check-- split from pred 1 < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 < New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred 1 <= New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 1 <= New_Ret: not expressive in with conjunctions
root Left from implication check-- split from pred 0 < New_Ret: houdini Called with 0 feature vectors
root Left from implication check-- split from pred 0 < New_Ret: not expressive in with conjunctions
Predicate: root Left for k = 1 : None

root Left:  for k = 2 : (New_Ret == 0 && New_Ret <= New_Top && 0 == New_Ret)
Houdini AlwaysTrue for k=1 : (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret)

root Right from implication check-- split from pred New_Top != Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Top != Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Ret == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret == Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Top < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Top < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred Old_Top < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred Old_Top < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Ret < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Ret <= Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret <= Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Ret < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred New_Ret <= New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred New_Ret <= New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 == Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 == New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 == New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred -1 == New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred -1 == New_Ret: not expressive in with conjunctions
root Right implication check-- split pred: 1 == New_Ret
root Right implication check-- featurePos: (1 == New_Ret)
root Right implication check-- featureNeg: (1 < New_Ret)

root Right from implication check-- split from pred 0 == New_Ret: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 == New_Ret: not expressive in with conjunctions
root Right from implication check-- split from pred 1 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 <= Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 <= Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 0 < Old_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 < Old_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 < New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 1 <= New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 1 <= New_Top: not expressive in with conjunctions
root Right from implication check-- split from pred 0 < New_Top: houdini Called with 0 feature vectors
root Right from implication check-- split from pred 0 < New_Top: not expressive in with conjunctions
root Right implication check-- split pred: 1 < New_Ret
root Right implication check-- featurePos: (1 < New_Ret)
root Right implication check-- featureNeg: (1 == New_Ret)

Predicate: root Right for k = 1 : None

root Right:  for k = 2 : (New_Top == Old_Top && New_Ret != Old_Top && New_Ret != New_Top && New_Top <= Old_Top && Old_Top <= New_Top && Old_Top < New_Ret && Old_Top <= New_Ret && New_Top < New_Ret && 0 == Old_Top && 0 <= Old_Top && -1 < Old_Top && -1 <= Old_Top && 1 <= New_Ret && 0 < New_Ret)
===== Final Result for PUT_CountContract

postcondition: 
(New_Top == 0 && 0 <= New_Top && 0 == New_Top && -1 < New_Top && 0 <= New_Ret && -1 < New_Ret && -1 <= New_Ret && -1 <= New_Top && New_Top <= New_Ret)
rounds: 4

simplified post: 
((New_Ret >= 0 && New_Top == 0))
pex time: 51.973042011260986

learn time: 38.10896611213684

Samples: 11

